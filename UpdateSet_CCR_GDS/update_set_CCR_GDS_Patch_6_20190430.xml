<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2019-04-30 18:20:27">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="Global">global</application>
<application_name>Global</application_name>
<application_scope>global</application_scope>
<application_version/>
<collisions/>
<commit_date/>
<deleted/>
<description/>
<inserted/>
<name>CCRGDS_Patch_6_20190425</name>
<origin_sys_id/>
<parent display_value=""/>
<release_date/>
<remote_base_update_set display_value=""/>
<remote_parent_id/>
<remote_sys_id>6bdf4a59db09f70054d8ff621f9619cc</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>zhoujim@nih.gov</sys_created_by>
<sys_created_on>2019-04-30 18:20:27</sys_created_on>
<sys_id>1196280bdb853f00b86770c08c96194a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>zhoujim@nih.gov</sys_updated_by>
<sys_updated_on>2019-04-30 18:20:27</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_5dd52f37dbfd3600f59974131f9619e7</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($rootScope, $scope, $http, spUtil, $timeout, displayInformation) {
  /* widget controller */
  var c = this;
	console.log(c.data.tasks);
	c.pagination = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};
	c.columns = [
		{
			key: 'project_id',
			label: 'Project ID',
			sort: 'asc'
		},
		{
			key: 'project_name',
			label: 'Project Name',
			sort: 'asc'
		},
		{
			key: 'principal_investigator',
			label: 'Principal Investigator',
			sort: 'asc'
		},
		{
			key: 'gdsp_status',
			label: 'GDSP ID',
			sort: 'asc'
		},
		{
			key: 'ic_status',
			label: 'IC ID',
			sort: 'asc'
		},
		/*{
			key: 'exception_request_status',
			label: 'Exception Request ID',
			sort: 'asc'
		},*/
		{
			key: 'submitter',
			label: 'Submitter',
			sort: 'asc'
		},
		{
			key: 'actions',
			label: 'Actions',
			sort: null
		}		
	];
	
	c.getRange = function() {
		var currentSize = c.pagination.currentSize;
		var currentPage = c.pagination.currentPage;
		
		var offset = currentSize * currentPage;
		
		return new Array(Math.floor(c.data.tasks.length / currentSize));
	};
	
	c.setPage = function(index) {
		c.pagination.currentPage = index;
	};
	
	c.toggleSort = function(index) {
		var column = c.columns[index];
		var key = column.key;
		
		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {
			
			var sortAscending = column.sort === 'asc';
			
			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;
			
			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB)
						: keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};
			
			c.data.tasks = c.data.tasks.sort(compareRows);
		}
	};
 //alert(c.data.debug.info);
	//Above is Brian's code, need to read it
	$('.collapse').on('shown.bs.collapse', function() {
    console.log(this);
    $(this).parent().find(".fa-plus-square").removeClass("fa-plus-square").addClass("fa-minus-square");
  }).on('hidden.bs.collapse', function() {
		$(this).parent().find(".fa-minus-square").removeClass("fa-minus-square").addClass("fa-plus-square");
  });
	c.removeItem = function(id) {
		$('#refresh').val('0');
		var $confirm = $('#confirmDiv');
		$confirm.modal('show');
		$('#message').html("Are you sure you want to remove this record?");
		$('#btnYesConfirmYesNo').off('click').click(function() {
			$('#loading').show();
			var data = {
				'id': id,
				'method': 'anything'
			};
			
			var request = {
				method: 'POST',
				url: '/api/naci/gds/deleteGDSRecord',
				headers: {
					'Content-Type': 'application/json'
				},
				data: data
			};			
			
			$http(request).then(handleResponse, handleError);
			
			function handleResponse(response) {
				var result = response.data.result;
				console.log(result);
			}
			
			function handleError(response) {
				console.error(response);
				alert('ERROR');
			}
			
			$confirm.modal('hide');
			$('#loading').hide();
		});
		
		$('#btnNoConfirmYesNo').off('click').click(function(){			
			$confirm.modal('hide');
		});
	};
	
	$scope.displayGDSP = function(id, gdsp_id){
		displayInformation.displayGDSP(id, gdsp_id);
	}
	$scope.displayIC = function(id, ic_id){
		displayInformation.displayIC(id, ic_id);
	}
		
	c.editItem = function(id, access) {
		 $('#refresh').val('0');
			location.replace("$sp.do?id=gds_web_main&amp;itemId=" + id +"&amp;access=" + encodeDecodeData(access, 'encode'));
	};
	
	spUtil.recordWatch($scope, "u_software_solution_gds_project_information", "", function(name, data) {  
		spUtil.update($scope);
	});
	
	function encodeDecodeData(data, flag){
		var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
								encode:function(e){
									var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);
									while(f&lt;e.length){
										n=e.charCodeAt(f++);
										r=e.charCodeAt(f++);
										i=e.charCodeAt(f++);
										s=n&gt;&gt;2;
										o=(n&amp;3)&lt;&lt;4|r&gt;&gt;4;
										u=(r&amp;15)&lt;&lt;2|i&gt;&gt;6;
										a=i&amp;63;
										if(isNaN(r)){
											u=a=64
										}else if(isNaN(i)){
											a=64
										}
										t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a);
									}
									return t
								},
								decode:function(e){
									var t="";
									var n,r,i;
									var s,o,u,a;
									var f=0;e=e.replace(/[^A-Za-z0-9+/=]/g,"");
									while(f&lt;e.length){
										s=this._keyStr.indexOf(e.charAt(f++));
										o=this._keyStr.indexOf(e.charAt(f++));
										u=this._keyStr.indexOf(e.charAt(f++));
										a=this._keyStr.indexOf(e.charAt(f++));
										n=s&lt;&lt;2|o&gt;&gt;4;
										r=(o&amp;15)&lt;&lt;4|u&gt;&gt;2;
										i=(u&amp;3)&lt;&lt;6|a;
										t=t+String.fromCharCode(n);
										if(u!=64){
											t=t+String.fromCharCode(r);
										}
										if(a!=64){
											t=t+String.fromCharCode(i);
										}
									}
									t=Base64._utf8_decode(t);
									return t;
								},
								_utf8_encode:function(e){
									e=e.replace(/rn/g,"n");
									var t="";
									for(var n=0;n&lt;e.length;n++){
										var r=e.charCodeAt(n);
										if(r&lt;128){
											t+=String.fromCharCode(r);
										}else if(r&gt;127&amp;&amp;r&lt;2048){
											t+=String.fromCharCode(r&gt;&gt;6|192);
											t+=String.fromCharCode(r&amp;63|128)
										}else{
											t+=String.fromCharCode(r&gt;&gt;12|224);
											t+=String.fromCharCode(r&gt;&gt;6&amp;63|128);
											t+=String.fromCharCode(r&amp;63|128);
										}
									}
									return t;
								},
								_utf8_decode:function(e){
									var t="";
									var n=0;
									var r=0,c1=0,c2=0;
									while(n&lt;e.length){
										r=e.charCodeAt(n);
										if(r&lt;128){
											t+=String.fromCharCode(r);
											n++;
										}else if(r&gt;191&amp;&amp;r&lt;224){
											c2=e.charCodeAt(n+1);
											t+=String.fromCharCode((r&amp;31)&lt;&lt;6|c2&amp;63);
											n+=2;
										}else{
											c2=e.charCodeAt(n+1);
											c3=e.charCodeAt(n+2);
											t+=String.fromCharCode((r&amp;15)&lt;&lt;12|(c2&amp;63)&lt;&lt;6|c3&amp;63);
											n+=3;
										}
									}
									return t;
								}
							 };

		var result = '';
		if(flag == 'encode'){
			result = Base64.encode(data);
		}else if(flag == 'decode'){
			result = Base64.decode(data);
		}else{
			result = 'ERROR Method';
		}
		
		return result;
	}
	
}
]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;gds-project-table&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;GDS Project Table&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
		data.tasks = [];
		var my_sys_id = gs.getUserID();
		var gpa = gs.getUser().isMemberOf('CCR_GPA');
	  var gpa_asst = gs.getUser().isMemberOf('CCR_GPA_ASST');
	
		data.info = {
			userId: my_sys_id,
			gpa: gpa,
			gpa_asst: gpa_asst
		};
	data.debug = {
		 info: ''
	};
	  //search for project that this person has read or write access.
	 if(gpa || gpa_asst){
		var gr1 = new GlideRecord('u_software_solution_gds_project_information');
			  gr1.orderByDesc('u_number');
				gr1.query();
			while (gr1.next()){
				var item = {};
				item.project_id = gr1.getDisplayValue('u_number');
				item.project_name = gr1.getDisplayValue('u_project_title');
				item.principal_investigator = gr1.getDisplayValue('u_pi_last_name') + ", " + gr1.getDisplayValue('u_pi_first_name'); 
				item.gdsp_status = getGDSPStatus(gr1.getDisplayValue('u_gdsp_status'));
				item.ic_status = getICStatus(gr1.getDisplayValue('u_ic_status'));
				item.exception_request_status = gr1.getDisplayValue('u_er_status');
				item.submitter = gr1.getDisplayValue('u_submitter');
				item.id = gr1.getValue('sys_id');
				//add access
				item.access='Read_and_Write';
				data.tasks.push(item);
			}
	 }else{
			var gds_ids = [];
			var gl = new GlideRecord('u_gds_user_accress_t');
					gl.addQuery('u_user_id', my_sys_id);
					gl.query();
			while (gl.next()){
				var id = gl.getDisplayValue('u_gds_id');
				if(id != null || id.trim().length &gt; 0){
					gds_ids.push(gl.getDisplayValue('u_gds_id'));
				}
			}
			var gr = new GlideRecord('u_software_solution_gds_project_information');
			var tt = gr.addQuery('u_user_id', my_sys_id);
			gr.orderByDesc('u_number');
			if(gds_ids != null){
				for(var i = 0;  i &lt; gds_ids.length; i++){
					tt.addOrCondition('sys_id', gds_ids[i]);
				}
			}
			gr.query();
			while (gr.next()){
				var item = {};
				item.project_id = gr.getDisplayValue('u_number');
				item.project_name = gr.getDisplayValue('u_project_title');
				item.principal_investigator = gr.getDisplayValue('u_pi_last_name') + ", " + gr.getDisplayValue('u_pi_first_name'); 
				item.gdsp_status = getGDSPStatus(gr.getDisplayValue('u_gdsp_status'));
				item.ic_status = getICStatus(gr.getDisplayValue('u_ic_status'));
				item.exception_request_status = gr.getDisplayValue('u_er_status');
				item.submitter = gr.getDisplayValue('u_submitter');
				item.id = gr.getValue('sys_id');
				//add access
				var gt = new GlideRecord('u_gds_user_accress_t');
				gt.addQuery('u_user_id', my_sys_id);
				gt.addQuery('u_gds_id', item.id);
				gt.query();
				gt.next();
				var access = gt.getDisplayValue('u_access');
				if(access == null || access.trim().length == 0){
					item.access='Read_and_Write';
				}else{
					item.access = access;
				}
				data.tasks.push(item);
			}
	 }
	
	function getGDSPStatus(numbers){
		var itemArr = numbers.split(","); 
		if(itemArr.length &gt; 0){
			var res = [];
			for(var i = 0; i &lt; itemArr.length; i++){
				var sysId = '';
				var numberOnly = itemArr[i].trim().substring(8);
				if(numberOnly.indexOf("-") &gt; 0){
					  var temp = numberOnly.split("-");
					 sysId = getSysId('NCI-RITM'+temp[0], temp[1]);				
				}else{
					var req = new GlideRecord('sc_req_item');
							req.addQuery('number', 'NCI-RITM'+itemArr[i].trim().substring(8));
							req.query();
							req.next();
					sysId = req.getDisplayValue('sys_id').toString();
				}
				res.push({
					label: itemArr[i].toString(),
					id: sysId
				});
			}
			return res;
		}else{
			return numbers;
		}
	}
	
	function getICStatus(numbers){
		var itemArr = numbers.split(","); 
		if(itemArr.length &gt; 0){
			var res = [];
			for(var i = 0; i &lt; itemArr.length; i++){
				var sysId = '';
				var numberOnly = itemArr[i].trim().substring(6);
				if(numberOnly.indexOf("-") &gt; 0){
					  var temp = numberOnly.split("-");
					  sysId = getSysId('NCI-RITM'+temp[0], temp[1]);				
				}else{	
						var req = new GlideRecord('sc_req_item');
													req.addQuery('number', 'NCI-RITM'+itemArr[i].trim().substring(6));
													req.query();
													req.next();
					   sysId = req.getDisplayValue('sys_id').toString();
				}
				res.push({
					label: itemArr[i].toString(),
					id: sysId
				});
			}
			return res;
		}else{
			return numbers;
		}
	}
	
	function getSysId(number, v){
			if(number != null) number = number.trim();
			if(v != null) v = v.trim();
			var item = new GlideRecord('u_ccr_tracking_t');
					item.addQuery('u_ticket_number', number);
					item.query();
					item.next();
          var id = item.u_orgid.toString();
			var item1 = new GlideRecord('sc_req_item');
					item1.addQuery('contact_type', id+"="+v);
					item1.query();
					item1.next();
			return item1.sys_id.toString();
	}
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;zhoujim@nih.gov&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2017-04-05 14:14:34&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;5dd52f37dbfd3600f59974131f9619e7&lt;/sys_id&gt;&lt;sys_mod_count&gt;393&lt;/sys_mod_count&gt;&lt;sys_name&gt;GDS Project Table&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_5dd52f37dbfd3600f59974131f9619e7&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;zhoujim@nih.gov&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-04-25 16:57:58&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="panel panel-success panel-area" ng-show="c.data.tasks.length &gt; 0"&gt;
  &lt;div class="panel-heading panel-header" id="heading_savedItems" role="tab"&gt;
    &lt;h4 class="panel-title"&gt;
      &lt;a aria-controls="collapsesavedItems" aria-expanded="true" data-target="#collapsesavedItems" data-toggle="collapse" role="button"&gt;
        &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-minus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
        Genomic Data Sharing Projects &lt;span class="badge" id="ritm_count"&gt;{{ c.data.tasks.length }}&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
  &lt;/div&gt;
  
  &lt;div aria-labelledby="heading_savedItems" class="panel-collapse collapse in" id="collapsesavedItems" role="tabpanel"&gt;
    &lt;table class="table table-bordered table-striped table-condensed table-hover"&gt;
	  &lt;thead&gt;
      &lt;tr&gt;
        &lt;th 
            ng-repeat="column in c.columns track by $index" 
            ng-click="c.toggleSort($index)" 
            style="cursor: pointer"&gt;
        		{{ column.label }}
          	&lt;span 
            	class="glyphicon small" 
              ng-class="{
                        	'glyphicon-chevron-up': column.sort === 'asc',
                        	'glyphicon-chevron-down': column.sort === 'desc'
                        }"&gt;
          	&lt;/span&gt;
        &lt;/th&gt;
      &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tr ng-repeat="row in c.data.tasks track by $index"
          ng-show="$index &gt;= c.pagination.currentPage * c.pagination.currentSize &amp;&amp;
                   $index &lt; (c.pagination.currentPage + 1) * c.pagination.currentSize" id='{{ row.project_id }}'&gt;
        &lt;td class="ritm_number"&gt;{{ row.project_id }}&lt;/td&gt;
        &lt;td class="ritm_number"&gt;{{ row.project_name }}&lt;/td&gt;
        &lt;td class="ritm_number"&gt;{{ row.principal_investigator }}&lt;/td&gt;
        &lt;td class="ritm_number"&gt;
          &lt;span ng-repeat="item in row.gdsp_status track by $index"&gt;
						&lt;a href="" id="{{item.id}}-id" ng-click="displayGDSP(item.id, item.label)"&gt;
          		{{ item.label }}&lt;/a&gt;&lt;span ng-if="$index &lt; row.gdsp_status.length - 1"&gt;,&lt;/span&gt;
          &lt;/span&gt;
        &lt;/td&gt;
        &lt;td class="ritm_number"&gt;
          &lt;span ng-repeat="item in row.ic_status track by $index"&gt;
						&lt;a href="" id="{{item.id}}-id" ng-click="displayIC(item.id, item.label)"&gt;
          		{{ item.label }}&lt;/a&gt;&lt;span ng-if="$index &lt; row.ic_status.length - 1"&gt;,&lt;/span&gt;
          &lt;/span&gt;
        &lt;/td&gt;
        &lt;!--td class="ritm_number"&gt;{{ row.exception_request_status }}&lt;/td --&gt;
        &lt;td class="ritm_number"&gt;{{ row.submitter }}&lt;/td&gt;
        &lt;td ng-show="row.access == 'Read_and_Write'"&gt;
        	&lt;button class="btn btn-sm btn-primary active" ng-click="c.editItem(row.id, row.access)" style="width: 70px; text-align: center;"&gt;
          	View/Edit
         	&lt;/button&gt;
          &lt;button class="btn btn-sm btn-primary active" ng-click="c.removeItem(row.id)"style="width: 70px; text-align: center;"&gt;
            Remove
         	&lt;/button&gt;
       	&lt;/td&gt;
        &lt;td ng-show="row.access == 'Read_Only'"&gt;
        	&lt;button class="btn btn-sm btn-primary active" ng-click="c.editItem(row.id, row.access)" style="width: 70px; text-align: center;"&gt;
          	View
         	&lt;/button&gt; 
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
    &lt;!-- select the page size --&gt;
    &lt;div class="paging-bar"&gt;
        &lt;div class="paging-option"&gt;
          &lt;form class="form-inline"&gt;
            &lt;div class="pagination form-group"&gt;
              &lt;label for="pageSize0"&gt;
                Items per page
              &lt;/label&gt;
              &lt;select 
                id="pageSize0" 
                class="form-control"
                style="display: inline"
                ng-init="c.pagination.currentSize = c.pagination.pageSizes[1]"
                ng-model="c.pagination.currentSize"
                ng-options="sizes for sizes in c.pagination.pageSizes"&gt;
              &lt;/select&gt;
            &lt;/div&gt;
          &lt;/form&gt;  
          &lt;/div&gt;
    &lt;!-- select the page index (offset) --&gt;
     &lt;div class="paging-content"&gt;
    &lt;ul class="pagination" ng-show="c.pagination.currentSize &lt; c.data.tasks.length"&gt;
      &lt;li
        ng-repeat="index in c.getRange() track by $index"
        ng-click="c.setPage($index)"
        &gt;
        &lt;a href=""&gt;
          {{ $index + 1 }}
        &lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div id="confirmDiv" class="modal fade"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                    &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
                &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmYesNo" class="modal-title"&gt;Confirmation&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                &lt;p align="center" id="message"&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnYesConfirmYesNo" 
                type="button" class="btn btn-primary"&gt;Yes&lt;/button&gt;
                &lt;button id="btnNoConfirmYesNo" 
                type="button" class="btn btn-default"&gt;No&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>-772492257</payload_hash>
<remote_update_set display_value="CCRGDS_Patch_6_20190425">1196280bdb853f00b86770c08c96194a</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>zhoujim@nih.gov</sys_created_by>
<sys_created_on>2019-04-30 18:20:27</sys_created_on>
<sys_id>2d96280bdb853f00b86770c08c96194a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>16a556eb0000000001</sys_recorded_at>
<sys_updated_by>zhoujim@nih.gov</sys_updated_by>
<sys_updated_on>2019-04-30 18:20:27</sys_updated_on>
<table/>
<target_name>GDS Project Table</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>a8c3a6dd9849f700b21b7e3205fd760a</update_guid>
<update_guid_history>a8c3a6dd9849f700b21b7e3205fd760a:-772492257,635326ddbc49f7005849cdcf6d9d52d3:-1845847414,14126ed98849f700d9a86b25428f9f85:1064098047,2ba122d97149f7005d25eb7ae09d7bb5:1572028544,4771ea990a49f7001d2dc847726bdaa8:-1795553886,754122992749f7006d721cf538eba167:-1751857588,fd21ee99a649f700711920557ec90661:1512121968,0601ae990649f700c30e758354dd7920:-1137586206,3450e6597849f7000ecd71076c76ce02:2012116368,a79f1e194049f700b37e21f7785ad3f4:-576308340,c69f96199549f700d0de119c57320efd:15109519,288fde958049f7001da61903368dbb5e:-585966417,7831d65da409f7003e0b7823f03001e9:-439639077,31b0525de209f700bdc8d646be4860e0:-1440964765,ac036b49beeaa340c421186aa7b39e65:-424471743,47e26b498aeaa340cdfe320fc6cbaf5e:797842145,bde26b4976eaa340f34bf2e6aadb962b:958954675,9aa2ebc50beaa34047fd7653d49689bf:1979116152,c3922745caeaa3409c81c80497db2ef0:-1519635752,10926749a5eaa3404f87e475ea36a987:-1629840038,7f102f85d9eaa34094f804d6c3ad8b41:1556461000,26102bc568eaa3409bab01ccf0fcb127:-621132632,c100ef85abeaa34079e25eb313e2a543:2062202870,8000e7c517eaa34089f1d4dacc89b87f:1803190659,45ff534532eaa3409d4e1d027f69cc92:-1184345628,54ef9f4552eaa340031c6bd56869c242:-1589211519,48afdb85c1eaa3409a4737bc781408c8:1969376452,353f174577eaa340ad5b33a47d3227fa:-1517476636,b61f530592eaa3409cfef40ee4472204:-2003195337,620f9b05f0eaa3409d7acaad880b44d3:1319641094,393e9705b6eaa34032fd1d97f99febd8:-1866034689,741e534557eaa340225cf633842d245d:-173163408,7e0e9f055beaa340f2772cd5082247c6:-1836125071,2afd9f0597eaa340c43161ae5ca79819:-325324402,f7eddb05c4eaa3409ca7807c2ae2543d:1582330199,bfdd5305b3eaa340a331aabb6093881a:580143569,89bd170534eaa34033e3c8f50442bf6e:-220168096,a4bd1705aeeaa3408f6e411f9cb23448:-498091591,8dadd7c185eaa340a50366aba62158eb:-741927079,559d530585eaa340dd34f8d5f2713613:481394703,8e3d9bc138eaa340e78e0a5762c5c4c4:1724985093,343d53cd79aaa34010d6e1bbc8fb3d71:-790932493,cbb71fcd7caaa340698c6bf9871a9813:437596146,b7875fcde7aaa3403eeff2a7f981fdcc:-1319706049,04675bcd6faaa3403c05dab8315d1f82:308166600,943757cd08aaa340680dcae1fe72f524:-266900458,2d0753cdb5aaa34083fc4280c67a9044:-609091468,11f613cd76aaa340658dc22f374e01ad:-429954459,ed969b8d03aaa34026d2bcaa2cd587cd:-898455901,6986d78d8eaaa3401296b72d080aa0e4:-1316763446,9266d34d5caaa34013f74dc653becf0f:1988081837,6a655b4de4aaa3401137abd6d055bec8:473007524,b54413c968aaa340d358b983d35e6c06:986128005,2aa31749d3aaa34019e9fb9dca1bb00d:-2080368471,3c73d30d60aaa340fa862ec394d20888:-1337840492,dda2970d7a6aa34067cc654d909be959:-2109308872,e6764a7c58ea6340a07ef6b3c0bfaeec:-153064937,4bca69784baa634070b3eb1a7ba0fc6f:209449559,0a15d9b8426a63401dca79483885f135:1781732867,51d415b8246a6340b2de40a403d723a1:880950833,f6c4dd782a6a6340c86fb0283dad7344:182557064,ed734560deee2340049d986074c50dc0:-523493942,a45381609dee2340cbf96b84c933442d:1170861383,4e004dac57ae234056f2e772c4c1d6a1:571062345,2aef38e8edae2340082e909b95b46839:198092355,51df38ac23ae2340ac4ffb5cd3f13961:1407268720,dfbdf82c9fae23402dc847b158310a68:466741665,63ad7c2cc9ae2340ff09e1a4dec69cfb:45577121,369dbc2c0aae23408a6c88a4473b8df7:755173345,837df82c2bae23406cb32e452604f260:-280490008,ae9cf068d0ae2340fbd64d021ed1b919:-171160440,766cf4e8f4ae23407f572cbe8c6617b7:-776811883,a84c38e841ae23407d52c6c110cc3ff7:-796931403,612c34a871ae234089f1eab6251f3d03:161175539,b60c78281cae23402b5cca204ed9dd3c:-1418627405,ebcbf0a8c0ae2340f7339b4d0f6f3efb:1072879848,4779bc2830ae23404f550e565da4a525:110629039,3569bce4e7ae23409576b1f6d5f68caf:1047302007,82597828a1ae23408321a81068078894:315454159,af09f068aeae234002dc4ac9f446ce11:1737095736,13e870680dae2340f0de91825d40fc08:1048435623,f3d8b0e444ae2340ea143fb90def1543:461308378,45d8fc2879ae2340e9a9fbf0f43259a0:-560172549,5ac8bc281cae2340fff6ddc9c677728c:1521056520,82b8b028a2ae23400a6e14379e7d736b:-1002683107,5688782835ae2340449130a3a33b7b27:-418396561,f24874e4f7ae2340ebe4d21a6dd857a5:-789843652,3d18fca4ceae234094acd2640283267b:752331451,bef7bce42eae2340d04051478bb039a7:127787469,84f770a44eae23406f90c62fb848aea0:283519246,18e7b0a0adae2340fd24113a7f99587a:-95959279,84f670e4a5ae234066ec6b2b8d6fbf9b:-1027198143,8fb6b864ebae2340bb8a2da5d08a13ca:1322714458,b196fca427ae23404c5a20fa97c33a74:-251901122,ff6570a4b3ae23407635d24a1c0e5d5c:728488058,406530a416ae23404cd7f7c19b560bbd:-1351277304,6f05b86436ae23401b21424e1241b5c2:-1293495706,ef247c24e6ae2340a6e997233f54844c:-161335416,21f3b82497ae23405113ad97dc1ee9ed:1097043373,f0133ce097ae2340dce139b099094814:177372857,4ad23ce0b6ae2340844f74b7c7a2d10c:673750403,30b2bc20b6ae23402fee50da1425e216:-1961281931,2b2270e084ae2340380b25963ff2c9ab:-551591003,76e13ca021ae2340b5f276fc16ef635b:-1809951667,8fc13060e6ae234086c12364e9df9b43:-1039704984,1b2130609dae2340a306ee4595504b7c:-1039518811,a201bc604bae2340233cd29e16c8bdea:-398936236,e801bc6005ae2340417c17b47c3ff3a9:-1884982402,37b0f860f7ae23406afbd62ecebb4ee6:-1484197805,77a9a05c07e223402a08f030f844be8a:-1355820585,8fa9241c0de22340eb9e35100224759d:-1587786102,2f89205c1fe22340082641ee585de1fe:-623485468,3e89a81c32e22340b2eade1d7e05b77f:278687683,97059ca3906b5f000efe73e102a3b569:775779195,7e537b81fda797007440248c0ad67277:-1928475141,b395e7c5af679700e4fd5cf62617a0bf:-1509504287,a4d41bb8c4e757004035181209224ca6:-378722436,5a3bcffcc0a75700da5282aae91e1ccf:-1428010290,ba2bcb3050e75700cfe9e4e4da6b2d44:1167876277,b42bc77c02a75700d3aa4efbb4989660:1878723061,351b037035e75700a8d98bd170380d5a:2139327250,980bcb30d8e75700a733f2ed6182fbdc:1478890665,84ea8b3c9aa75700be74a2aee05b63d0:-1118232411,11da0b3063e75700c9e23f18d6391db8:1811542906,9a3ffaf4c8a757009847eb2f99ea03ee:1348135904,619655a3c11f5300d13d9a36a68788b2:-97827558,6d0e99471674130035a0fbeafa4345bc:-2112577570,f1fd1d47a574130081e69c9feaf6d852:1359676794,105724c04cb347006ed1411da6b9e2a4:537609717,4b3720002eb3470060ac9ecf12ba9695:-1842292365,9f072080ffb347007d21456468b2d623:1543173087,874cfcb261238300205a7e925377910d:577478997,554cf8f2d32383001f1c78681c4d66d9:1561082095,7549b072382383001d082e27fe166af1:-464358833,b239bc3233238300fc364b6b5d88aa3e:-2109770187,e42970724a2383002a6fedffde587e4b:-1125158089,7616f4fa94ef430047b32f3bf4ceab25:625899013,eca889b183a7cf001587ab0132193542:577478997,a0cc8e64783acb002ae02c68e98de5e3:129394605,c7ac0ee4723acb007471b85b8a9d2af1:-401888109,859c0628463acb008c6c03cd8c6ae26b:54521105,1ca5aa56632a87005593f9d537b3c61d:7524037,44d26ad2572a87003c8469599ae80d80:343581787,3381aa12402a87002def54ef33d251c1:-499965516,8ba02e12632a8700747fd0c07781e957:-1944885967,5218979f0ede8300c04cb770eedb6f05:-1554087865,5218979f0ede8300c04cb770eedb6f05:-1554087865,5218979f0ede8300c04cb770eedb6f05:-1554087865</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_47a5f364dbe2ba00f59974131f96197a</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $http, spUtil) {
  /* widget controller */
  var c = this;
	c.pagination = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns = [
		{
			key: 'gdsp_id',
			label: 'GDSP ID',
			sort: 'asc'
		},
		{
			key: 'principal_investigator',
			label: 'Principal Investigator',
			sort: 'asc'
		},
		{
			key: 'protocol',
			label: 'Parent Protocol',
			sort: "asc"
		},
		{
			key: 'project_name',
			label: 'Study Name',
			sort: 'asc'
		},
		{
			key: 'submitted_by',
			label: 'Submitted By',
			sort: 'asc'
		},
		{
			key: 'submitted_date',
			label: 'Submitted Date',
			sort: 'asc'
		},
		{
			key: 'status',
			label: 'Status',
			sort: 'asc'
		},
		{
			key: 'last_update_date',
			label: 'Last Update Date',
			sort: 'asc'
		},
		{
			key: 'approval',
			label: 'Approval',
			sort: null
		},
		
		{
			key: 'actions',
			label: 'Actions',
			sort: null
		}		
	];
	
	c.getRange = function() {
		var currentSize = c.pagination.currentSize;
		var currentPage = c.pagination.currentPage;
		
		var offset = currentSize * currentPage;
		
		return new Array(Math.ceil(c.data.approvalTasks.length / currentSize));
	};
	
	c.setPage = function(index) {
		c.pagination.currentPage = index;
	};
	
	c.toggleSort = function(index) {
		var column = c.columns[index];
		var key = column.key;
		
		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {
			
			var sortAscending = column.sort === 'asc';
			
			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;
			
			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB)
						: keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};
			
			c.data.approvalTasks = c.data.approvalTasks.sort(compareRows);
		}
	};
	//for reviewed table
	c.pagination1 = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns1 = [
		{
			key: 'gdsp_id',
			label: 'GDSP ID',
			sort: 'asc'
		},
		{
			key: 'principal_investigator',
			label: 'Principal Investigator',
			sort: 'asc'
		},
		{
			key: 'protocol',
			label: 'Parent Protocol',
			sort: 'asc'
		},		{
			key: 'project_name',
			label: 'Study Name',
			sort: 'asc'
		},
		{
			key: 'submitted_by',
			label: 'Submitted By',
			sort: 'asc'
		},
		{
			key: 'submitted_date',
			label: 'Submitted Date',
			sort: 'asc'
		},
		{
			key: 'status',
			label: 'Status',
			sort: 'asc'
		},
		{
			key: 'last_update_date',
			label: 'Last Update Date',
			sort: 'asc'
		},
		{
			key: 'approval',
			label: 'Approval',
			sort: null
		},
		
		{
			key: 'actions',
			label: 'Actions',
			sort: null
		}		
	];
	
	c.getRange1 = function() {
		var currentSize = c.pagination1.currentSize;
		var currentPage = c.pagination1.currentPage;
		
		var offset = currentSize * currentPage;
		
		return new Array(Math.ceil(c.data.reviewedTasks.length / currentSize));
	};
	
	c.setPage1 = function(index) {
		c.pagination1.currentPage = index;
	};
	
	c.toggleSort1 = function(index) {
		var column = c.columns1[index];
		var key = column.key;
		
		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {
			
			var sortAscending = column.sort === 'asc';
			
			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;
			
			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB)
						: keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};
			
			c.data.reviewedTasks = c.data.reviewedTasks.sort(compareRows);
		}
	};

	//start client JS
  $('.collapse').on('shown.bs.collapse', function() {
      $(this).parent().find(".fa-plus-square").removeClass("fa-plus-square").addClass("fa-minus-square");
  }).on('hidden.bs.collapse', function() {
      $(this).parent().find(".fa-minus-square").removeClass("fa-minus-square").addClass("fa-plus-square");
  });	
	
	// register setSelectedGDSRow
	window.setSelectedGDSRow = function(id) {
		var matches = c.data.approvalTasks.filter(function(e) {
			return e.doc_id == id;
		});
		
		if (!matches.length) return;
		
		var index = c.data.approvalTasks.indexOf(matches[0]);
		c.setPage(Math.floor(index / c.pagination.currentSize));
		$scope.$apply();
	}
	
	window.setSelectedGDSReviewedRow = function(id) {
		var matches = c.data.reviewedTasks.filter(function(e) {
			return e.doc_id == id;
		});
		
		if (!matches.length) return;
		
		var index = c.data.reviewedTasks.indexOf(matches[0]);
		c.setPage(Math.floor(index / c.pagination.currentSize));
		$scope.$apply();
	}
	
	var names=['investigator','pTitle','pBranch','email','phone', 'date', 'projectNumber', 'projectName', 'simpleSize','prospective', 'restrospective', 'human', 'nonHuman', 'germLine','somatic', 'dnaType', 'rnaType',  'microbiome', 'mitochrondria', 'otherType', 'specifyOtherType', 'snpArrayData', 'numSNP', 'expressionArray', 'numExpression','methylationArray', 'numMethylation','arrayDerive', 'microarrayData', 'sequenceData', 'somaticSnv', 'arrayCgh', 'wholeGenome', 'wholeExome', 'targetGenome', 'targetExome', 'wholeTranscriptome', 'targetTrabscriptome', 'epigenomicMark', 'sanger', 'rrna', 'association', 'arrayDerivedExpression', 'rnaExpression', 'derivedMethylation', 'otherAnalysis', 'spcifiedOtherAnalysis', 'individual', 'aggregate', 'notApplicableDataForm', 'arrayExpress', 'cancerGenomics', 'clinVar', 'dbGap', 'dbSnp', 'dbVar', 'ena', 'genBank', 'geo', 'mgi', 'sra', 'traceArchive', 'wormbase', 'zfin', 'OtherRepository', 'specifiedRepository','phenotype', 'exposure', 'clinicalData', 'specifiedClinicalData', 'protocol', 'specifiedProtocol', 'instrument', 'specifiedInstrument', 'surveyTool', 'otherCompanion', 'specifiedCompanion', 'dataCheck', 'publication', 'otherSubmission', 'psecifiedOtherSubmission', 'noHumanData', 'noLimitation','limitedOnly', 'limitedPurpose','relateToDisease','orginId', 'version','rat', 'mouse', 'celegans', 'drosophila', 'yeast', 'yeastSpecies', 'bacteria', 'bacteriaSpecies','noHumanOther', 'numDerivedGenotype', 'numMicroarrayData', 'numSquenceData', 'numSomaticSnv', 'numArrayCgh','numWholeGenome', 'numWholeExome', 'numTargetGenome', 'numTargetedExome', 'numWholeTranscriptome', 'numTargetedTranscriptome', 'numEpigenomic', 'numSanger', 'numRrna'];
	var textFields = ['investigator','pTitle','pBranch','email','phone', 'date', 'projectNumber','projectName', 'simpleSize','specifyOtherType','spcifiedOtherAnalysis', 'specifiedRepository', 'specifiedClinicalData', 'specifiedProtocol', 'specifiedInstrument','specifiedCompanion', 'psecifiedOtherSubmission', 'orginId', 'version','numSNP','numExpression','numMethylation', 'yeastSpecies', 'bacteriaSpecies', 'noHumanOther', 'numDerivedGenotype', 'numMicroarrayData', 'numSquenceData', 'numSomaticSnv', 'numArrayCgh','numWholeGenome', 'numWholeExome', 'numTargetGenome', 'numTargetedExome', 'numWholeTranscriptome', 'numTargetedTranscriptome', 'numEpigenomic', 'numSanger', 'numRrna']; 
	var sessionId = c.data.info.sessionId;
	var userId = c.data.info.userId;
	var gpa = c.data.info.gpa;
	var sd = c.data.info.sd;
	var gpa_asst = c.data.info.gpa_asst;
	var gpa_asst_apprv = (c.data.info.gpa_asst_apprv == 'true');
 
	//load approval records if itemId is not null
	
	c.view = function(doc_id, sys_id, state, stage, ticket_id){
		$('#refresh').val('0');
		$('#rejectError').hide();
		$('#commentId1').css("background-color", "");
		fetchDetails(doc_id, sys_id, state, stage, ticket_id);
	}
	c.report = function(sys_id, gdsp_id){
		$('#refresh').val('0');
		window.open('$sp.do?id=gdsp_report_page&amp;itemId='+sys_id+'&amp;ticket='+gdsp_id, '_BLANK');
	}
	

function fetchDetails(number, approvalId, state, stage, ticket_id){
		var variables= {};
		data = {
			requestedid : number	
		};
    var request = {
			url: '/api/naci/gdspapi/fetchSubmittedRequestData',
			method: 'POST',
			beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
			headers: {
				'Content-Type': 'application/json'
			},
			data: data
		};
		$http(request).then(handleResponse, handleError);
		function handleResponse(response){
			var result = response.data.result;
			  var variables = result.variables;
			  var comments = "";
			  comments = result.comments;
			  var comment_str = parse(comments);
			  $('#displayRequestId').html(ticket_id);
			  //reset SD selection and comments
			  $('#selectSD').val('NONE');
			  $('#commentId1').val('');
			  resetRequestValue();
			  loadApprovalData(variables);
			  clearDiv();
				$('#commentReviewId1').empty();
				$('#commentReviewId1').append(comment_str);

				$('#commentId1').show();
				$('#commentId1Lable').show();

				if(comment_str .length &lt; 137){
							 $('#pre_comments_div').hide();
				 }else{
							 $('#pre_comments_div').show();
				 }
				$('#hiddenRequestId').val(approvalId);
				$('#hiddenRequestItemId').val(number);
			  $('#roleId').val('GPA');
				$('#comments_div').show();
			  if(stage == 'Waiting for PI Resubmit'){
					 $('#comments_div').hide();
					 $('#submitButton').hide();
					 $('#closeButton').show();
				}else if(state == 'approved' || state.indexOf('not_required') &gt;=0 || (gpa_asst &amp;&amp; !gpa_asst_apprv)){
					 $('#comments_div').hide();
					 $('#submitButton').hide();
					 $('#closeButton').show();
				}else if(state == 'requested' || state == 'rejected'){
					 if((stage == 'Waiting for GPA Review' || stage == 'SD Rejected - Waiting for GPA Review') &amp;&amp; (gpa || gpa_asst)){
							$('#comments_div').show();
							$('#sd_div').show();
							$('#submitButton').show();
							$('#closeButton').hide();
					 }else if(stage == 'Waiting for SD Review' &amp;&amp; !sd){
							$('#comments_div').show();
							$('#sd_div').hide();
							$('#submitButton').show();
							$('#closeButton').hide();
					 }else if(stage == 'Waiting for SD Review' &amp;&amp; sd){
							$('#comments_div').show();
							$('#sd_div').hide();
							$('#submitButton').show();
							$('#closeButton').hide();
					 }else if(stage == 'SD Approved'){
								$('#comments_div').hide();
								$('#sd_div').hide();
								$('#submitButton').hide();
								$('#closeButton').show();
					 }else{
								$('#comments_div').hide();
								$('#sd_div').hide();
								$('#submitButton').hide();
								$('#closeButton').show();
					 }
				}else{
					 $('#comments_div').show();
					 $('#submitButton').show();
					 $('#closeButton').hide();
				}
				var ticketN = $('#'+number+'_ticket').val();
        $('#displayRequestId').html(ticketN);		
			  $('#displayRequests').modal('show').on('shown.bs.modal', function(){$('#displayRequests .modal-content').scrollTop(0);}); 
		}
		function handleError(response){
			console.error(response);
			alert('ERROR');
		}
		$('#hiddenStage').val(stage);
 }	
    function clearDiv(){
		$('#comments_div').hide();
		$('#sd_div').hide();
		$('#submitButton').hide();
		$('#closeButton').hide();
	}
	
	function parse(allcomments) {
	 var comments = allcomments.split("ENDCOMMENTS");
	 var commentsblock = '&lt;table border="1" width="100%"&gt;&lt;tr&gt;&lt;th&gt;Role&lt;/th&gt;&lt;th&gt;Approver&lt;/th&gt;&lt;th&gt;Approval Status&lt;/th&gt;&lt;th&gt;Comments&lt;/th&gt;&lt;th&gt;Time&lt;/th&gt;&lt;/tr&gt;'
	 for(i = 0; i &lt; comments .length; i++){
			 if (comments[i].length &gt; 40) { 
				 if (comments[i][0] == '\n') {
						 var lastI = 0;
						 while (lastI &lt; comments[i].length &amp;&amp; comments[i][lastI] == '\n') 
									lastI ++;
						 comments[i] = comments[i].substring(lastI,comments[i].length);
				 }
				 var t = comments[i].substring(0,22);
				 var approver = comments[i].substring(comments[i].indexOf('(ENDROLE)')+9,comments[i].length);
				 var results = comments[i].substring(comments[i].indexOf('(Additional comments)') + 57,comments[i].indexOf('(Additional comments)') + 65);
				 var comm= comments[i].substring(comments[i].indexOf('(Additional comments)') + 66, comments[i].indexOf('(role)'));
				 var role = comments[i].substring(comments[i].indexOf('(role)') + 6, comments[i].indexOf('(ENDROLE)')); 
				 commentsblock = commentsblock + "&lt;tr&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + role + "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + approver + "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + results+ "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + comm + "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + t + "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;/tr&gt;";
			 }
	 }
	 commentsblock = commentsblock + "&lt;/table&gt;";

	return commentsblock;
	}	
	
	function loadApprovalData(data){
	  for(key in data){
			var value = getValue(key, data[key]);
			$('#'+key+"1").html(value);
		}
	}
	
  function getValue(name, value){
		 if(textFields.indexOf(name) != -1 ){ 
        if(name == 'date'){
           return getConvertedValue(value, '1');
        }else{
           return value;
        }
     }else{
        if(value == "true"){
           return '&lt;input type="checkbox" id="'+ name +'1" checked="true" disabled="true"/&gt;';
        }else{
           return '&lt;input type="checkbox" id="' + name+ '1" disabled="true"/&gt;';
        }
        return value; 
     }
  }	
	
	function getConvertedValue(value, flag){
		 if(flag == '0'){
				var values = value.split('/');
				return values[0]+'-'+values[1] + '-' + values[2];
			}else {
				var values = value.split('-');
				return values[0]+'/'+values[1] + '/' + values[2];
			}
	}	
	
	  function resetRequestValue(){
    var i = 0;
    for( i = 0; i!= names.length; i++){
      if(textFields.indexOf(names[i]) != -1 ){ 
            $('#'+names[i] + "1").html('');
      }else{
				   $('#'+names[i] +"1").html('&lt;input type="checkbox" id="'+ names[i] +"1" + '" disabled="true"/&gt;');
           $('#'+names[i] + "1").prop('checked', false); 
		       $('#'+names[i] + "1").removeAttr("disabled");
      }
    }
  }	
	
spUtil.recordWatch($scope, "sysapproval_approver", "", function(name, data) {  
			spUtil.update($scope);
	});	
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.form-control1 {&amp;#13;
    display: block;&amp;#13;
    width: 20%;&amp;#13;
    height: 30px;&amp;#13;
    padding: 6px 12px;&amp;#13;
    font-size: 14px;&amp;#13;
    line-height: 1.42857;&amp;#13;
    color: #555555;&amp;#13;
    background-color: #fff;&amp;#13;
    background-image: none;&amp;#13;
    border: 1px solid #ccc;&amp;#13;
    border-radius: 4px;&amp;#13;
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);&amp;#13;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);&amp;#13;
    -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;&amp;#13;
    -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;&amp;#13;
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;&amp;#13;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;gds-gps-approval-table&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;GDS GPA Approval Table&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	data.approvalTasks = [];
	data.reviewedTasks = [];
	data.info = [];
	var session_id = gs.getSessionToken();
	var my_sys_id = gs.getUserID();
	var gr = gs.getUser(); 
	var gpa = gr.isMemberOf('CCR_GPA');
	var gpa_asst = gr.isMemberOf('CCR_GPA_ASST');
	var sd = gr.isMemberOf('CCR_SD');
	var gpa_asst_apprv = gs.getProperty("CCR_GPA_ASST_APPRV");
	
	data.info = {
		userId: my_sys_id,
		sessionId: session_id,
		gpa: gpa,
		gpa_asst: gpa_asst,
		sd: sd, 
		gpa_asst_apprv: gpa_asst_apprv
	};
	if(gpa || gpa_asst){
		var gr1 = new GlideRecord("sc_cat_item");
				gr1.addQuery("short_description", "CCR Genomic Data Sharing Plan");
				gr1.query();	
				gr1.next();
				var cat_item_id = gr1.getValue('sys_id');

			 var gr_approval_items = GlideRecord('sysapproval_approver');
			 var req_item = gr_approval_items.addJoinQuery('sc_req_item','document_id','sys_id');
			 req_item.addCondition('cat_item', cat_item_id);
       //if(!gpa_asst){
				//	gr_approval_items.addQuery('approver', my_sys_id); 
			 //}
			 gr_approval_items.addQuery('source_table','sc_req_item'); 
			 gr_approval_items.orderByDesc('sys_updated_on');  
			 gr_approval_items.query();
			 while (gr_approval_items.next()){
				 var orginId = '';
				 var tickerNum = '';
				 var org_ticket_num = '';
				 var version = '';
				 var hasParent = '';
				 var selectedOrginId = '';

				 var docId = gr_approval_items.document_id;

				 selectedOrginId = gr_approval_items.document_id.contact_type;
				 if(selectedOrginId == '' || selectedOrginId === undefined || selectedOrginId == 'Web' ){
							orginId = gr_approval_items.document_id.sys_id;
							org_ticket_num = gr_approval_items.document_id.number;
							hasParent = 'false';
					}else{
						 var orgIds = selectedOrginId.split("=");
						 var gr_tracking_item = GlideRecord('u_ccr_tracking_t');
						 gr_tracking_item.addQuery('u_orgid',orgIds[0]);
						 gr_tracking_item.query();

						 if(gr_tracking_item.getRowCount() &gt; 0){
									gr_tracking_item.next();
									orginId = gr_tracking_item.u_orgid;
									org_ticket_num = gr_tracking_item.u_ticket_number;
									version = orgIds[1];
									hasParent = 'true';
						 }else {
									orginId = gr_approval_items.document_id.sys_id;
									org_ticket_num = gr_approval_items.document_id.number;
									hasParent = 'false';
						 }
					}

					var ticket_number = '';
					if(hasParent == 'true'){
							ticket_number = 'CCR_GDSP' + org_ticket_num.substring(8) + '-' + version;
					}else{
							ticket_number = "CCR_GDSP" + gr_approval_items.sysapproval.number.substring(8);
					}

					var stage_v = gr_approval_items.document_id.context.stage.name;		
							
					if(!((stage_v == 'Waiting for GPA Review' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review') || (stage_v == 'SD Rejected - Waiting for GPA Review' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'SD Rejected - Waiting for GPA Review')) &amp;&amp;  (gr_approval_items.state == 'approved' || (gr_approval_items.state = 'rejected' &amp;&amp; stage_v == 'Waiting for PI Resubmit' &amp;&amp;  gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review'))){
							if(stage_v != 'Completed' || (stage_v == 'Completed' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review')){			
										var item = {};
										item.gdsp_id = ticket_number;
										item.principal_investigator = gr_approval_items.document_id.u_investigator.toString();
										item.project_name = gr_approval_items.document_id.u_project_name.toString();
								    var parent =  getParentProtocol(item.gdsp_id);
								    item.protocol = parent.protocol == null ? '' : parent.protocol.toString();
										item.submitted_by = gr_approval_items.sysapproval.opened_by.name.toString();
										item.submitted_date = gr_approval_items.document_id.sys_created_on.toString();
										item.status = gr_approval_items.document_id.context.stage.name.toString();
										item.last_update_date = gr_approval_items.sys_updated_on.toString();
										item.stage = stage_v.toString();
										item.sys_id = gr_approval_items.sys_id.toString();
										item.doc_id = gr_approval_items.document_id.toString();
										item.state = gr_approval_items.state.toString();
								   //this is ugly code, refactor later
								    var matches = data.reviewedTasks.filter(function(el, idx) {
											return el.gdsp_id === ticket_number;
										});
										if (matches.length) {
											var match = matches[0];
											if (new Date(item.last_update_date) &gt; new Date(match.last_update_date)) {
												var index = data.reviewedTasks.indexOf(match);
												data.reviewedTasks[index] = item;
											}
										} else { 
											data.reviewedTasks.push(item);
										}
							}
						}
							if((stage_v == 'Waiting for GPA Review' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review') || (stage_v == 'SD Rejected - Waiting for GPA Review' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'SD Rejected - Waiting for GPA Review')){
								  var items = {};
									items.gdsp_id = ticket_number;
									items.principal_investigator = gr_approval_items.document_id.u_investigator.toString();
									items.project_name = gr_approval_items.document_id.u_project_name.toString();
									var parent1 =  getParentProtocol(items.gdsp_id);
								  items.protocol = parent1.protocol == null ? '' : parent1.protocol.toString();
									items.submitted_by = gr_approval_items.sysapproval.opened_by.name.toString();
									items.submitted_date = gr_approval_items.document_id.sys_created_on.toString();
									items.status = gr_approval_items.document_id.context.stage.name.toString();
									items.last_update_date = gr_approval_items.sys_updated_on.toString();
									items.stage = stage_v.toString();
									items.sys_id = gr_approval_items.sys_id.toString();
									items.doc_id = gr_approval_items.document_id.toString();
									items.state = gr_approval_items.state.toString();		
								  if(gpa_asst &amp;&amp; gr_approval_items.approver.sys_id.toString() == my_sys_id){
										data.approvalTasks.push(items);
									}else if(!gpa_asst  &amp;&amp; gr_approval_items.approver.sys_id.toString() == my_sys_id){
										data.approvalTasks.push(items);
									}
							}
			}
	}	
	function getParentProtocol(number){
		var value = {};
		var u_project = new GlideRecord('u_software_solution_gds_project_information');
		    u_project.addQuery('u_gdsp_status', 'CONTAINS', number);
		    u_project.query();
		while(u_project.next()){
						value.protocol = u_project.getValue('u_parent_project');
		}
		return value;
	}
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;zhoujim@nih.gov&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2017-05-02 19:50:24&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;47a5f364dbe2ba00f59974131f96197a&lt;/sys_id&gt;&lt;sys_mod_count&gt;219&lt;/sys_mod_count&gt;&lt;sys_name&gt;GDS GPA Approval Table&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_47a5f364dbe2ba00f59974131f96197a&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;zhoujim@nih.gov&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-04-26 14:21:51&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;
  &lt;div class="panel panel-success panel-area" ng-show="c.data.approvalTasks.length &gt; 0"&gt;
    &lt;div class="panel-heading panel-header" id="heading_gpaApprovalItems" role="tab"&gt;
      &lt;h4 class="panel-title"&gt;
        &lt;a aria-controls="collapsegpaApprovalItems" aria-expanded="true" data-target="#collapsegpaApprovalItems" data-toggle="collapse" role="button"&gt;
          &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-minus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
          Genomic Data Sharing Plans Waiting for GPA Approval&lt;span class="badge" id="ritm_count"&gt;{{ c.data.approvalTasks.length }}&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
    &lt;/div&gt;
    &lt;div aria-labelledby="heading_gpaApprovalItems" class="panel-collapse collapse in" id="collapsegpaApprovalItems" role="tabpanel"&gt;
      &lt;table class="table table-bordered table-striped table-condensed table-hover"&gt;
        &lt;thead&gt;
          &lt;tr&gt;
            &lt;td colspan="9"&gt;
              &lt;form class="form-inline"&gt;
                &lt;label for="search_savedGDSP" class="label-hidden"&gt;Search:&lt;/label&gt;
                &lt;input id="search_savedGDSP"  type="text" class="form-control1" ng-model="searchSavedGDSP" placeholder="Search"/&gt;
              &lt;/form&gt;  
            &lt;/td&gt;  
          &lt;/tr&gt;            
          &lt;tr&gt;
            &lt;th 
                ng-repeat="column in c.columns track by $index" 
                ng-click="c.toggleSort($index)" 
                style="cursor: pointer"&gt;
              {{ column.label }}
              &lt;span 
                    class="glyphicon small" 
                    ng-class="{
                              'glyphicon-chevron-up': column.sort === 'asc',
                              'glyphicon-chevron-down': column.sort === 'desc'
                              }"&gt;
              &lt;/span&gt;
            &lt;/th&gt;
          &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tr ng-repeat="row in c.data.approvalTasks | filter: searchSavedGDSP "
            ng-show="$index &gt;= c.pagination.currentPage * c.pagination.currentSize &amp;&amp;
                     $index &lt; (c.pagination.currentPage + 1) * c.pagination.currentSize" id="{{row.doc_id}}"&gt;
          &lt;td class="ritm_number"&gt;{{ row.gdsp_id }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.principal_investigator }}&lt;/td&gt;
           &lt;td class="ritm_number"&gt;{{ row.protocol }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.project_name }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.submitted_by }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.submitted_date }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.status }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.last_update_date }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;
            &lt;span ng-switch on='row.stage'&gt;
              &lt;span ng-switch-when='Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
              &lt;span ng-switch-when='Waiting for SD Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
              &lt;span ng-switch-when='SD Rejected - Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
              &lt;span ng-switch-when='Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted"  title="Request Submitted"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
              &lt;span ng-switch-when='SD Rejected - Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
              &lt;span ng-switch-default&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="SD Approved" title="SD Approved"/&gt;&lt;/span&gt;
            &lt;/span&gt; 
          &lt;/td&gt;
          &lt;td&gt;
            &lt;button class="btn btn-sm btn-primary active" ng-click="c.view(row.doc_id, row.sys_id, row.state, row.stage, row.gdsp_id)" style="width: 70px; text-align: center;"&gt;
              View
            &lt;/button&gt;
            &lt;button class="btn btn-sm btn-primary active" ng-click="c.report(row.doc_id, row.gdsp_id)"style="width: 70px; text-align: center;"&gt;
              Export
            &lt;/button&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
      &lt;!-- select the page size --&gt;
      &lt;div class="paging-bar"&gt;
        &lt;div class="paging-option"&gt;
          &lt;form class="form-inline"&gt;
            &lt;div class="pagination form-group"&gt;
              &lt;label for="pageSize2"&gt;
                Items per page
              &lt;/label&gt;

              &lt;select 
                      id="pageSize2" 
                      class="form-control"
                      style="display: inline"
                      ng-init="c.pagination.currentSize = c.pagination.pageSizes[0]"
                      ng-model="c.pagination.currentSize"
                      ng-options="sizes for sizes in c.pagination.pageSizes"&gt;
              &lt;/select&gt;
            &lt;/div&gt;
          &lt;/form&gt;  
        &lt;/div&gt;
        &lt;!-- select the page index (offset) --&gt;
        &lt;div class="paging-content"&gt;
          &lt;ul class="pagination" ng-show="c.pagination.currentSize &lt; c.data.approvalTasks.length"&gt;
            &lt;li
                ng-repeat="index in c.getRange() track by $index"
                ng-click="c.setPage($index)"
                &gt;
              &lt;a href=""&gt;
                {{ $index + 1 }}
              &lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="panel panel-success panel-area" ng-show="c.data.reviewedTasks.length &gt; 0"&gt;
    &lt;div class="panel-heading panel-header" id="heading_gpaReviewedItems" role="tab"&gt;
      &lt;h4 class="panel-title"&gt;
        &lt;a aria-controls="collapsegpaReviewedItems" aria-expanded="true" data-target="#collapsegpaReviewedItems" data-toggle="collapse" role="button"&gt;
          &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-plus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
          Genomic Data Sharing Plans reviewed by GPA &lt;span class="badge" id="ritm_count"&gt;{{ c.data.reviewedTasks.length }}&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
    &lt;/div&gt;

    &lt;div aria-labelledby="heading_gpaReviewedItems" class="panel-collapse collapse" id="collapsegpaReviewedItems" role="tabpanel"&gt;
      &lt;table class="table table-bordered table-striped table-condensed table-hover"&gt;
        &lt;thead&gt;
          &lt;tr&gt;
            &lt;td colspan="9"&gt;
              &lt;form class="form-inline"&gt;
                &lt;label for="search_submittedGDSP" class="label-hidden"&gt;Search:&lt;/label&gt;	
                &lt;input id="search_submittedGDSP" type="text" class="form-control1" ng-model="searchSubmittedGDSP" placeholder="Search"/&gt;
              &lt;/form&gt;  
            &lt;/td&gt;  
          &lt;/tr&gt; 
          &lt;tr&gt;
            &lt;th 
                ng-repeat="column in c.columns1 track by $index" 
                ng-click="c.toggleSort1($index)" 
                style="cursor: pointer"&gt;
              {{ column.label }}
              &lt;span 
                    class="glyphicon small" 
                    ng-class="{
                              'glyphicon-chevron-up': column.sort === 'asc',
                              'glyphicon-chevron-down': column.sort === 'desc'
                              }"&gt;
              &lt;/span&gt;
            &lt;/th&gt;
          &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tr ng-repeat="row in c.data.reviewedTasks  | filter:searchSubmittedGDSP" 
            ng-show="$index &gt;= c.pagination1.currentPage * c.pagination1.currentSize &amp;&amp;
                     $index &lt; (c.pagination1.currentPage + 1) * c.pagination1.currentSize" id="{{row.doc_id}}"&gt;
          &lt;td class="ritm_number"&gt;{{ row.gdsp_id }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.principal_investigator }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.protocol}}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.project_name }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.submitted_by }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.submitted_date }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.status }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.last_update_date }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;
            &lt;span ng-switch on='row.stage'&gt;
              &lt;span ng-switch-when='Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
              &lt;span ng-switch-when='Waiting for SD Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
              &lt;span ng-switch-when='SD Rejected - Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
              &lt;span ng-switch-when='Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
              &lt;span ng-switch-when='SD Rejected - Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
              &lt;span ng-switch-default&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="SD Approved" title="SD Approved"/&gt;&lt;/span&gt;
            &lt;/span&gt; 
          &lt;/td&gt;
          &lt;td &gt;
            &lt;button class="btn btn-sm btn-primary active" ng-click="c.view(row.doc_id, row.sys_id, row.state, row.stage,row.gdsp_id)" style="width: 70px; text-align: center;"&gt;
              View
            &lt;/button&gt;
            &lt;button class="btn btn-sm btn-primary active" ng-click="c.report(row.doc_id, row.gdsp_id)"style="width: 70px; text-align: center;"&gt;
              Export
            &lt;/button&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
      &lt;!-- select the page size --&gt;
      &lt;div class="paging-bar"&gt;
        &lt;div class="paging-option"&gt;
          &lt;form class="form-inline"&gt;
            &lt;div class="pagination form-group"&gt;
              &lt;label for="pageSize3"&gt;
                Items per page
              &lt;/label&gt;

              &lt;select 
                      id="pageSize3" 
                      class="form-control"
                      style="display: inline"
                      ng-init="c.pagination1.currentSize = c.pagination1.pageSizes[1]"
                      ng-model="c.pagination1.currentSize"
                      ng-options="sizes for sizes in c.pagination1.pageSizes"&gt;
              &lt;/select&gt;
            &lt;/div&gt;
          &lt;/form&gt;  
        &lt;/div&gt;
        &lt;!-- select the page index (offset) --&gt;
        &lt;div class="paging-content"&gt;
          &lt;ul class="pagination" ng-show="c.pagination1.currentSize &lt; c.data.reviewedTasks.length"&gt;
            &lt;li
                ng-repeat="index in c.getRange1() track by $index"
                ng-click="c.setPage1($index)"
                &gt;
              &lt;a href=""&gt;{{ $index + 1 }}&lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;  
&lt;/div&gt;
]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>1179018272</payload_hash>
<remote_update_set display_value="CCRGDS_Patch_6_20190425">1196280bdb853f00b86770c08c96194a</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>zhoujim@nih.gov</sys_created_by>
<sys_created_on>2019-04-30 18:20:27</sys_created_on>
<sys_id>5596280bdb853f00b86770c08c96194a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>16a5a061d0c0000001</sys_recorded_at>
<sys_updated_by>zhoujim@nih.gov</sys_updated_by>
<sys_updated_on>2019-04-30 18:20:27</sys_updated_on>
<table/>
<target_name>GDS GPA Approval Table</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>5b994b658cc93b00b069e12bc95c03cd</update_guid>
<update_guid_history>5b994b658cc93b00b069e12bc95c03cd:1179018272,a989cfe51fc93b00bd5495be03973e88:-733213142,d74987e5e3c93b0017f90b5df977c75e:1702840668,8af88f25bac93b00c60597bb6b33260b:1010886580,94142bd9358df7005d5f7b9079c31da4:-1347929161,71da8b11a94df700463ed3ada35a4c40:1721088076,21ba0b11f64df7005403d7d1ab07e6bd:1593039045,329a4311124df700ee55fad9bbc1bcf5:-243636723,455a8fdd410df700170eada097abba28:-1299119688,45294b1d650df700297504dfe294d75a:336283021,47090b5de80df700ec11fe0b2709a15b:-702698775,79984fd9620df700d3325e48e67bc78f:656341228,77c50f95cb0df70022f7c1ddeb3cf994:-1542873319,79c54b19440df700a7bf2182e316b57e:-610200352,c5b587d5540df70057b5173f06f99863:-1850544571,4f8587d54e0df70066fda36937853f2d:-1379810026,c535cb95f70df7003f36529d8a9738ac:206479806,a435cb95e10df700cc574462abf64691:1619313985,53150b95e10df700575ed032bfb136cf:1932755408,7cc483957e0df700a0eea7cef04a13a5:-2074888179,0fa18791360df7007efebc8908efc94c:-1990436113,92ff648adce43340da104890433a4453:1668318125,806489ff9598bb000d9984ee15256356:732586916,3f44093f7598bb004c4f51ab1f3dcd9a:1588943605,2904017f9598bb009f995050485bf726:1135566322,b6f30dbfd198bb007c91323dfdcf6ba7:-1640661352,30e3c1ffe698bb00eebe8cc475ceb3c6:1135566322,16b3cdbf9098bb0098a1b4bfd8f7f216:-1965886852,1dd20d3f6598bb00d1d02bbe71807698:-1079644833,5cd2c93f3898bb0046990ea622fee3af:2082058492,4a320dfb8b98bb00f1c88ef23e49c196:1145997590,f6a1c97bc698bb006e497d22847be600:189112636,ca81897bf898bb000937e7b0b6bf2f05:-443724422,5a71cd7b0b98bb00ee48a5435a66924d:-13902724,07518d7bea98bb002e47483479b1d306:-1870795033,5e50017bdb98bb00f72dc51df2ffbdb8:-2128498986,ee0670ff3958bb002fd5b47371aa49b3:570866288,bbd5fcbfe658bb006ae72e6ae199319b:-1006334443,5d85b4bfe158bb009bf9af697ab67954:-1610690091,95e4303f1258bb0024d3a18b61e41adc:-1006334443,d063303fd758bb0054121c1e191142bd:1007679285,75337cbbbd58bb00941a1607db24e650:1767757805,db92b0fb7858bb00b446f39c9e6ee989:-1408516165,3852fc7b4458bb008b9d2c6836920693:1363601712,7570a8b30118bb00d72acb431eca9150:1131101030,7f40a8f33f18bb00095a658a65042698:1262460876,1800ecbf82d4bb005b5cf1b0a58ba351:1733629572,3cdfd8bfe4d4bb00acf7d702d3bea421:-1743803652,686f98b32b18bb0018e39e0754eade45:-579919082,7a5fd07f7dd4bb00d578ee0ed9dbfe97:603809205,db391c3fead4bb0083aab3e5b400d48a:-2047910275,dae8583f7ed4bb0027d08f8aa61dd253:-86088567,c4971c3f3bd4bb00ef39ed513f92b581:-2053435558,717710fbb3d4bb00817e9ed5ab011307:241402394,0f07dcbbebd4bb00e1bd579ba9d0d720:-2053435558,31d6d87b86d4bb007aa0d138c0e9da9b:-2091833055,61a654fb3bd4bb00abf1566979f37a59:-1237789119,af66dcbb6dd4bb00e412f31daad5c2fb:1994484248,af56dcbb08d4bb00c03413bf397cf545:1662860210,e646183feb94bb0055c2a020838b8123:630308760,538550bb2bd4bb0020013636751c73d7:-2053435558,5e75507f0c94bb00be478904ba16f01e:360968666,b9bb336b5e94bb0072c1fa09d9f7d2e3:-2053435558,be4b7b2bf294bb0018cacc5664ed62bb:517334140,6fbaf32bfc94bb00bf6a896c7bac5f7e:-2053435558,f8bee76f8954bb00fd5be0a5616b88cc:360968666,2ec0bd495ef2af40797cc4b799dc8eec:-2053435558,54a0b9491ef2af4099a839b5f7b212bd:-1265564929,6920b14965f2af403398e52615accef7:1380585204,0100b5099bf2af408958ba8c1a1bf2d8:2123854068,dbdf6145acf2af406e8c466144d65550:-1924791268,febfa5097af2af4018cbd051399b125c:-142944738,b59fa509daf2af404db846b4c2c07655:-1130638297,c55f2dc529f2af40b7394b2c20a97dbb:-768286146,eb0fa5c56bf2af40687c1e381903a46c:1668086912,cdfe2dc509f2af40a7802505b5714b86:-384617792,5dbe614521f2af400bf1f7aff297d965:1668086912,f9fc1ffbd2d6ef00dfdf26dad548fb3d:-850469543,d1b88773b8d6ef008c8100a672e21081:2138535384,ed69bbf2d2deaf00d4e6f4213fe35dde:198191500,3c5973b281deaf0009f32d30c85cacdb:-564204784,65497fb268deaf00349ec85f8711e9e4:-1174625438,c1197fb271deaf008d1f1d746763501e:1004085154,22d8bbb2d1deaf000129dff94d64ac2e:1284810338,72c8fffef49eaf00156aa21ee1ae889a:-742874147,e3b83bb2b3deaf004db637a6c8bb3332:1284810338,c528f3325adeaf0010371cd108afaf7e:1112561061,7b08f772eddeaf00dd3de97b2033fed6:1196935879,7087b7720bdeaf001336377b31b5ded0:559630535,8727bb32f3deaf00af6e8fef33b31152:-1279420816,7a07f372e1deaf007e4f62d50c1f19bc:-1019620917,9207f372f3deaf001caf857fbfa5f7a4:-1444879736,0c86bb325fdeaf006b86cea13cc9f660:1059081134,8276bf323cdeaf0069105d3fef132923:-1554692819,4ba4f7fe169eaf00b63b75a4fa7ea575:2069667930,c481b33e549eaf003f73640eae6a01fe:1151970897,97e03ffa7a9eaf00961ee0be289467c8:-1267981277,01e07ffa809eaf00c515e6217ed42b4b:-1153039947,7ab07bfa959eaf001275821254b44f39:-1081620013,f780b3fa8b9eaf005997450573c56f6f:1788810850,8d207fbaca9eaf00c07c76c94de734fe:1447683926,4710fb7a169eaf007d6743837285af4f:716035223,b2cf67bad09eaf0000533ae8b2caa24f:79311442,b575e4eb5c7967009ffcd8bdf0ff703b:2066094812,b14758e7506b5f0047eae16b81ad6d16:-2023116993,fef5d427626b5f0088deacb2b06f4aa1:-641977601,f2a2bfcdf3679700ef430c16ae4097c8:1050388061,260ce70da667970014e8ac58a227091b:321502134,30766b090e679700389195e043108c54:2122138466,27c35f78efe75700f4002fbde59065a3:-2011739132,11eb0f702be75700848e80635a57b1d6:-1616057106,6adb0f702ae75700239314d68415f773:-1614639982,6acbcb703ee7570050e91c48dae8fb31:1323660392,4dbbc370efe757001e7e5249398bc2d1:-1756641956,99cd9af8d627570066f6928172c8ed57:-307254211,fd6d9af8a4275700a07993aaea725d63:1590143822,273dd63ca72757000dee64e79f7f8666:1287419710,a52dd23c4227570031688dddf13f8ddd:1590143822,bb9c1ef83b27570054bd16ccd41cdeb4:-1465455292,38e615a3cb1f53002eb55b756c6007be:-1544744763,95d61963781f5300fa7cc98da35961d9:-1757530827,341650430f5b530040743f26d9fa1adb:-128674531,dfa982528dd75700ed3d9845855b0210:917402376,33898ede0c97570012ed9494a0599565:-777717217,7028d1921f575700b5b65956695c5ff3:-1039173601,48975d1a88175700a55160fbdd6afd37:-2057389495,cc775912b7575700139e8e11c73e9f4d:-393100306,563ea695b11b9300d9b053f3ab72851e:-2025349379,c82e2e19b01b9300bc7df1fc3e75f4b4:993046061,aeee5a80233c1300b2fbcca6362bacae:-212706499,78fd1a404e3c13007e062f1ab1c2a70d:-240609239,05edd640333c13009e50e3552ab7ce12:854694992,b2cdd640463c13005bafdb8ffc2a1681:-1445478983,e7fc128c8ff81300b4bcfbd24d7e15f4:-796383314,73ec1a40323c130072dececd35e85306:1897852082,fe855580d9374700ab51c788b1b5e821:-447323702,c97091cc0ef347004b64416ebed8272b:-1694591112,317f858cb2f3470067a370a34a06830f:135399208,cf2f018c16f347003573ce875a8c34a4:209501476,60fe4d4c0ff347007a03bae6d4cc83d9:-973584284,85878584a2f3470028f3aa08b337df7f:209501476,be96858419f34700f6d6171a0957921c:-2078174090,2466858440f3470088a3b4169269cf29:209501476,5d56c108a6f347001edbc73c9911d46f:1134750660,704ac5f509a7cf0028b76c441c9d6864:209501476,7df88975a3a7cf008a1ef630ba6749b1:-1420212036,11e8cdf1b4a7cf0020d0c065d35557e5:-2058132418,9dfbaa9a982a870095cdaafbcafc4943:-376626880,5e4baad63f2a87004a99b343fa031a2e:1258925794,a3f63f6854a28300d882924fa4f1b9b3:-567254,0218579f77de830022ed883779dc86eb:637767122,0218579f77de830022ed883779dc86eb:637767122,0218579f77de830022ed883779dc86eb:637767122</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_91dc809cdb284340f59974131f961938</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $http, spUtil) {
  /* widget controller */
  var c = this;
	c.pagination = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns = [
		{
			key: 'ic_id',
			label: 'IC ID',
			sort: 'asc'
		},
		{
			key: 'name',
			label: 'Principal Inverstigator',
			sort: 'asc'
		},
    {
			key: 'protocol',
			label: 'Parent Protocol',
			sort: 'asc'
		},
		{
			key: 'study_name',
			label: 'Study Name',
			sort: 'asc'
		},
		{
			key: 'submitted_by',
			label: 'Submitted By',
			sort: 'asc'
		},
		{
			key: 'submitted_date',
			label: 'Submitted Date',
			sort: 'asc'
		},
		{
			key: 'status',
			label: 'Status',
			sort: 'asc'
		},
		{
			key: 'last_update_date',
			label: 'Last Update Date',
			sort: 'asc'
		},
		{
			key: 'approval',
			label: 'Approval',
			sort: null
		},
		
		{
			key: 'actions',
			label: 'Actions',
			sort: null
		}		
	];
	
	c.getRange = function() {
		var currentSize = c.pagination.currentSize;
		var currentPage = c.pagination.currentPage;
		
		var offset = currentSize * currentPage;
		
		return new Array(Math.ceil(c.data.approvalTasks.length / currentSize));
	};
	
	c.setPage = function(index) {
		c.pagination.currentPage = index;
	};
	
	c.toggleSort = function(index) {
		var column = c.columns[index];
		var key = column.key;
		
		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {
			
			var sortAscending = column.sort === 'asc';
			
			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;
			
			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB)
						: keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};
			
			c.data.approvalTasks = c.data.approvalTasks.sort(compareRows);
		}
	};
	//for reviewed table
	c.pagination1 = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns1 = [
		{
			key: 'ic_id',
			label: 'IC ID',
			sort: 'asc'
		},
		{
			key: 'name',
			label: 'Principal Inverstigator',
			sort: 'asc'
		},
		{
			key: 'protocol',
			label: 'Parent Protocol',
			sort: 'asc'
		},
		{
			key: 'study_name',
			label: 'Study Name',
			sort: 'asc'
		},
		{
			key: 'submitted_by',
			label: 'Submitted By',
			sort: 'asc'
		},
		{
			key: 'submitted_date',
			label: 'Submitted Date',
			sort: 'asc'
		},
		{
			key: 'status',
			label: 'Status',
			sort: 'asc'
		},
		{
			key: 'last_update_date',
			label: 'Last Update Date',
			sort: 'asc'
		},
		{
			key: 'approval',
			label: 'Approval',
			sort: null
		},
		
		{
			key: 'actions',
			label: 'Actions',
			sort: null
		}		
	];
	
	c.getRange1 = function() {
		var currentSize = c.pagination1.currentSize;
		var currentPage = c.pagination1.currentPage;
		
		var offset = currentSize * currentPage;
		
		return new Array(Math.ceil(c.data.reviewedTasks.length / currentSize));
	};
	
	c.setPage1 = function(index) {
		c.pagination1.currentPage = index;
	};
	
	c.toggleSort1 = function(index) {
		var column = c.columns1[index];
		var key = column.key;
		
		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {
			
			var sortAscending = column.sort === 'asc';
			
			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;
			
			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB)
						: keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};
			
			c.data.reviewedTasks = c.data.reviewedTasks.sort(compareRows);
		}
	};
	//start client JS
  $('.collapse').on('shown.bs.collapse', function() {
      $(this).parent().find(".fa-plus-square").removeClass("fa-plus-square").addClass("fa-minus-square");
  }).on('hidden.bs.collapse', function() {
      $(this).parent().find(".fa-minus-square").removeClass("fa-minus-square").addClass("fa-plus-square");
  });		
	
	window.setSelectedGDSICRow = function(id) {
		var matches = c.data.approvalTasks.filter(function(e) {
			return e.doc_id == id;
		});
		
		if (!matches.length) return;
		
		var index = c.data.approvalTasks.indexOf(matches[0]);
		c.setPage(Math.floor(index / c.pagination.currentSize));
		$scope.$apply();
	}
	
	window.setSelectedGDSReviewedICRow = function(id) {
		var matches = c.data.reviewedTasks.filter(function(e) {
			return e.doc_id == id;
		});
		
		if (!matches.length) return;
		
		var index = c.data.reviewedTasks.indexOf(matches[0]);
		c.setPage(Math.floor(index / c.pagination.currentSize));
		$scope.$apply();
	}
	
	
	var names = ['certification_date','institution_name', 'certification_to', 'certification_from', 'gpa_organization', 'sd_organization', 'study_name', 'project_title', 'sampleTime', 'sampleConsent', 'consent_group'];
	var sessionId = c.data.info.sessionId;
	var userId = c.data.info.userId;
	var gpa = c.data.info.gpa;
	var gpa_asst = c.data.info.gpa_asst;
	var sd = c.data.info.sd;
  var gpa_asst_apprv = (c.data.info.gpa_asst_apprv == 'true');
	
	c.viewICData = function(doc_id, sys_id, state, stage, ticket_id){
		$('#refresh').val('0');
		$('#rejectICError').hide();
		$('#commentICId1').css("background-color", "");
		fetchDetails(doc_id, sys_id, state, stage, ticket_id);
	}
	
	var initialTime = null;
	var documentTimeout = 60 * 1000;
	var documentInterval = null;
	
	c.report = function(sys_id, ic_id, flag){
		  var req_id = sys_id;
		  var fileName = '';
		 $('#refresh').val('0');
		 $('#loading').show();
		  if(flag == 'pi'){
				fileName = ic_id+"_pi.pdf";
			}else	if(flag == 'sd'){
			fileName = ic_id+"_sd.pdf";
		  }
			initialTime = new Date();
			documentInterval = setInterval(function() {
				 getDocument(req_id, fileName);
			}, 5000);		
	}
	
	function getDocument(req_id, fileName){
		  var req = {
					method: 'GET',
					url: '/api/naci/gds/getAttachmentFileID',
					beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				  params: {request_id: req_id, file_name: fileName}
			};
		  $http(req).then(handleResponse, handleError);
		  function handleResponse(response) {
					if (new Date() - initialTime &gt; documentTimeout) {
						 window.clearInterval(documentInterval);
						 $('#loading').hide();
						 $('#messageInfo').html('Application fails to generate PDF document, please contact System Administrator');
             $('#infoModal').modal('show');
             $('#btnOkConfirm').off('click').click(function() {
                 $('#infoModal').modal('hide');
             });
						 return;
					}				
					var result = response.data.result;
					//hightlight right record
				  var id = result.file_id;
		      if(id != null &amp;&amp; id.trim().length &gt; 0){
						window.clearInterval(documentInterval);
				    window.location.href = '/sys_attachment.do?sys_id=' + id;
						setTimeout(function(){}, 3000);
						$('#loading').hide();
					}
			}
		
			function handleError(response) {
				window.clearInterval(documentInterval);
					console.error(response);
					alert('ERROR');
			}	
	}
	
  function fetchDetails(number, approvalId, state, stage, ticket_id){
		var variables= {};
		data = {
			requestedid : number	
		};
    var request = {
			url: '/api/naci/gdspapi/fetchSubmittedRequestData',
			method: 'POST',
			beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
			headers: {
				'Content-Type': 'application/json'
			},
			data: data
		};
		$http(request).then(handleResponse, handleError);
		function handleResponse(response){
			var result = response.data.result;
			  var variables = result.variables;
			  var comments = "";
			  comments = result.comments;
			  var comment_str = parse(comments);
			  $('#displayICId').html(ticket_id);
			  //reset SD selection and comments
			  $('#selectICSD').val('NONE');
			  $('#commentICId1').val('');
			  resetRequestValue();
			  loadApprovalData(variables);
			  clearDiv();
				$('#commentReviewICId1').empty();
				$('#commentReviewICId1').append(comment_str);

				$('#commentICId1').show();
				$('#commentId1ICLable').show();

				if(comment_str .length &lt; 137){
							 $('#pre_comments_ic_div').hide();
				 }else{
							 $('#pre_comments_ic_div').show();
				 }
				$('#hiddenRequestId').val(approvalId);
				$('#hiddenRequestItemId').val(number);
			  $('#roleId').val('GPA');
				$('#comments_ic_div').show();
			
			  $('#submitButton1').hide();
			  $('#closeButton1').hide();
				$('#signButton1').hide();
			
				if(state == 'approved' || state.indexOf('not_required') &gt;=0 || (gpa_asst &amp;&amp; !gpa_asst_apprv)){
					 $('#comments_ic_div').hide();
					 $('#submitButton1').hide();
					 $('#closeButton1').show();
				}else if(state == 'requested' || state == 'rejected'){
					 if((stage == 'Waiting for GPA Review' || stage == 'Waiting for GPA Review - SD Rejected') &amp;&amp;(gpa || gpa_asst)){
							$('#comments_ic_div').show();
							$('#sd_ic_div').show();
							$('#submitButton1').show();
							$('#closeButton1').hide();
					 }else if(stage == 'Waiting for SD Review' &amp;&amp; !sd){
							$('#comments_ic_div').show();
							$('#sd_ic_div').hide();
							$('#submitButton1').show();
							$('#closeButton1').hide();
					 }else if(stage == 'Waiting for SD Review' &amp;&amp; sd){
							$('#comments_ic_div').show();
							$('#sd_ic_div').hide();
							$('#submitButton1').show();
							$('#closeButton1').hide();
					 }else if(stage == 'SD Approved'){
								$('#comments_ic_div').hide();
								$('#sd_ic_div').hide();
								$('#submitButton1').hide();
								$('#closeButton1').show();
					 }else{
								$('#comments_ic_div').hide();
								$('#sd_ic_div').hide();
								$('#submitButton1').hide();
								$('#closeButton1').show();
					 }
				}else{
					 $('#comments_ic_div').show();
					 $('#submitButton1').show();
					 $('#closeButton1').hide();
				}
				var ticketN = $('#'+number+'_ticket').val();
			     $('#gpaICErrorMessage').hide();
				$('#displayICId').html(ticketN);		
			  $('#ic_modal_content').attr('style', 'height:950px; overflow-y:auto; overflow-x: hidden;');
			  loadConsentGroupData();
				if(variables.sampleTime == 'yes' &amp;&amp; variables.sampleConsent == 'no'){
					$('#insDiv').show();
				}else{
					$('#insDiv').hide();
				}			 
			  $('#displayICRequests').modal('show').on('shown.bs.modal', function(){$('#displayRequests .modal-content').scrollTop(0);})
		}
		function handleError(response){
			alert("failed");
			console.error(response);
			alert('ERROR');
		}
		$('#hiddenStage').val(stage);
 }	
	
	function loadConsentGroupData(){
		var consentStr = $('#consent_group1').val();
	  if(consentStr == null || typeof consentStr === 'undefined' || consentStr.trim().length == 0){
			$('#consentGrpDiv').hide();
		}else{
      getConsentGroups(consentStr);
		}
	}
	
	function getConsentGroups(consentStr){
		var request = {
				method: 'POST',
				url: '/api/naci/gds/fetchConsentGroupDataFromRequest',
				beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				headers: {
					'Content-Type': 'application/json'
				},
				data: {consentGrp: consentStr}
		};
		$http(request).then(handleResponse, handleError);
		function handleResponse(response) {
			var result = response.data.result;
			var strTable = "&lt;table class='table table-bordered table-condensed table-hover' width='100%'&gt;&lt;tr bgcolor='lightgrey'&gt;&lt;th&gt;Collaborating Site Name&lt;/th&gt;&lt;th&gt;Data Use Limitation&lt;/th&gt;&lt;th&gt;Data Use Limitations Modifier&lt;/th&gt;&lt;/tr&gt;";
		  for(var i = 0; i &lt; result.length; i++){
			    var use_limit = result[i].use_limit;
				if(result[i].data_field != null &amp;&amp; result[i].data_field.trim().length &gt; 0){
					use_limit = use_limit + " ["+ result[i].data_field +"] ";
				}
				strTable = strTable + "&lt;tr&gt;&lt;td&gt;"+result[i].site_name + "&lt;/td&gt;&lt;td&gt;" + use_limit + "&lt;/td&gt;&lt;td&gt;" + result[i].data_modifier +"&lt;/td&gt;&lt;/tr&gt;";
			}
			strTable = strTable + "&lt;/table&gt;";
			  
			$('#consentContentDiv').html(strTable);
			$('#consentGrpDiv').show();
		}
		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}
	
    function clearDiv(){
		$('#comments_ic_div').hide();
		$('#sd_ic_div').hide();
		$('#submitButton1').hide();
		$('#closeButton1').hide();
	}
	
	function parse(allcomments) {
	 var comments = allcomments.split("ENDCOMMENTS");
	 var commentsblock = '&lt;table border="1" width="100%"&gt;&lt;tr&gt;&lt;th&gt;Role&lt;/th&gt;&lt;th&gt;Approver&lt;/th&gt;&lt;th&gt;Approval Status&lt;/th&gt;&lt;th&gt;Comments&lt;/th&gt;&lt;th&gt;Time&lt;/th&gt;&lt;/tr&gt;'
	 for(i = 0; i &lt; comments .length; i++){
			 if (comments[i].length &gt; 40) { 
				 if (comments[i][0] == '\n') {
						 var lastI = 0;
						 while (lastI &lt; comments[i].length &amp;&amp; comments[i][lastI] == '\n') 
									lastI ++;
						 comments[i] = comments[i].substring(lastI,comments[i].length);
				 }
				 var t = comments[i].substring(0,22);
				 var approver = comments[i].substring(comments[i].indexOf('(ENDROLE)')+9,comments[i].length);
				 var results = comments[i].substring(comments[i].indexOf('(Additional comments)') + 57,comments[i].indexOf('(Additional comments)') + 65);
				 var comm= comments[i].substring(comments[i].indexOf('(Additional comments)') + 66, comments[i].indexOf('(role)'));
				 var role = comments[i].substring(comments[i].indexOf('(role)') + 6, comments[i].indexOf('(ENDROLE)')); 
				 commentsblock = commentsblock + "&lt;tr&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + role + "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + approver + "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + results+ "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + comm + "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;td&gt;" + t + "&lt;/td&gt;";
				 commentsblock = commentsblock + "&lt;/tr&gt;";
			 }
	 }
	 commentsblock = commentsblock + "&lt;/table&gt;";

	return commentsblock;
	}	
	
	function loadApprovalData(data){
	  for(key in data){
			//var value = getValue(key, data[key]);
			if(key == 'data_access'){
				if(data[key] == 'unrestricted'){
					 $("input[name=dataAccessBox1][value='unrestricted']").prop("checked",true);
				}else{
					 $("input[name=dataAccessBox1][value='controlled-access']").prop("checked",true);
				}
			}else if(key == 'display'){
				if(data[key] == 'yes'){
					 $('#displayBox1').prop('checked', true);
					 $('#controllaccessDiv1').show();
				}else{
					 $('#displayBox1').prop('checked', false);
					 $('#controllaccessDiv1').hide();
				}
			}else if(key == 'consent_group'){
				$('#'+key+"1").val(data[key]);
			}else{
				$('#'+key+"1").html(data[key]);
			}
		}
	}
	
  function resetRequestValue(){
    var i = 0;
    for( i = 0; i!= names.length; i++){
        $('#'+names[i] + "1").html('');
    }
  }	
	
spUtil.recordWatch($scope, "sysapproval_approver", "", function(name, data) {  
			spUtil.update($scope);
	});	
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.form-control1 {&amp;#13;
    display: block;&amp;#13;
    width: 20%;&amp;#13;
    height: 30px;&amp;#13;
    padding: 6px 12px;&amp;#13;
    font-size: 14px;&amp;#13;
    line-height: 1.42857;&amp;#13;
    color: #555555;&amp;#13;
    background-color: #fff;&amp;#13;
    background-image: none;&amp;#13;
    border: 1px solid #ccc;&amp;#13;
    border-radius: 4px;&amp;#13;
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);&amp;#13;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);&amp;#13;
    -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;&amp;#13;
    -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;&amp;#13;
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
.overlay {&amp;#13;
  position: fixed; &amp;#13;
  width: 100%; &amp;#13;
  height: 100vh; &amp;#13;
  background-color: white; &amp;#13;
  opacity: 0.9; &amp;#13;
  z-index: 9999; &amp;#13;
  top: 0; &amp;#13;
  left: 0;&amp;#13;
  &amp;#13;
  display: flex;&amp;#13;
  align-items: center;&amp;#13;
  justify-content: center;&amp;#13;
  flex-direction: column;&amp;#13;
}&amp;#13;
&amp;#13;
.spinner {&amp;#13;
  animation: spin 2s infinite linear;&amp;#13;
}&amp;#13;
&amp;#13;
/** spin animation */&amp;#13;
@keyframes spin {&amp;#13;
  from {&amp;#13;
    transform: rotate(0deg);&amp;#13;
  }&amp;#13;
&amp;#13;
  to {&amp;#13;
    transform: rotate(359deg);&amp;#13;
  }&amp;#13;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;ggiat&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;GDS GPA IC Approval Table&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	data.approvalTasks = [];
	data.reviewedTasks = [];
	data.info = [];
	var session_id = gs.getSessionToken();
	var my_sys_id = gs.getUserID();
	var gr = gs.getUser(); 
	var gpa = gr.isMemberOf('CCR_GPA');
	var gpa_asst = gr.isMemberOf('CCR_GPA_ASST');
	var sd = gr.isMemberOf('CCR_SD');
	var gpa_asst_apprv = gs.getProperty('CCR_GPA_ASST_APPRV');
	
	data.info = {
		userId: my_sys_id,
		sessionId: session_id,
		gpa: gpa,
		gpa_asst: gpa_asst,
		sd: sd,
		gpa_asst_apprv: gpa_asst_apprv
	};
	if(gpa || gpa_asst){
		var gr1 = new GlideRecord("sc_cat_item");
				gr1.addQuery("short_description", "CCR GDSP Intramural Certification");
				gr1.query();	
				gr1.next();
				var cat_item_id = gr1.getValue('sys_id');


			 var gr_approval_items = new GlideRecord('sysapproval_approver');
			 var req_item = gr_approval_items.addJoinQuery('sc_req_item','document_id','sys_id');
			 req_item.addCondition('cat_item', cat_item_id);
		   //if(!gpa_asst){
			//		gr_approval_items.addQuery('approver', my_sys_id); 
			 //}
			 gr_approval_items.addQuery('source_table','sc_req_item'); 
			 gr_approval_items.orderByDesc('sys_updated_on');  
			 gr_approval_items.query();
			 while (gr_approval_items.next()){
				 var orginId = '';
				 var tickerNum = '';
				 var org_ticket_num = '';
				 var version = '';
				 var hasParent = '';
				 var selectedOrginId = '';

				 var docId = gr_approval_items.document_id;

				 selectedOrginId = gr_approval_items.document_id.contact_type;
				 if(selectedOrginId == '' || selectedOrginId === undefined || selectedOrginId == 'Web' ){
							orginId = gr_approval_items.document_id.sys_id;
							org_ticket_num = gr_approval_items.document_id.number;
							hasParent = 'false';
					}else{
						 var orgIds = selectedOrginId.split("=");
						 var gr_tracking_item = GlideRecord('u_ccr_tracking_t');
						 gr_tracking_item.addQuery('u_orgid',orgIds[0]);
						 gr_tracking_item.query();

						 if(gr_tracking_item.getRowCount() &gt; 0){
									gr_tracking_item.next();
									orginId = gr_tracking_item.u_orgid;
									org_ticket_num = gr_tracking_item.u_ticket_number;
									version = orgIds[1];
									hasParent = 'true';
						 }else {
									orginId = gr_approval_items.document_id.sys_id;
									org_ticket_num = gr_approval_items.document_id.number;
									hasParent = 'false';
						 }
					}

					var ticket_number = '';
					if(hasParent == 'true'){
							ticket_number = 'CCR_IC' + org_ticket_num.substring(8) + '-' + version;
					}else{
							ticket_number = "CCR_IC" + gr_approval_items.sysapproval.number.substring(8);
					}

					var stage_v = gr_approval_items.document_id.context.stage.name;		
							
					if(!((stage_v == 'Waiting for GPA Review' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review') || (stage_v == 'Waiting for GPA Review - SD Rejected' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review - SD Rejected')) &amp;&amp; (gr_approval_items.state == 'approved' || (gr_approval_items.state = 'rejected' &amp;&amp; stage_v == 'Waiting for PI Resubmit' &amp;&amp;  gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review'))){	
					//if(!(stage_v == 'Waiting for GPA Review' || stage_v == 'Waiting for GPA Review - SD Rejected') &amp;&amp; gr_approval_items.state == 'approved'){	
						 if(stage_v != 'Completed' || (stage_v == 'Completed' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review')){			
										var item = {};
										item.ic_id = ticket_number;
										item.study_name = gr_approval_items.document_id.variables.study_name.toString();
							      item.number = 'CCR_IC' + gr_approval_items.document_id.number.toString().substring(8);
							      var parent =  getParentProtocol(item.ic_id);
								    item.protocol = parent.protocol == null ? '123' : parent.protocol.toString();
							      item.name = parent.name == null ? '123' : parent.name.toString(); 
										item.project_title = gr_approval_items.document_id.variables.project_title.toString();
										item.submitted_by = gr_approval_items.sysapproval.opened_by.name.toString();
										item.submitted_date = gr_approval_items.document_id.sys_created_on.toString();
										item.status = gr_approval_items.document_id.context.stage.name.toString();
										item.last_update_date = gr_approval_items.sys_updated_on.toString();
										item.stage = stage_v.toString();
										item.sys_id = gr_approval_items.sys_id.toString();
										item.doc_id = gr_approval_items.document_id.toString();
										item.state = gr_approval_items.state.toString();
							 
									 //this is ugly code, refactor later
											var matches = data.reviewedTasks.filter(function(el, idx) {
												return el.ic_id === ticket_number;
											});
											if (matches.length) {
												var match = matches[0];
												if (new Date(item.last_update_date) &gt; new Date(match.last_update_date)) {
													var index = data.reviewedTasks.indexOf(match);
													data.reviewedTasks[index] = item;
												}
											} else { 
												data.reviewedTasks.push(item);
											}
							}
						}
							if((stage_v == 'Waiting for GPA Review' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review') || (stage_v == 'Waiting for GPA Review - SD Rejected' &amp;&amp; gr_approval_items.wf_activity.stage.name == 'Waiting for GPA Review - SD Rejected')){
								  var items = {};
									items.ic_id = ticket_number;
								  items.number = 'CCR_IC' + gr_approval_items.document_id.number.toString().substring(8);
									items.study_name = gr_approval_items.document_id.variables.study_name.toString();
									items.project_title = gr_approval_items.document_id.variables.project_title.toString();
								  var parent1 =  getParentProtocol(items.number);
								  items.protocol = parent1.protocol == null ? '' : parent1.protocol.toString();
								  items.name = parent1.name == null ? " " : parent1.name.toString(); 
									items.submitted_by = gr_approval_items.sysapproval.opened_by.name.toString();
									items.submitted_date = gr_approval_items.document_id.sys_created_on.toString();
									items.status = gr_approval_items.document_id.context.stage.name.toString();
									items.last_update_date = gr_approval_items.sys_updated_on.toString();
									items.stage = stage_v.toString();
									items.sys_id = gr_approval_items.sys_id.toString();
									items.doc_id = gr_approval_items.document_id.toString();
									items.state = gr_approval_items.state.toString();						
									if(gpa_asst &amp;&amp; gr_approval_items.approver.sys_id.toString() == my_sys_id){
										data.approvalTasks.push(items);
									}else if(!gpa_asst  &amp;&amp; gr_approval_items.approver.sys_id.toString() == my_sys_id){
										data.approvalTasks.push(items);
									}	
							}
			}
	}
	function getParentProtocol(number){
		var value = {};

		var u_project = new GlideRecord('u_software_solution_gds_project_information');
		    u_project.addQuery('u_ic_status', 'CONTAINS', number);
		    u_project.query();
		while(u_project.next()){
				value.protocol = u_project.u_parent_project.toString();
				value.name = [
							(u_project.u_pi_last_name || '').toString(),
							(u_project.u_pi_first_name || '').toString()
						 ].filter(Boolean).join(', ');
		}
		return value;
	}
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;zhoujim@nih.gov&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2017-08-08 18:20:19&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;91dc809cdb284340f59974131f961938&lt;/sys_id&gt;&lt;sys_mod_count&gt;225&lt;/sys_mod_count&gt;&lt;sys_name&gt;GDS GPA IC Approval Table&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_91dc809cdb284340f59974131f961938&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;zhoujim@nih.gov&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-04-26 14:15:07&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;
  
  &lt;div class="panel panel-success panel-area" ng-show="c.data.approvalTasks.length &gt; 0"&gt;
    &lt;div class="panel-heading panel-header" id="heading_gpaApprovalICItems" role="tab"&gt;
      &lt;h4 class="panel-title"&gt;
        &lt;a aria-controls="collapsegpaApprovalICItems" aria-expanded="true" data-target="#collapsegpaApprovalICItems" data-toggle="collapse" role="button"&gt;
          &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-minus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
          Institutional Certifications Waiting for GPA Approval &lt;span class="badge" id="ritm_count"&gt;{{ c.data.approvalTasks.length }}&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
    &lt;/div&gt;
    &lt;div aria-labelledby="heading_gpaApprovalICItems" class="panel-collapse collapse in" id="collapsegpaApprovalICItems" role="tabpanel"&gt;
      &lt;table class="table table-bordered table-striped table-condensed table-hover"&gt;
        &lt;thead&gt;
        &lt;tr&gt;
          &lt;td colspan="9"&gt;
      		&lt;form class="form-inline"&gt;
            	&lt;label for="search_savedIC" class="label-hidden"&gt;Search:&lt;/label&gt;	
          		&lt;input id="search_savedIC" type="text" class="form-control1" ng-model="searchSavedIC" placeholder="Search"/&gt;
          &lt;/form&gt;  
          &lt;/td&gt;  
				&lt;/tr&gt;           
        &lt;tr&gt;
          &lt;th 
              ng-repeat="column in c.columns track by $index" 
              ng-click="c.toggleSort($index)" 
              style="cursor: pointer"&gt;
              {{ column.label }}
              &lt;span 
                class="glyphicon small" 
                ng-class="{
                            'glyphicon-chevron-up': column.sort === 'asc',
                            'glyphicon-chevron-down': column.sort === 'desc'
                          }"&gt;
              &lt;/span&gt;
          &lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tr ng-repeat="row in c.data.approvalTasks | filter:searchSavedIC"
            ng-show="$index &gt;= c.pagination.currentPage * c.pagination.currentSize &amp;&amp;
                     $index &lt; (c.pagination.currentPage + 1) * c.pagination.currentSize" id='{{row.doc_id}}'&gt;
          &lt;td class="ritm_number"&gt;{{ row.ic_id }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.name }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.protocol }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.study_name }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.submitted_by }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.submitted_date }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.status }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.last_update_date }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;
                &lt;span ng-switch on='row.stage'&gt;
                  &lt;span ng-switch-when='Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-when='Waiting for SD Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-when='Waiting for GPA Review - SD Rejected'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-when='Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted"  title="Request Submitted"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-when='SD Rejected - Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-default&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="SD Approved" title="SD Approved"/&gt;&lt;/span&gt;
            		&lt;/span&gt; 
          &lt;/td&gt;
          &lt;td&gt;
            &lt;button class="btn btn-sm btn-primary active" ng-click="c.viewICData(row.doc_id, row.sys_id, row.state, row.stage, row.ic_id)" style="width: 70px; text-align: center;"&gt;
              View
            &lt;/button&gt;
            &lt;button class="btn btn-sm btn-primary active" ng-click="c.report(row.doc_id, row.number, 'pi')"style="width: 70px; text-align: center;"&gt;
              Export
            &lt;/button&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
      &lt;!-- select the page size --&gt;
      &lt;div class="paging-bar"&gt;
        &lt;div class="paging-option"&gt;
          &lt;form class="form-inline"&gt;
            &lt;div class="pagination form-group"&gt;
              &lt;label for="pageSize8"&gt;
                Items per page
              &lt;/label&gt;

              &lt;select 
                id="pageSize8" 
                class="form-control"
                style="display: inline"
                ng-init="c.pagination.currentSize = c.pagination.pageSizes[0]"
                ng-model="c.pagination.currentSize"
                ng-options="sizes for sizes in c.pagination.pageSizes"&gt;
              &lt;/select&gt;
            &lt;/div&gt;
          &lt;/form&gt;  
        &lt;/div&gt;
      &lt;!-- select the page index (offset) --&gt;
        &lt;div class="paging-content"&gt;
          &lt;ul class="pagination" ng-show="c.pagination.currentSize &lt; c.data.approvalTasks.length"&gt;
            &lt;li
              ng-repeat="index in c.getRange() track by $index"
              ng-click="c.setPage($index)"
              &gt;
              &lt;a href=""&gt;
                {{ $index + 1 }}
              &lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class="panel panel-success panel-area" ng-show="c.data.reviewedTasks.length &gt; 0"&gt;
    &lt;div class="panel-heading panel-header" id="heading_gpaReviewedICItems" role="tab"&gt;
      &lt;h4 class="panel-title"&gt;
        &lt;a aria-controls="collapsegpaReviewedICItems" aria-expanded="true" data-target="#collapsegpaReviewedICItems" data-toggle="collapse" role="button"&gt;
          &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-plus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
          Institutional Certifications reviewed by GPA &lt;span class="badge" id="ritm_count"&gt;{{ c.data.reviewedTasks.length }}&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
    &lt;/div&gt;

    &lt;div aria-labelledby="heading_gpaReviewedICItems" class="panel-collapse collapse" id="collapsegpaReviewedICItems" role="tabpanel"&gt;
      &lt;table class="table table-bordered table-striped table-condensed table-hover"&gt;
        &lt;thead&gt;
         &lt;tr&gt;
          &lt;td colspan="9"&gt;
      		&lt;form class="form-inline"&gt;
            	&lt;label for="search_submittedIC" class="label-hidden"&gt;Search:&lt;/label&gt;	
          		&lt;input id="search_submittedIC" type="text" class="form-control1" ng-model="searchSubmittedIC" placeholder="Search"/&gt;
          &lt;/form&gt;  
          &lt;/td&gt;  
				&lt;/tr&gt;           
        &lt;tr&gt;
          &lt;th 
              ng-repeat="column in c.columns1 track by $index" 
              ng-click="c.toggleSort1($index)" 
              style="cursor: pointer"&gt;
              {{ column.label }}
              &lt;span 
                class="glyphicon small" 
                ng-class="{
                            'glyphicon-chevron-up': column.sort === 'asc',
                            'glyphicon-chevron-down': column.sort === 'desc'
                          }"&gt;
              &lt;/span&gt;
          &lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tr ng-repeat="row in c.data.reviewedTasks | filter:searchSubmittedIC"
            ng-show="$index &gt;= c.pagination1.currentPage * c.pagination1.currentSize &amp;&amp;
                     $index &lt; (c.pagination1.currentPage + 1) * c.pagination1.currentSize"&gt;
          &lt;td class="ritm_number"&gt;{{ row.ic_id }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.name }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.protocol }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.study_name }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.submitted_by }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.submitted_date }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.status }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;{{ row.last_update_date }}&lt;/td&gt;
          &lt;td class="ritm_number"&gt;
                &lt;span ng-switch on='row.stage'&gt;
                  &lt;span ng-switch-when='Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-when='Waiting for SD Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-when='Waiting for GPA Review - SD Rejected'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-when='Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-when='SD Rejected - Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
                  &lt;span ng-switch-default&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="SD Approved" title="SD Approved"/&gt;&lt;/span&gt;
            		&lt;/span&gt; 
          &lt;/td&gt;
          &lt;td &gt;
            &lt;button class="btn btn-sm btn-primary active" ng-click="c.viewICData(row.doc_id, row.sys_id, row.state, row.stage,row.ic_id)" style="width: 70px; text-align: center;"&gt;
              View
            &lt;/button&gt;
            &lt;button class="btn btn-sm btn-primary active" ng-show="row.status == 'Completed' " ng-click="c.report(row.doc_id, row.number, 'sd')"style="width: 70px; text-align: center;"&gt;
              Export
            &lt;/button&gt;
            &lt;button class="btn btn-sm btn-primary active" ng-show="row.status != 'Completed' " ng-click="c.report(row.doc_id, row.number, 'pi')"style="width: 70px; text-align: center;"&gt;
              Export
            &lt;/button&gt;            
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
      &lt;!-- select the page size --&gt;
      &lt;div class="paging-bar"&gt;
        &lt;div class="paging-option"&gt;
      &lt;form class="form-inline"&gt;
        &lt;div class="pagination form-group"&gt;
          &lt;label for="pageSize9"&gt;
            Items per page
          &lt;/label&gt;

          &lt;select 
            id="pageSize9" 
            class="form-control"
            style="display: inline"
            ng-init="c.pagination1.currentSize = c.pagination1.pageSizes[1]"
            ng-model="c.pagination1.currentSize"
            ng-options="sizes for sizes in c.pagination1.pageSizes"&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/form&gt;  
        &lt;/div&gt;
      &lt;!-- select the page index (offset) --&gt;
      &lt;div class="paging-content"&gt;
      &lt;ul class="pagination" ng-show="c.pagination1.currentSize &lt; c.data.reviewedTasks.length"&gt;
        &lt;li
          ng-repeat="index in c.getRange1() track by $index"
          ng-click="c.setPage1($index)"
          &gt;
          &lt;a href=""&gt;{{ $index + 1 }}&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;  
&lt;/div&gt;
&lt;div id="loading" class="overlay" style="display:none;"&gt;
  &lt;div class="spinner" style="width: 25px; height: 25px"&gt;
  	&lt;svg version="2.0" class="spinner" width="25" height="25"&gt;
      &lt;circle cx="12.5" cy="12.5" r="10" fill="transparent" stroke="#ccc" stroke-width="2.5" /&gt;
      &lt;path fill="transparent" stroke="#666" stroke-width="2.5" d="M 12.5 2.5 a 10 10 0 0 1 10 10" /&gt;
    &lt;/svg&gt;
  &lt;/div&gt;
  &lt;span&gt;Processing&lt;/span&gt;
&lt;/div&gt;
&lt;div id="infoModal" class="modal fade"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                    &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
                &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmOk" class="modal-title"&gt;Information&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                &lt;p align="center" id="messageInfo"&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnOkConfirm" 
                type="button" class="btn btn-primary" 
                style="width: 70px; text-align: center;"&gt;OK&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>491642035</payload_hash>
<remote_update_set display_value="CCRGDS_Patch_6_20190425">1196280bdb853f00b86770c08c96194a</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>zhoujim@nih.gov</sys_created_by>
<sys_created_on>2019-04-30 18:20:27</sys_created_on>
<sys_id>a196280bdb853f00b86770c08c96194b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>16a59fff6610000001</sys_recorded_at>
<sys_updated_by>zhoujim@nih.gov</sys_updated_by>
<sys_updated_on>2019-04-30 18:20:27</sys_updated_on>
<table/>
<target_name>GDS GPA IC Approval Table</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>fc184b657dc93b00bffcbd6ae5984285</update_guid>
<update_guid_history>fc184b657dc93b00bffcbd6ae5984285:491642035,456b2b9198cdf700aa0839dec82182f9:106976632,2e5b631121cdf700d18865e03d8ac9b5:379483352,cbfa239d938df7005354ebce086b9236:913097108,0d696b9d8c8df700f1cde26088f52c35:1736590279,0619e35d6e8df70094cdd9fba339c4e3:-1874568969,20f8a75d438df70004e1bd6ce4aaa184:-1755742153,8938275de98df7009e36e84222064e44:1736590279,f4c7e7ddb88df70026ae5738c2ed3757:-145097016,c047239dff8df700ef5389e60ed19779:199529640,89e6a75d1f8df700395cbc9f0bed3314:759285601,8a9627dd988df700d0c9a3239836d945:1880750018,a896e3dd5b8df700a18dec4630cc69de:-1590805840,ba86e3dd848df700e52a45e0c0873972:-1791473511,e75663ddf98df700de031110dd6693bd:-1108111703,e7d367d9928df700dda2ea5048f7e207:-1791473511,4e936b99e68df70045732f49bc3f2ad0:1151198277,47436f1dec8df700084953efabc84774:-815430518,2fc267d9998df700ccdf07df6bc67a38:237161848,e102231d8d8df700e5ac6ea1d60b2562:253179451,1a912fd91b8df7006534ce008fc6740d:-1727082130,c6516bd9848df700de96cee061980b3c:-1979087044,b341af59b78df700298e139814b8ba7f:-1105964,5241a7592a8df7004b38921b83e11f6c:2122684416,8221e7d9858df700b898ded5e2a57e25:1308555552,17902b19778df700264404f331faa13d:211053960,0840eb99f48df700ef2799c8f89eccda:608394398,70306f99e98df700baf0f7137ce17263:-570806557,fe00eb99b68df70097ada73ffe0f85d2:-753872423,a2df13994d8df7002a876c195c0d80c8:1263653435,4a4f97594e8df700b1352402ebe46613:-696013111,2c2f9b19318df700a617fa653d39fcd9:-844733183,c8ce9fd50f8df700a57d932a69f63405:427443747,5f2e13d5e18df70011752f2d3936677d:-1883124349,3e1e1759028df7001a9779367f179ef1:58701507,a29d5fd50e8df7009abf5d50c17767a5:-153874464,488d13190c8df7008f8e71462442474f:1437237447,00fc1fd5cd8df700bdbb9302e79440e2:-1823813667,eadc1fd5c28df7004a35ad68cc26818f:896937185,ec6c9319318df700bb678ff5a700663c:622997267,48ab5f551c8df700d7225a2e49e74dae:1937499803,c48bd7d5548df700b748db996ba42bcb:-1149331957,832b9b55138df700658945365d4b6f4a:1186560148,7488bdd59dc5f700ebc434c0032af22c:-1437332677,bb78bd5593c5f7005df0f5dfca611a95:-2013791012,044d42c5df41f7003ea2efd4d64cd9af:-997539173,8cac06c58141f700ea96df94c7053557:-234209499,806b8e05f341f7001127255de1413a93:-936333621,cdaa42c1b341f700417aed80396e0e16:1625893151,e1d882418741f700eecaf89b490898f5:1814796736,471efc45788db700fbc26e0b1650adb7:-1189517728,75fd3085708db7002b52e472c7eb9a95:578338047,e58d3c45728db70040ab2ead664c8de9:1325916859,68d62fcc71f0b300865cf055a420c6b9:1814796736,de603c8ae3e433407677fea30f6e89bc:2017540096,b305cdff3198bb003f85fe9f28c5bda9:-1016919447,c805c1ffc398bb00d3a096b55e469acd:1156911292,33e4c17f2d98bb00d9ce7d86c5304873:11796297,22c441ffcc98bb007a4906c3285f25aa:-2062330223,9fb489ffaf98bb00ac71fca38338898e:-523297227,86f8f4b34e98bb009808a5c4b064d79b:651803483,9538b0b35c98bb00b1a547a4b05d711c:-2005299486,2327b8333898bb002a7e6505b7d6efd7:399635106,1d07fcffbc58bb00acdd735ffe7e7cbb:-1197683206,e92dedd54472af407ab876c244f1ad7e:1504802522,59bd6ed8a376eb40bae61b84ba0baf22:-787449333,abeb9f3ffdd6ef004912e11de85d0b50:820719158,f5eb1f3ff7d6ef005685ffd34d118da9:-333942346,d655048fc7deaf00c2ac9044ec9092e7:-101721391,3961c48b91deaf004e94a855b8df7d92:-1308900688,ed3e5d2bf73d6700e9447f53556dd58d:-462396629,4d7d1de7db3d67006cfabf8340c43048:-61198434,70ecd9e7ad3d6700cc38f92ca1e68824:1750566385,ba1cd5e7f93d670028452305fbad2b22:-1377025010,38fb9da7e93d670009be04cfa1dc0e7c:-1393669942,71bbd5e7753d67002b38972db6e97c1b:504575426,9f9b9d67e53d67006bc182c8df12c0c5:-1934907651,a09b95e7053d6700299d56ca1b8989c4:-1635666836,c97b9da7da3d6700957b87e6d2db5456:1623481015,932b15a78a3d67006eaba04cfa3752a0:-580517874,070645e70ef96700b80745f4f3d10806:-1203073710,84ba64af9a796700937cace5e0a76123:2117416128,e3c9a86f67796700aec9986f4705b141:28382208,0147a86ff6796700c43f2a108818823c:2117416128,7a2f5ed3ad29a3409ee95fb3fd58bf04:913343165,010f1ed33f29a3401cbcdc59c7e2b7fd:923652996,212dda93fa29a340c51fa00676ae1926:-5338471,54fc1a935f29a3403d8ae30a498623b9:-2084810900,c2679ce72b6b5f004a6f6aa98f837b52:2125768325,0e16d427506b5f00b943528deae5ffa7:1120595671,e0f27b81fda79700f9e42b71fad5abf6:-375386627,713e6b4dad679700db9ad4dfd5835bdb:-2087089884,51b6eb09fc67970084fc70599d0d899b:891859928,752c7ac92fa39700a117639217979073:1079511226,412453b893e7570005675f0978ada8c4:-551602352,075c03b07fe7570039f025abb54a7c46:-419672486,424ccb70dde75700dbc2d71e830710a1:-1799539426,f3412230d9675700d770164ce52b2437:-1155226655,e211a6fc132757004c85857569f2be11:-1767268618,fe4711e3651f5300f544389f54042578:324650890,1737dda3831f530097e108307f03f25c:1645318470,d8d6dc4f441b5300d25de0f8c294752b:-1678998510,e4781083432e1f007225e5e2cf84c440:-1899071811,393818431b2e1f001f1094bb145d3c99:-477489045,89d65bfabd859b0080a30cf03648c9ef:1727303449,6f4c514388741300fbe641d6f6f79404:881112756,50a0194fe4341300c2595b81734c5a29:-471161641,d84059cbd2341300189e9ec1d3efd660:-645755475,ec7f414b05341300250c8d8ebe3b83f1:-1312363377,9f3fc98b0e341300284c1fbab57a6036:1129243127,e80fc98b463413001d2e903ddd1f442f:1401949065,766ecd8b303413002e83bf58b8abf8eb:952307289,095e41cb263413005e3e5d531970e31a:39420012,5c3ecd8b2d341300e420fc02f5e919e4:993838879,371e094b2e341300da37cd2709a4d4ed:1275833981,221ecd8b2c341300f53c7a4aa9bf6428:-1904125987,8abd494bc934130031b0c92b97a49044:790470306,40bdc14ba73413003ad51b23e1553e03:1922160649,6bcc818bc4341300bfb94236531dd789:-1032080459,c9cf1ec0803c1300e8e8608794967dde:952307289,5caf5ec0f43c1300f77143eb8484e348:1096955891,6e9f16c06c3c13001330f7a63c01b490:159392996,819f1ec0873c13001ae1d96011c4999c:1386985284,c08fdac0cd3c130011c9b055a88c40ee:-2037939872,597fdac0f93c1300356ea6d49f9f4466:88614662,a9921a48fcf81300fd979f72b933f6f0:-260642230,68c19a0887f81300a420496c4d8736d4:1890581807,e6a1d608eaf8130024f9feaae63c9f94:323487812,99515ec488f813004c384b643158a54b:393089780,558c558422374700cf862adef0b28eda:1153128457,ed6c1d809337470046de47c2e314508a:-1511159079,20ba8df54ca7cf006134c4de6698c0f8:-630195112,2df6358a82624700933dfba1d2db5cf0:371154616,5683b5c6a3624700b2e634d54b9003b4:608034770,e743f1c632624700d6ef27511a03e4c1:-755655854,69a2f986d3624700b5f6b78453f8f1d5:-1874981445,089271c62c6247001161fc6c234eef24:-360569307,47f13d06d26247001bb5492a20afbfd6:-1874981445,dc1138f1cc2607008b786ff938e54b4f:-1462268999,cab07cb1e526070000136baceeb25dec:-1877438562,b0d67b6877a283003f4238a0de8f952a:-1462268999,d218979febde8300fb8d89e14dee490d:949971788,d218979febde8300fb8d89e14dee490d:949971788,d218979febde8300fb8d89e14dee490d:949971788,d218979febde8300fb8d89e14dee490d:949971788,d218979febde8300fb8d89e14dee490d:949971788</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_6f829e9adbf1b20054d8ff621f961937</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($rootScope, $scope, spUtil, $http, $window) {
	var c = this;
	var my_sys_id = c.data.info.userId;
	var sessionId = c.data.info.sessionId;
	var user_name = c.data.info.userName;
	$('#refresh').val('0');
	$('[data-toggle="popover"]').popover(); 
	c.protocols = [];
	c.pagination = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns = [{
		key: 'project_name',
		label: 'Project Name',
		sort: 'asc'
	},
							 {
								 key: 'sys_create_on',
								 label: 'Created Date',
								 sort: 'asc'
							 },
							 {
								 key: 'actions',
								 label: 'Actions',
								 sort: null
							 }
							];

	c.getRange = function() {
		var currentSize = c.pagination.currentSize;
		var currentPage = c.pagination.currentPage;

		var offset = currentSize * currentPage;

		return new Array(Math.ceil(c.data.tasks.length / currentSize));
	};

	c.setPage = function(index) {
		c.pagination.currentPage = index;
	};

	c.toggleSort = function(index) {
		var column = c.columns[index];
		var key = column.key;

		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {

			var sortAscending = column.sort === 'asc';

			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;

			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB) :
					keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};

			c.data.tasks = c.data.tasks.sort(compareRows);
		}
	};

	c.pagination0 = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns0 = [{
		key: 'ic_id',
		label: 'IC ID',
		sort: 'asc'
	},
								{
									key: 'study_name',
									label: 'Study Name',
									sort: 'asc'
								},
								{
									key: 'project_title',
									label: 'Project Title',
									sort: 'asc'
								},
								{
									key: 'submitted_by',
									label: 'Submitted By',
									sort: 'asc'
								},
								{
									key: 'submitted_date',
									label: 'Submitted Date',
									sort: 'asc'
								},
								{
									key: 'status',
									label: 'Status',
									sort: 'asc'
								},
								{
									key: 'last_update_date',
									label: 'Last Update Date',
									sort: 'asc'
								},
								{
									key: 'approval',
									label: 'Approval',
									sort: null
								},

								{
									key: 'actions',
									label: 'Actions',
									sort: null
								}		
							 ];

	c.getRange0 = function() {
		var currentSize = c.pagination0.currentSize;
		var currentPage = c.pagination0.currentPage;

		var offset = currentSize * currentPage;

		return new Array(Math.ceil(c.data.icSignTasks.length / currentSize));
	};

	c.setPage0 = function(index) {
		c.pagination0.currentPage = index;
	};

	c.toggleSort0 = function(index) {
		var column = c.columns0[index];
		var key = column.key;

		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {

			var sortAscending = column.sort === 'asc';

			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;

			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB) :
					keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};

			c.data.icSignTasks = c.data.icSignTasks.sort(compareRows);
		}
	};

	c.pagination1 = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns1 = [{
		key: 'gdsp_id',
		label: 'GDSP ID',
		sort: 'asc'
	},
								{
									key: 'principal_name',
									label: 'Principal Name',
									sort: 'asc'
								},
								{
									key: 'project_name',
									label: 'Project Name',
									sort: 'asc'
								},
								{
									key: 'status',
									label: 'Status',
									sort: 'asc'
								},
								{
									key: 'approval',
									label: 'Approval',
									sort: null
								},
								{
									key: 'submitted_date',
									label: 'Submitted Date',
									sort: 'asc'
								},
								{
									key: 'actions',
									label: 'Actions',
									sort: null
								}
							 ];

	c.getRange1 = function() {
		var currentSize = c.pagination1.currentSize;
		var currentPage = c.pagination1.currentPage;

		var offset = currentSize * currentPage;

		return new Array(Math.ceil(c.data.submittedTasks.length / currentSize));
	};

	c.setPage1 = function(index) {
		c.pagination1.currentPage = index;
	};

	c.toggleSort1 = function(index) {
		var column = c.columns1[index];
		var key = column.key;

		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {

			var sortAscending = column.sort === 'asc';

			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;

			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB) :
					keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};

			c.data.submittedTasks = c.data.submittedTasks.sort(compareRows);
		}
	};

	c.pagination2 = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns2 = [{
		key: 'study_name',
		label: 'Study Name',
		sort: 'asc'
	},
								{
									key: 'project_title',
									label: 'Project Title',
									sort: 'asc'
								},
							/*	{
									key: 'certification_to',
									label: 'Certification Issues To',
									sort: 'asc'
								},
								{
									key: 'certification_from',
									label: 'Certification Issues From',
									sort: 'asc'
								},*/
								{
									key: 'gpa_organization',
									label: 'Organization of GPA',
									sort: null
								},
								{
									key: 'sd_organization',
									label: 'Organization of SD',
									sort: 'asc'
								},
								{
									key: 'sys_create_on',
									label: 'Created Date',
									sort: 'asc'
								},
								{
									key: 'actions',
									label: 'Actions',
									sort: null
								}
							 ];

	c.getRange2 = function() {
		var currentSize = c.pagination2.currentSize;
		var currentPage = c.pagination2.currentPage;

		var offset = currentSize * currentPage;

		return new Array(Math.ceil(c.data.icTasks.length / currentSize));
	};

	c.setPage2 = function(index) {
		c.pagination2.currentPage = index;
	};

	c.toggleSort2 = function(index) {
		var column = c.columns2[index];
		var key = column.key;

		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {

			var sortAscending = column.sort === 'asc';

			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;

			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB) :
					keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};

			c.data.icTasks = c.data.icTasks.sort(compareRows);
		}
	};

	c.pagination3 = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns3 = [{
		key: 'first_name',
		label: 'First Name',
		sort: 'asc'
	},
								{
									key: 'last_name',
									label: 'Last Name',
									sort: 'asc'
								},
								{
									key: 'access',
									label: 'Access',
									sort: 'asc'
								},
								{
									key: 'action',
									label: 'Action',
									sort: null
								}
							 ];

	c.getRange3 = function() {
		var currentSize = c.pagination3.currentSize;
		var currentPage = c.pagination3.currentPage;

		var offset = currentSize * currentPage;

		return new Array(Math.ceil(c.data.userTasks.length / currentSize));
	};

	c.setPage3 = function(index) {
		c.pagination3.currentPage = index;
	};

	c.toggleSort3 = function(index) {
		var column = c.columns3[index];
		var key = column.key;

		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {

			var sortAscending = column.sort === 'asc';

			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;

			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB) :
					keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};

			c.data.userTasks = c.data.userTasks.sort(compareRows);
		}
	};

	c.pagination4 = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns4 = [{
		key: 'ic_id',
		label: 'IC ID',
		sort: 'asc'
	},
								{
									key: 'study_name',
									label: 'Study Name',
									sort: 'asc'
								},
								{
									key: 'project_title',
									label: 'Project Title',
									sort: 'asc'
								},
								/*{
									key: 'issue_to',
									label: 'Certification Issues To',
									sort: 'asc'
								},
								{
									key: 'issue_from',
									label: 'Certification Issues From',
									sort: 'asc'
								},*/
								{
									key: 'status',
									label: 'Status',
									sort: 'asc'
								},
								{
									key: 'approval',
									label: 'Approval',
									sort: null
								},
								{
									key: 'submitted_date',
									label: 'Submitted Date',
									sort: 'asc'
								},
								{
									key: 'action',
									label: 'Action',
									sort: null
								}
							 ];

	c.getRange4 = function() {
		var currentSize = c.pagination4.currentSize;
		var currentPage = c.pagination4.currentPage;

		var offset = currentSize * currentPage;

		return new Array(Math.ceil(c.data.icSubmittedTasks.length / currentSize));
	};

	c.setPage4 = function(index) {
		c.pagination4.currentPage = index;
	};

	c.toggleSort4 = function(index) {
		var column = c.columns4[index];
		var key = column.key;

		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {

			var sortAscending = column.sort === 'asc';

			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;

			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB) :
					keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};

			c.data.icSubmittedTasks = c.data.icSubmittedTasks.sort(compareRows);
		}
	};

	c.pagination5 = {
		//pageDisplayLimit: 4,
		numPages: 0,
		//pageIndexes: ['first', 'previous', 'next', 'last'],
		pageSizes: [5, 10, 15, 20, 25],
		currentSize: 1,
		currentPage: 0
	};

	c.columns5 = [{
		key: 'project_name',
		label: 'Project Name',
		sort: 'asc'
	},
								{
									key: 'investigator',
									label: 'Investigator',
									sort: 'asc'
								},
								{
									key: 'sys_create_on',
									label: 'Created Date',
									sort: 'asc'
								},
								{
									key: 'actions',
									label: 'Actions',
									sort: null
								}
							 ];

	c.getRange5 = function() {
		var currentSize = c.pagination5.currentSize;
		var currentPage = c.pagination5.currentPage;

		var offset = currentSize * currentPage;

		return new Array(Math.ceil(c.data.erTasks.length / currentSize));
	};

	c.setPage5 = function(index) {
		c.pagination5.currentPage = index;
	};

	c.toggleSort5 = function(index) {
		var column = c.columns5[index];
		var key = column.key;

		// if sorting is defined, then we can toggle this column
		if (column.sort !== null) {

			var sortAscending = column.sort === 'asc';

			column.sort = sortAscending ? 'desc' : 'asc';
			sortAscending = !sortAscending;

			var compareRows = function(a, b) {
				var keyA = a[key];
				var keyB = b[key];

				// use local-compare for strings
				if (isNaN(keyA) &amp;&amp; isNaN(keyB)) {
					return sortAscending ? keyA.localeCompare(keyB) :
					keyB.localeCompare(keyA);
				}

				// use normal comparison for numbers
				return sortAscending ? +keyA - +keyB : +keyB - +keyA;
			};

			c.data.erTasks = c.data.erTasks.sort(compareRows);
		}
	};
	//start client js

	$('.collapse').on('shown.bs.collapse', function() {
		console.log(this);
		$(this).parent().find(".fa-plus-square").removeClass("fa-plus-square").addClass("fa-minus-square");
	}).on('hidden.bs.collapse', function() {
		$(this).parent().find(".fa-minus-square").removeClass("fa-minus-square").addClass("fa-plus-square");
	});

	var names = ['investigator', 'pTitle', 'pBranch', 'email', 'phone', 'date', 'projectNumber', 'projectName', 'simpleSize', 'prospective', 'restrospective', 'human', 'nonHuman', 'germLine', 'somatic', 'dnaType', 'rnaType', 'microbiome', 'mitochrondria', 'otherType', 'specifyOtherType', 'snpArrayData', 'numSNP', 'expressionArray', 'numExpression', 'methylationArray', 'numMethylation', 'arrayDerive', 'microarrayData', 'sequenceData', 'somaticSnv', 'arrayCgh', 'wholeGenome', 'wholeExome', 'targetGenome', 'targetExome', 'wholeTranscriptome', 'targetTrabscriptome', 'epigenomicMark', 'sanger', 'rrna', 'association', 'arrayDerivedExpression', 'rnaExpression', 'derivedMethylation', 'otherAnalysis', 'spcifiedOtherAnalysis', 'individual', 'aggregate', 'notApplicableDataForm', 'arrayExpress', 'cancerGenomics', 'clinVar', 'dbGap', 'dbSnp', 'dbVar', 'ena', 'genBank', 'geo', 'mgi', 'sra', 'traceArchive', 'wormbase', 'zfin', 'OtherRepository', 'specifiedRepository', 'phenotype', 'exposure', 'clinicalData', 'specifiedClinicalData', 'protocol', 'specifiedProtocol', 'instrument', 'specifiedInstrument', 'surveyTool', 'otherCompanion', 'specifiedCompanion', 'dataCheck', 'publication', 'otherSubmission', 'psecifiedOtherSubmission', 'noHumanData', 'noLimitation', 'limitedOnly', 'limitedPurpose', 'relateToDisease', 'orginId', 'version', 'rat', 'mouse', 'celegans', 'drosophila', 'yeast', 'yeastSpecies', 'bacteria', 'bacteriaSpecies', 'noHumanOther', 'numDerivedGenotype', 'numMicroarrayData', 'numSquenceData', 'numSomaticSnv', 'numArrayCgh', 'numWholeGenome', 'numWholeExome', 'numTargetGenome', 'numTargetedExome', 'numWholeTranscriptome', 'numTargetedTranscriptome', 'numEpigenomic', 'numSanger', 'numRrna'];
	var textFields = ['investigator', 'pTitle', 'pBranch', 'email', 'phone', 'date', 'projectNumber', 'projectName', 'simpleSize', 'specifyOtherType', 'spcifiedOtherAnalysis', 'specifiedRepository', 'specifiedClinicalData', 'specifiedProtocol', 'specifiedInstrument', 'specifiedCompanion', 'psecifiedOtherSubmission', 'orginId', 'version', 'numSNP', 'numExpression', 'numMethylation', 'yeastSpecies', 'bacteriaSpecies', 'noHumanOther', 'numDerivedGenotype', 'numMicroarrayData', 'numSquenceData', 'numSomaticSnv', 'numArrayCgh', 'numWholeGenome', 'numWholeExome', 'numTargetGenome', 'numTargetedExome', 'numWholeTranscriptome', 'numTargetedTranscriptome', 'numEpigenomic', 'numSanger', 'numRrna'];
	var icNames = ['certification_date', 'institution_name', 'certification_to', 'certification_from', 'gpa_organization', 'sd_organization', 'study_name', 'project_title', 'data_access', 'display', 'frequency', 'sampleTime', 'sampleConsent', 'consent_group'];
  $scope.orgType = '';
	$scope.backToMain = function() {
		$('#refresh').val('0');
		location.replace("$sp.do?id=gds_web_application");
	};

	$("#piName").autocomplete({
		delay: 500,
		source: function(request, response) {
			var term = $('#piName').val();
			var temp = '';
			if (term.indexOf(',') &gt;= 0) {
				temp = term.split(',');
				var length = temp.length;
				if (length &gt; 1) {
					term = temp[1].trim() + " " + temp[0].trim();
				} else {
					term = temp[0];
				}
			}
			var req = {
				method: 'GET',
				url: '/api/naci/gds/fetchUserList',
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', sessionId);
				},
				headers: {
					'Content-Type': 'application/json'
				},
				params: {
					'term': term
				}
			};
			$http(req).then(handleResponse, handleError);

			function handleResponse(responseData) {
				var result = responseData.data.result;

				response(result);
			}

			function handleError(response) {
				console.error(response);
				alert('ERROR');
			}
		},
		autoFocus: true,
		select: function(event, ui) {
			$('#refresh').val('0');
			console.log(event, ui);
			var id = ui.item.id;
			var email = ui.item.email;
			var phone = ui.item.phone;
			var title = ui.item.title;
			var longOrg = ui.item.longOrg;
			
			if(title == null || title.trim().length==0){
				title = 'N/A';
			}
			if(email == null || email.trim().length == 0){
				email = 'N/A';
			}
			if(phone == null || phone.trim().length == 0){
				phone = 'N/A';
			}
			if(longOrg == null || longOrg.trim().length == 0){
				longOrg = 'N/A';
			}
			var name = (ui.item.value || '').split(' ');
			$('#piUserId').val(id);
			if (name != null &amp;&amp; name.length &gt; 1) {
				$('#piFirstName').val(name[0]);
				$('#piLastName').val(name[1]);
				$('#piEmail').val(email);
				$('#piPhone').val(phone);
				if(longOrg  == 'N/A'){
					$('#piBranch').val(longOrg);
				}else{
					getBranch(longOrg);
				}
				$('#piTitle').val(title);
			} else {
				$('#piFirstName').val('');
				$('#piLastName').val('');
				$('#piEmail').val('');
				$('#piPhone').val('');
				$('#piBranch').val('');
				$('#piTitle').val('');
			}
			$('#aoInfo').show();
		}
	});
	
	$("#userName").autocomplete({
		delay: 500,
		source: function(request, response) {
			var term = $('#userName').val();
			var temp = '';
			if (term.indexOf(',') &gt;= 0) {
				temp = term.split(',');
				var length = temp.length;
				if (length &gt; 1) {
					term = temp[1].trim() + " " + temp[0].trim();
				} else {
					term = temp[0];
				}
			}
			var req = {
				method: 'GET',
				url: '/api/naci/gds/fetchUserList',
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', sessionId);
				},
				headers: {
					'Content-Type': 'application/json'
				},
				params: {
					'term': term
				}
			};
			$http(req).then(handleResponse, handleError);

			function handleResponse(responseData) {
				var result = responseData.data.result;

				response(result);
			}

			function handleError(response) {
				console.error(response);
				alert('ERROR');
			}
		},
		autoFocus: true,
		select: function(event, ui) {
			$('#refresh').val('0');
			console.log(event, ui);
			var id = ui.item.id;
			var name = (ui.item.value || '').split(' ');
			$('#userId').val(id);
			if (name != null &amp;&amp; name.length &gt; 1) {
				$('#userFirstName').val(name[0]);
				$('#userLastName').val(name[1]);
			} else {
				$('#userFirstName').val('');
				$('#userLastName').val('');
			}
		}
	});
	var isLoading = true;
	$('#selectParent').select2();//({tags: true});

	$('#selectParent').on('change', function(e) {
		console.log('change')
		describeProtocols();
	})
	/*$('#selectParent').on("change", function(e){
		if (isLoading) {
			isLoading = false;
		} else {
			var value = $(this).val();
			setTimeout(function() {
				var parentId = JSON.stringify(value);
				var gdspStatus = $('#gdspStatus').val();
				var icStatus = $('#icStatus').val();
			}, 0);				
		}
	});*/
	var userLocation = window.location.href;

	var temp = userLocation.split('&amp;');
	var rec_id = '';
	var access = '';

	if (temp.length &gt; 1) {
		var t1 = temp[1].split('itemId');
		rec_id = t1[1].substring(1);
	}
	if (temp.length &gt; 1) {
		var t2 = temp[2].split('access');
		access = t2[1].substring(1);
	}

	access = unescape(access);
	access = encodeDecodeData(access.trim(), 'decode');
	if(access != 'Read_and_Write'){
		access = 'Read_Only';
	}
	if (rec_id != null &amp; rec_id.length &gt; 0) {
		$('#recId').val(rec_id);
		$('#aoInfo').show();
		c.data.access = access;
		loadSavedData($('#recId').val());
		loadData(rec_id);
		$('#gdspli').show();
		setTimeout(function (){
			if($('#organismType').val() == 'nonhuman'){
				$('#icli').hide();
			}else{
				$('#icli').show();
			}							
		}, 500);
		if($('#organismType').val() == 'nonhuman'){
			$('#icli').hide();
		}else{
			$('#icli').show();
		}
		$('#erli').show();
		$('#acli').show();

	} else {
		clearData("no Id");
		$('#aoInfo').hide();
		loadParentOptionString();
		$('#titleDiv').hide();
	}
	preprocess(access);
	loadTissueContent();
	function describeProtocols() {
		$('#s2id_selectParent li div').each(function() {
			var protocolNumber = this.innerText;
			var protocol = c.protocols.find(function(item) {
				return item.number == protocolNumber
			});
			if (protocol) {
				this.title = protocol.name;
				$(this).tooltip();
			}
		})		
	}
	
	function loadTissueContent(){
			var req = {
				method: 'GET',
				url: '/api/naci/gds/fetchTissueContent',
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', sessionId);
				}
			};	
			$http(req).then(handleResponse, handleError);

			function handleResponse(responseData) {
				var result = responseData.data.result;
				console.log(result);
				c.protocols = result;
				describeProtocols();
			}

			function handleError(response) {
				console.error(response);
				alert('ERROR');
			}			
	}
	
	function getBranch(longOrg){
			var req = {
				method: 'GET',
				url: '/api/naci/gds/fetchUserBranch',
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', sessionId);
				},
				headers: {
					'Content-Type': 'application/json'
				},
				params: {
					'longOrg': longOrg				}
			};	
			$http(req).then(handleResponse, handleError);

			function handleResponse(responseData) {
				var result = responseData.data.result;
				console.log(result);
        $('#piBranch').val(result.branch);
			}

			function handleError(response) {
				console.error(response);
				alert('ERROR');
			}		
	}

	function preprocess(access) {
		var names = ['projectTitle', 'piFirstName', 'piLastName', 'piEmail', 'piPhone', 'organismType'];
		$('#refresh').val('0');
		//var radioName = "erId";
		if (access == 'Read_Only') {
			for (var i = 0; i &lt; names.length; i++) {
				if (names[i] == 'organismType') {
					$('#' + names[i]).attr('disabled', 'disabled');
				}
				$('#' + names[i]).attr('readonly', 'readonly');
			}
			$('#erId1').attr('disabled', 'disabled');
			$('#erId2').attr('disabled', 'disabled');
		}
		if (access == 'Read_and_Write') {
			for (var k = 0; k &lt; names.length; k++) {
				if (names[k] == 'organismType') {
					$('#' + names[k]).removeAttr('disabled');
				}
				$('#' + names[k]).removeAttr('readonly');
			}
			$('#erId1').removeAttr('disabled');
			$('#erId2').removeAttr('disabled');
			//pi email, pi phone and pi title always disabled
			$('#piEmail').attr('disabled', 'disabled');
			$('#piPhone').attr('disabled', 'disabled');
			$('#piTitle').attr('disabled', 'disabled');
			$('#piBranch').attr('disabled', 'disabled');
		}
		//loadBranchOptionString();
		//$('#piName').attr('readOnly', 'readOnly');
	}
	
	scope.newGDSParent = function(){
		$('#parentError').hide();
		$('#protocolNumber').val('');
		$('#protocolName').val('');
		$('#addParentGDSDiv').modal('show');
			$('#addNewProtocolBt').off('click').click(function() {
			   if($('#protocolNumber').val().trim().length == 0 || $('#protocolName').val().trim().length == 0 || validateProtocolNumber($('#protocolNumber').val().trim())){
					 $('#parentError').html("&lt;p&gt;&lt;font color='red'&gt;Please fill in required field(s), and protocol number must start with two digits.&lt;/font&gt;&lt;/p&gt;");
					 $('#parentError').show();
				 }else{
					 $('#protocolConfirmDiv').modal('show');
					 $('#messageProtocol').html('Are you sure you want to create this procotol?');
				 }
		});
		$('#btnYesConfirmProcotol').off('click').click(function(){
					createNewProtocol();																				 
		});
	}
	
	function validateProtocolNumber(str){
		 str = str.substring(0,2);
		  //alert(isNaN(str));
     return isNaN(str);
	}

	function createNewProtocol(){
		var req = {
			method: 'POST',
			url: '/api/naci/gds/createProtocol',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: {number: $('#protocolNumber').val(), name: $('#protocolName').val(), branch: ''}
		};
		$http(req).then(handleResponse, handleError);
		function handleResponse(response) {
			var result = response.data.result;
			//populate user data
			c.protocols = result;
			var val = "";
			for (var i = 0; i &lt; result.length; i++) {
				val = val + "&lt;option value='" + result[i].number + "'&gt;" + result[i].number + "&lt;/option&gt;";
			}
			$('#selectParent').html(val);
			$('#protocolConfirmDiv').modal('hide');
			$('#addParentGDSDiv').modal('hide');
			console.log(result);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}		
	}
	
	function loadSavedData(id){
		var data = {
			gdsId: id,
			sysId: my_sys_id
		};
		//load GDSP saved Data
		$('#refresh').val('0');
		var req = {
			method: 'GET',
			url: '/api/naci/gds/loadGDSPSaveData',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			params: data
		};
		$http(req).then(handleResponse, handleError);
		function handleResponse(response) {
			var result = response.data.result;
			//populate user data
			c.data.tasks = result;
			console.log(result);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
		//load IC saved Data
		var req1 = {
			method: 'GET',
			url: '/api/naci/gds/loadICSavedData',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			params: data
		};
		$http(req1).then(handleResponse1, handleError1);
		function handleResponse1(response) {
			var result = response.data.result;
			//populate user data
			c.data.icTasks = result;
			console.log(result);
		}

		function handleError1(response) {
			console.error(response);
			alert('ERROR');
		}		 

	}

	//when page ready, the user access should populate
	function loadUserData() {
		var data = {
			gds_id: rec_id,
			user_id: my_sys_id
		};
		var req = {
			method: 'GET',
			url: '/api/naci/gds/getUser',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			params: data
		};
		$http(req).then(handleResponse, handleError);
		$('#refresh').val('0');
		function handleResponse(response) {
			var result = response.data.result;
			//populate user data
			c.data.userTasks = result;
			console.log(result);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}
	//end of loading user data
	loadUserData();
	$scope.lookUser = function() {
		$('#refresh').val('0');
		$('#first_name').val('');
		$('#last_name').val('');
		$('#userPageType').val('gdsInfo');
		$('#userSelection').modal('show');
	}
	$scope.saveProjectInformation = function(type) {
		$('#refresh').val('0');
		if (validateGDSInfo()) {
			$('#gdsErrorDiv').show();
		} else {
			$('#gdsErrorDiv').hide();
			var sessionId = c.data.info.sessionId;
			var userId = c.data.info.userId;
			var variables = getProjectInfoData();
			variables[0].userId = userId;
			if (type == 1) {
				variables[0].gds_id = $('#hideGDSId').val();
				variables[0].method = "update";
			} else if (type == 0) {
				variables[0].method = "save";
			}
			var param = JSON.stringify(variables);
			$.ajax({
				dataType: "json",
				type: "POST",
				contentType: "application/json",
				url: "/api/naci/gds/saveProjectInformationService",
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', sessionId);
				},
				data: param,
				async: false,
				success: function(data) {
					$('#titleDiv').html(" &lt;b&gt;GDS ID: " + data.result[0].gds_number + "&lt;/b&gt; &lt;lable&gt;");
					$('#titleDiv').show();
					$('#titleButtomDiv').html(" &lt;b&gt;GDS ID: " + data.result[0].gds_number + "&lt;/b&gt; &lt;lable&gt;");
					$('#titleButtomDiv').show();
					$('#hideGDSId').val(data.result[0].gds_id.toString());
					loadUserData();
					$('#saveBt').hide();
					$('#updateBt').show();
					//$('#messageDiv').html("&lt;font color='green'&gt;The project information has been saved successfully&lt;font&gt;");
					//$('#messageDiv').show();
					$('#messageInfo').html('The project information has been saved successfully');
					$('#infoModal').modal('show');
					$('#btnOkConfirm').off('click').click(function() {
						$('#infoModal').modal('hide');
						location.reload();
					});
					$('#gdspli').show();
					$('#icli').show();
					$('#erli').show();
					$('#acli').show();
					//based on the information to enable or disable IC and Exception Request
					if (variables[0].organismType == 'human' || variables[0].organismType == 'both') {
						$('#icBtn').removeAttr('disabled');
					} else {
						$('#icBtn').attr('disabled', 'disabled');
					}
					if (variables[0].erId == 'yes') {
						$('#erBtn').removeAttr("disabled");
					} else {
						$('#erBtn').attr("disabled", "disabled");
					}
					if(type == 0){
						document.location.href = "$sp.do?id=gds_web_main&amp;itemId=" + $('#hideGDSId').val() + "&amp;access=" + encodeDecodeData('Read_and_Write', 'encode');
					}
					//save user - if PI is not creator, then grant PI project access
					var piId = $('#piUserId').val();
					if(piId != my_sys_id){
						var gdsId = $('#hideGDSId').val();
						var userData = piId + "+" + $('#piFirstName').val() + "+" + $('#piLastName').val();
						saveUser(userData, gdsId, 'Read_and_Write');
					}
				},
				error: function(data) {
					alert("ERROR");
				}
			});
		}
	};

	function validateGDSInfo() {
		var isOk = false;
		clearGDSInfoBackgroud();
		if ($('#projectTitle').val().trim().length == 0) {
			$('#projectTitle').css("background-color", "yellow");
			isOk = true;
		}
		//make sure the user select PI
		if ($('#piName').val().trim().length == 0 ||  $('#piUserId').val() == null ||  $('#piUserId').val().trim().length == 0) {
			$('#piName').css("background-color", "yellow");
			isOk = true;
		}
		if ($('#piEmail').val().trim().length == 0) {
			$('#piEmail').css("background-color", "yellow");
			isOk = true;
		}
		if ($('#piPhone').val().trim().length == 0) {
			$('#piPhone').css("background-color", "yellow");
			isOk = true;
		}
		if ($('#piTitle').val().trim().length == 0) {
			$('#piTitle').css("background-color", "yellow");
			isOk = true;
		}
		if ($('#piBranch').val() == "None") {
			$('#piBranch').css("background-color", "yellow");
			isOk = true;
		}
		if ($('#organismType').val() == "0") {
			$('#organismType').css("background-color", "yellow");
			isOk = true;
		}

		return isOk;
	}

	function clearGDSInfoBackgroud() {
		$('#projectTitle').css("background-color", "");
		$('#piName').css("background-color", "");
		$('#piEmail').css("background-color", "");
		$('#piPhone').css("background-color", "");
		$('#piTitle').css("background-color", "");
		$('#piBranch').css("background-color", "");
		$('#organismType').css("background-color", "");
	}

	$scope.createGDSP = function() {
		$('#collapseGDSP').collapse('show');
		var $gdsp = $('#loadedRequests');
		$('#refresh').val('0');
		clearRequiredFieldBackColor();
		resetRequestValue();
		$('#errorMessage').html('');
		$('#ccr_id').val('');
		$('#saved_id').val('');
		$('#regularSubmit').show();
		$('#resubmit').hide();
		$('#pre_comments_div1').hide();
		//load GDS information and fill them into GDSP form
		var data = {
			sysId: $('#hideGDSId').val()
		};
		var request = {
			method: 'GET',
			url: '/api/naci/gds/getProjectInformation',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			params: data
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result[0];
			//populate data into submission form
			loadGDSData(result);
			$('#inFirstName').val($('#piFirstName').val());
			$('#inLastName').val($('#piLastName').val());
			$('#inUserId').val($('#piUserId').val());
			$gdsp.modal('show').on('shown.bs.modal', function(el) {
				$(el.target).find('.modal-content').scrollTop(0);
			});
			console.log(result);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	};

	$scope.openIcQUestion = function() {
		$('#refresh').val('0');
		$('#collapseIC').collapse('show');
		cleanICData();
		$('#project_title').val($('#projectTitle').val());
		showSubmitButton('0');
		$('#icError').hide();
		clearICFieldBackground();
		$('#pre_comments_ic_div1').hide();
	   $('#controllaccessDiv').hide();
		$('#icQuestion').modal('show');
	}

	$scope.closeGDSPModal = function() {
		var $gdsp = $('#loadedRequests');
		$gdsp.modal('hide');
	}

	c.editItem = function(id) {
		$('#refresh').val('0');
		clearRequiredFieldBackColor();
		$('#inFirstName').val('');
		$('#inLastName').val('');
		$('#inUserId').val('');
		$('#pTitle').val('');
		$('#pBranch').val('None');
		$('#phone').val('');
		$('#email').val('');
		$('#investigator').val('');
		$('#errorMessage').html('');
		$('#pre_comments_div1').hide();
		$('#regularSubmit').show();
		$('#resubmit').hide(); 
		var data = {
			requested_id: id
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gdspapi/fetchSavedRequestData',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: data
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			showModal();
			$('#saved_id').val(id);
			$('#selectedUserData').val(result[0].requested_for);
			loadRequestData(result[0].value);
			console.log(result);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	};

	c.removeItem = function(id) {
		$('#refresh').val('0');
		var $confirm = $('#confirmDiv');
		$confirm.modal('show');
		$('#message').html("Are you sure you want to remove this record?");
		$('#btnYesConfirmYesNo').off('click').click(function() {
			var data = {
				saved_id: id,
				action: 'DELETE'
			};
			var request = {
				method: 'POST',
				url: '/api/naci/gdspapi/saveRequestData',
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', sessionId);
				},
				headers: {
					'Content-Type': 'application/json'
				},
				data: data
			};
			$http(request).then(handleResponse, handleError);

			function handleResponse(response) {
				var result = response.data.result;
				$confirm.modal('hide');
				$('#loading').show();
				console.log(result);
			}

			function handleError(response) {
				console.error(response);
				$confirm.modal('hide');
				alert('ERROR');
			}
		});
		$('#btnNoConfirmYesNo').off('click').click(function() {
			$confirm.modal('hide');
		});
	};
	var userList = [];

	function addUser() {
		var firstname = $('#userFirstName').val();
		var lastname = $('#userLastName').val();
		var userId = $('#userId').val();
		var userData = userId + "+" + firstname + "+" + lastname;
		var gdsId = $('#recId').val();
		var access = $('input[name=access]:checked').val();
		if (firstname.trim().length == 0 || lastname.trim().length == 0 || userData.trim().length == 0) {
			$('#error').html('&lt;font color=red&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Please select a user and Accecss Control (click on the name from the list).&lt;/font&gt;');
			$('#error').show();
		} else {
			$('#error').hide();
			//save data into table u_gds_user_accress_t
			saveUserData(userData, gdsId, access);
			$('#userFirstName').val('');
			$('#userLastName').val('');
			$('#userName').val('');
			$("[name = 'access'][value='Read Only']").prop('checked', true);
		}
	};
	$scope.withdrawIC = function(id, ic_id) {
		$('#refresh').val('0');
		$('#messageWithdrawIC').html('Are you sure you want to withdraw this IC request?');
		$('#withdrawICDiv').modal('show');
		$('#btnYesWithdrawIC').off('click').click(function() {
			withdrawRequestIC(id, my_sys_id, ic_id);
			$('#withdrawICDiv').modal('hide');
			$('#loading').show();
		});
		$('#btnNoWithdrawIC').off('click').click(function() {
			$('#withdrawICDiv').modal('hide');
		});
	};

	function saveUserData(userData, gdsId, access) {
		var data1 = {
			data: userData,
			gds_id: gdsId,
			access: access,
			action: 'add'
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gds/saveUser',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: data1
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			loadUserData();
			$('#addUserAccessDiv').modal('hide');
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}

	$scope.searchUser = function() {
		$('#refresh').val('0');
		$('#first_name').val('');
		$('#last_name').val('');
		$('#userPageType').val('user');
		$('#userSelection').modal('show');
	};

	function loadGDSData(data) {
		$('#refresh').val('0');
		$('#investigator').val(data.piFirstName + " " + data.piLastName);
		$('#email').val(data.piEmail);
		$('#phone').val(data.piPhone);
		$('#projectName').val(data.projectTitle);
		$('#pTitle').val(data.piTitle);
		$('#pBranch').val(data.piBranch);
		//get current date
		var today = new Date();
		var dd = today.getDate();
		var mm = today.getMonth() + 1; //January is 0!

		var yyyy = today.getFullYear();
		if (dd &lt; 10) {
			dd = '0' + dd;
		}
		if (mm &lt; 10) {
			mm = '0' + mm;
		}
		var currentDate = mm + '/' + dd + '/' + yyyy;
		$('#date').val(currentDate);
	}

	function loadParentOptionString() {
		$.ajax({
			url: '/api/naci/gds/getAllGDSProtocol',
			data: {
				userId: my_sys_id
			},
			async: false,
			dataType: 'json',
			complete: handleResponse,
			error: handleError
		});

		function handleResponse(response) {
			var result = response.responseJSON.result;
			var val = "";
			for (var i = 0; i &lt; result.length; i++) {
				val = val + "&lt;option value='" + result[i].number + "'&gt;" + result[i].number + "&lt;/option&gt;";
			}
			$('#selectParent').html(val);
//			$('#selectParent').select2({tags: true});
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}

	$scope.loadTissueProtocol = function(){
		$('#protocolInfoModal').modal('show');
	}
	
	function loadData(rec_id) {
		loadSavedData(rec_id);
		loadParentOptionString();
		var request = {
			method: 'GET',
			url: '/api/naci/gds/getProjectInformation',
			headers: {
				'Content-Type': 'application/json'
			},
			params: {
				sysId: rec_id
			}
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			console.log('Retrieved values', result);
			$('#projectTitle').val(result[0].projectTitle);
			$('#piFirstName').val(result[0].piFirstName);
			$('#piLastName').val(result[0].piLastName);
			$('#piUserId').val(result[0].piUserId);
			$('#piName').val(result[0].piFirstName + " " + result[0].piLastName);
			$('#piEmail').val(result[0].piEmail);
			$('#piTitle').val(result[0].piTitle);
			$('#piBranch').val(result[0].piBranch);
			$('#piPhone').val(result[0].piPhone);
			$('#organismType').val(result[0].organismType);
			$('#selectParent').val(result[0].parent.split(',')).change();//('change');

			//var selectedParent = $('#selectParent').val();
			if (result[0].organismType == 'human' || result[0].organismType == 'both') {
				$('#icBtn').removeAttr('disabled');
			} else {
				$('#icBtn').attr('disabled', 'disabled');
			}
			if (result[0].erId == 'yes') {
				$('#erId1').prop("checked", true);
				$('#erBtn').removeAttr('disabled');
			}
			if (result[0].erId == 'no') {
				$('#erId2').prop("checked", true);
				$('#erBtn').attr('disabled', 'disabled');
			}
			$('#titleDiv').html("&lt;label&gt;&lt;b&gt;GDS ID: " + result[0].projectId + "&lt;/b&gt; &lt;lable&gt;");
			$('#titleDiv').show();
			$('#titleButtomDiv').html("&lt;label&gt;&lt;b&gt;GDS ID: " + result[0].projectId + "&lt;/b&gt; &lt;lable&gt;");
			$('#titleButtomDiv').show();
			$('#hideGDSId').val(rec_id);
			$('#gds_id').val(result[0].projectId);
			var gdsp_status = result[0].gdsp_status;
			var ic_status = result[0].ic_status;
			$('#gdspStatus').val(gdsp_status);
			$('#icStatus').val(ic_status);
			//load parent GDSP
			//loadSubmittedData(gdsp_status, selectedParent);
			loadGDSPSubmittedData(gdsp_status);
			//load parent IC
			//loadICSubmittedData(ic_status, selectedParent);
      loadICSubmittedData(ic_status); 
			$('#saveBt').hide();
			controlElementBasedOnAccess();
			loadUserData();
		}

		function loadGDSPSubmittedData(gdsp_status) {
			var request = {
				method: 'GET',
				url: '/api/naci/gds/getProjectGDSPInformation',
				headers: {
					'Content-Type': 'application/json'
				},
				params: {
					projectId: gdsp_status,
					//parentId: selectedParent,
					mySysId: my_sys_id
				}
			};
			$http(request).then(handleResponse1, handleError1);

			function handleResponse1(response) {
				//set submitted GDSP data
				var result = response.data.result;
				c.data.submittedTasks = result;
				console.log(result);
			}

			function handleError1(response) {
				console.error(response);
				alert('ERROR');
			}
	  }	

	function loadICSubmittedData(ic_status) {
		var request = {
			method: 'GET',
			url: '/api/naci/gds/getProjectICInformation',
			headers: {
				'Content-Type': 'application/json'
			},
			params: {
				projectId: ic_status,
				//parentId: selectedParent,
				mySysId: my_sys_id
			}
		};
		$http(request).then(handleResponse2, handleError2);

		function handleResponse2(response) {
			//set submitted GDSP data
			var result = response.data.result;
			c.data.icSubmittedTasks = result;
			console.log(result);
		}

		function handleError2(response) {
			console.error(response);
			alert('ERROR');
		}
	}
		function controlElementBasedOnAccess() {
			if (access == 'Read_Only') {
				$('#updateBt').hide();
				$('#accessBtn').attr('disabled', 'disabled');
				$('#gdspBt').attr('disabled', 'disabled');
				$('#icBtn').attr('disabled', 'disabled');
				$('#findBt').attr('disabled', 'disabled');
				$('#addBt').attr('disabled', 'disabled');
				$('#erBtn').attr('disabled', 'disabled');
			} else {
				$('#updateBt').show();
			}
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}

	function clearData() {
		$('#projectTitle').val('');
		$('#piName').val('');
		$('#piFirstName').val('');
		$('#piLastName').val('');
		$('#piEmail').val('');
		$('#piPhone').val('');
		$('#organismType').val('0');
		$('#erId2').prop("checked", true);
	}

	$('#brop-tabs a').click(function(e) {
		e.preventDefault();
		$(this).tab('show');
		$('#messageDiv').html();
		$('#messageDiv').hide();
	});

	function getProjectInfoData() {
		var names = ['projectTitle', 'piFirstName', 'piLastName', 'piEmail', 'piPhone', 'organismType', 'piUserId', 'piTitle', 'piBranch'];
		var radioName = "erId";
		var variables = {};
		var index = 0;
		for (index = 0; index &lt; names.length; index++) {
			var value = $('#' + names[index]).val();
			variables[names[index]] = value;
		}
		var radioValue = '';
		if ($('#erId1').is(":checked")) {
			radioValue = 'yes';
		}
		if ($('#erId2').is(":checked")) {
			radioValue = 'no';
		}
		variables.erId = radioValue;
		variables.user_name = user_name;
		var selectedParent = $('#selectParent').val();
		if (selectedParent == null) {
			selectedParent = "";
		} else {
			selectedParent = selectedParent.toString();
		}
		variables.parent = selectedParent;
		return [variables];
	}

	function resetRequestValue() {
		var i = 0;
		for (i = 0; i != names.length; i++) {
			if (textFields.indexOf(names[i]) != -1) {
				$('#' + names[i]).val('');
			} else {
				$('#' + names[i]).prop('checked', false);
				$('#' + names[i]).removeAttr("disabled");
			}
		}
		$('#withdrawCommentsId').val('');
		$('#withdrawSubmitId').val('');
		$('#saved_id').val('');
	}

	function clearRequiredFieldBackColor() {
		$('#investigator').css("background-color", "");
		$('#email').css("background-color", "");
		$('#phone').css("background-color", "");
		$('#date').css("background-color", "");
		$('#projectName').css("background-color", "");
		$('#simpleSize').css("background-color", "");
		$('#collectionTypeId').css("background-color", "");
		$('#dataId').css("background-color", "");
		$('#specifyOtherType').css("background-color", "");
		$('#data2Id').css("background-color", "");
		$('#arrayDataId').css("background-color", "");
		$('#genotypesId').css("background-color", "");
		$('#sequenceId').css("background-color", "");
		$('#analysisId').css("background-color", "");
		$('#spcifiedOtherAnalysis').css("background-color", "");
		$('#dataFormId').css("background-color", "");
		$('#dataRepositoryId').css("background-color", "");
		$('#specifiedRepository').css("background-color", "");
		$('#companionInfoId').css("background-color", "");
		$('#specifiedClinicalData').css("background-color", "");
		$('#specifiedProtocol').css("background-color", "");
		$('#specifiedInstrument').css("background-color", "");
		$('#specifiedCompanion').css("background-color", "");
		$('#dataSubmissionId').css("background-color", "");
		$('#psecifiedOtherSubmission').css("background-color", "");
		$('#dataUseId').css("background-color", "");
	}

	function toggleNoHumanData() {
		if ($('#noHumanData').is(":checked")) {
			$('#noLimitation').attr("checked", false);
			$('#noLimitation').attr("disabled", "disabled");
			$('#limitedOnly').attr("checked", false);
			$('#limitedOnly').attr("disabled", "disabled");
			$('#limitedPurpose').attr("checked", false);
			$('#limitedPurpose').attr("disabled", "disabled");
			$('#relateToDisease').attr("checked", false);
			$('#relateToDisease').attr("disabled", "disabled");
		} else {
			$('#noLimitation').removeAttr("disabled");
			$('#limitedOnly').removeAttr("disabled");
			$('#limitedPurpose').removeAttr("disabled");
			$('#relateToDisease').removeAttr("disabled");
		}
	}

	function showModal() {
		var $dataEntry = $('#loadedRequests');
		$dataEntry.modal('show').on('shown.bs.modal', function() {
			$('#loadedRequests .modal-content').scrollTop(0);
		});
	}

	function loadRequestData(data) {
		var namePair = data.split(",");
		var i = 0;
		for (i = 0; i != namePair.length; i++) {
			var item = namePair[i];
			if (item == '' || typeof item === "undefined") {} else {
				if (item.indexOf('=') != -1) {
					var small = item.split('=');
					if (small[0] == 'inFirstName') {
						$('#inFirstName').val(small[1]);
					} else if (small[0] == 'inLastName') {
						$('#inLastName').val(small[1]);
					} else if (small[0] == 'inUserId') {
						$('#inUserId').val(small[1]);
					} else {
						setRequestValue(small);
					}
				}
			}
		}

	}

	function setRequestValue(value) {
		var name = value[0];
		var val = value[1];
		if (textFields.indexOf(name) != -1) {
			if (name == 'date') {
				if (val == '' || val === "-undefined-undefined") {
					$('#' + name).val('');
				} else {
					$('#' + name).val(getConvertedValue(val, '1'));
				}
			} else {
				$('#' + name).val(val);
			}
		} else {
			if (val == "true") {
				$('#' + name).prop('checked', true);
				if (name == 'noHumanData') {
					toggleNoHumanData();
				}
			} else {
				$('#' + name).prop('checked', false);
			}
			otherFieldWatcher(name, val);
		}
	}

	function otherFieldWatcher(name, value) {
		var otherCheckbox = ['otherType', 'otherAnalysis', 'OtherRepository', 'clinicalData', 'protocol', 'instrument', 'otherCompanion', 'otherSubmission', 'yeast', 'bacteria', 'nonHuman', 'snpArrayData', 'expressionArray', 'methylationArray', 'arrayDerive', 'microarrayData', 'sequenceData', 'somaticSnv', 'arrayCgh', 'wholeGenome', 'wholeExome', 'targetGenome', 'targetExome', 'wholeTranscriptome', 'targetTrabscriptome', 'epigenomicMark', 'sanger', 'rrna'];
		var otherField = ['specifyOtherType', 'spcifiedOtherAnalysis', 'specifiedRepository', 'specifiedClinicalData', 'specifiedProtocol', 'specifiedInstrument', 'specifiedCompanion', 'psecifiedOtherSubmission', 'yeastSpecies', 'bacteriaSpecies', 'noHumanOther', 'numSNP', 'numExpression', 'numMethylation', 'numDerivedGenotype', 'numMicroarrayData', 'numSquenceData', 'numSomaticSnv', 'numArrayCgh', 'numWholeGenome', 'numWholeExome', 'numTargetGenome', 'numTargetedExome', 'numWholeTranscriptome', 'numTargetedTranscriptome', 'numEpigenomic', 'numSanger', 'numRrna'];
		var index = otherCheckbox.indexOf(name);
		if (index &gt;= 0) {
			if (value == 'true') {
				$('#' + otherField[index]).prop('disabled', false);
			} else {
				$('#' + otherField[index]).prop('disabled', true);
			}
		}
	}

	function getConvertedValue(value, flag) {
		if (value == '') {
			return '';
		}
		var values = '';
		if (flag == '0') {
			values = value.split('/');
			return values[0] + '-' + values[1] + '-' + values[2];
		} else {
			values = value.split('-');
			return values[0] + '/' + values[1] + '/' + values[2];
		}
	}

	$scope.viewSubmittedIC = function(id, ic_id) {
		$('#refresh').val('0');
		loadICDisplay('',id, ic_id, 'view');
	};

	function loadConsentGroupData() {
		var consentStr = $('#consent_group1').val();
		if (consentStr == null || typeof consentStr === 'undefined' || consentStr.trim().length == 0) {
			$('#consentGrpDiv').hide();
		} else {
			getConsentGroups(consentStr);
		}
	}

	function getConsentGroups(consentStr) {
		var request = {
			method: 'POST',
			url: '/api/naci/gds/fetchConsentGroupDataFromRequest',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: {
				consentGrp: consentStr
			}
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			var strTable = "&lt;table class='table table-bordered table-condensed table-hover' width='100%'&gt;&lt;tr bgcolor='lightgrey'&gt;&lt;th&gt;Collaborating Site Name&lt;/th&gt;&lt;th&gt;Data Use Limitation&lt;/th&gt;&lt;th&gt;Data Use Limitations Modifier&lt;/th&gt;&lt;/tr&gt;";
			for (var i = 0; i &lt; result.length; i++) {
				var use_limit = result[i].use_limit;
				if(result[i].data_field != null &amp;&amp; result[i].data_field.trim().length &gt; 0){
					use_limit = use_limit + " [ "+ result[i].data_field +" ] ";
				}
				strTable = strTable + "&lt;tr&gt;&lt;td&gt;" + result[i].site_name + "&lt;/td&gt;&lt;td&gt;" + use_limit + "&lt;/td&gt;&lt;td&gt;" + result[i].data_modifier + "&lt;/td&gt;&lt;/tr&gt;";
			}
			strTable = strTable + "&lt;/table&gt;";

			$('#consentContentDiv').html(strTable);
			$('#consentGrpDiv').show();
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}

	$scope.viewItem = function(id, gdsp_id) {
		$('#refresh').val('0');
		var data = {
			requestedid: id
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gdspapi/fetchSubmittedRequestData',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: data
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			cleanDisplayDiv();
			resetRequestValue1();
			$('#displayRequestId').html(gdsp_id);
			var variables = result.variables;
			var comments = result.comments;
			var comment_str = parse(comments);
			$('#commentReviewId1').empty();
			$('#commentReviewId1').append(comment_str);
			if (comment_str.length &lt; 137) {
				$('#pre_comments_div').hide();
				$('#comments_div').hide();
			} else {
				$('#pre_comments_div').show();
				$('#comments_div').hide();
			}
			loadSubmittedData(variables);
			$('#displayRequests').modal('show').on('shown.bs.modal', function() {
				$('#displayRequests .modal-content').scrollTop(0);
			});
			$('#closeButton').show();
			$('#submitButton').hide();
			$('#sd_div').hide();
		}

		function handleError(response) {
			console.error(response);
			//$confirm.modal('hide');
			alert('ERROR');
		}
	};
	$scope.report = function(id, gdsp_id) {
		$('#refresh').val('0');
		window.open('$sp.do?id=gdsp_report_page&amp;itemId=' + id + '&amp;ticket=' + gdsp_id, '_BLANK');
	};
	$scope.withdraw = function(id, gdsp_id) {
		$('#refresh').val('0');
		$('#messageWithdraw').html('Are you sure you want to withdraw this request?');
		$('#withdrawDiv').modal('show');
		$('#btnYesWithdraw').off('click').click(function() {
			withdrawRequest(id, my_sys_id, gdsp_id);
			$('#withdrawDiv').modal('hide');
			$('#loading').show();
		});
		$('#btnNoWithdraw').off('click').click(function() {
			$('#withdrawDiv').modal('hide');
		});
	};
	$scope.displayResubmit = function(request_id) {
		$('#refresh').val('0');
		var variables = {};
		variables.requestedid = request_id;
		var request = {
			url: '/api/naci/gdspapi/fetchSubmittedRequestData',
			method: 'POST',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: variables
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			$('#inUserId').val(result.request_for);
			var variables = result.variables;
			var comments = result.comments;
			var comment_str = parse(comments);
			$('#commentReviewId2').empty();
			$('#commentReviewId2').append(comment_str);
			$('#resubmitCommentsId').val(comments);
			if (comment_str.length &lt; 137) {
				$('#pre_comments_div1').hide();
				$('#comments_div').hide();
			} else {
				$('#pre_comments_div1').show();
				$('#comments_div').hide();
			}
			loadResubmittedData(variables);

			$('#ccr_id').val(request_id);
			$('#errorMessage').hide();
			$('#regularSubmit').hide();
			$('#resubmit').show();
			$('#loadedRequests').modal('show').on('shown.bs.modal', function() {
				$('#displayRequests .modal-content').scrollTop(0);
			});
		}

		function handleError(response) {
			console.error(response);
			$confirm.modal('hide');
			alert('ERROR');
		}

	}


	$scope.displayICResubmit = function(request_id) {
		$('#refresh').val('0');
		var variables = {};
		variables.requestedid = request_id;
		var request = {
			url: '/api/naci/gdspapi/fetchSubmittedRequestData',
			method: 'POST',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: variables
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			cleanICData();
			var result = response.data.result;
			var variables = result.variables;
			var comments = result.comments;
			var comment_str = parse(comments);
			$('#commentReviewICId2').empty();
			$('#commentReviewICId2').append(comment_str);
			$('#resubmitCommentsId').val(comments);

			if (comment_str.length &lt; 137) {
				$('#pre_comments_ic_div1').hide();
				//$('#comments_ic_div').hide();
			} else {
				$('#pre_comments_ic_div1').show();
				//$('#comments_ic_div').hide();
			}
			prepareResubmit(variables.sampleTime, variables.sampleConsent);
			loadResubmittedICData(variables);
			showSubmitButton('1');
			$('#ccr_id').val(request_id);
			$('#errorMessage').hide();
			$('#regularSubmit').hide();
			//$('#resubmit').show();		
			//tmp store request data 
			$('#consentGroupIds').val(variables.consent_group);
			$('#icForm').modal('show').on('shown.bs.modal', function() {
				$('#icForm .modal-content').scrollTop(0);
			});
		}

		function handleError(response) {
			console.error(response);
			$confirm.modal('hide');
			alert('ERROR');
		}

	}


	function loadResubmittedICData(data) {
		for (key in data) {
			if (key == 'data_access') {
				if (data[key] == 'unrestricted') {
					$("input[name=dataAccessBox][value='unrestricted']").prop("checked", true);
				}
				if (data[key] == 'controlled-access') {
					$("input[name=dataAccessBox][value='controlled-access']").prop("checked", true);
				}
			} else if (key == 'display') {
				if (data[key] == 'yes') {
					$('#displayBox').prop('checked', true);
					 $('#controllaccessDiv').show();
				} else {
					$('#displayBox').prop('checked', false);
					 $('#controllaccessDiv').hide();
				}
			}else {
				$('#' + key).val(data[key]);
			}
		}
	}

	function prepareResubmit(sampleTime, sampleConsent) {
		$('#sample_time').val(sampleTime);
		$('#sample_consent').val(sampleConsent);
		if (sampleTime == 'no' &amp;&amp; sampleConsent == 'no') {
			$('#warning').modal('show');
		} else if (sampleTime == 'yes' &amp;&amp; sampleConsent == 'yes') {
			$('#institutionDiv').css("display", "none");
			$('#institutionNameDiv').css("display", "none");
			//$('#icForm').modal('show');
			//show form 1	
		} else if (sampleTime == 'yes' &amp;&amp; sampleConsent == 'no') {
			$('#institutionDiv').css("display", "block");
			$('#institutionNameDiv').css("display", "block");
			//$('#icForm').modal('show');
			//show form 2
		} else if (sampleTime == 'no' &amp;&amp; sampleConsent == 'yes') {
			$('#institutionDiv').css("display", "none");
			$('#institutionNameDiv').css("display", "none");
			//$('#icForm').modal('show');
			//show form 3
		} else {
			alert("Invalid Choice!");
		}

	}


	// Temp function for IC and Exception Request
	scope.tempFunc = function() {
		$('#refresh').val('0');
		alert("Coming soon!!");
	}

	//end of temp
	function withdrawRequestIC(id, my_sys_id, ic_id) {
		var variables = {};
		variables.requestedid = id;
		var request = {
			url: '/api/naci/gdspapi/fetchSubmittedRequestData',
			method: 'POST',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: variables
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			var variables = result.variables;
			var comments = result.comments;
			var data = getICData(variables, my_sys_id);
			data.comments = comments;
			data.gds_id = $('#hideGDSId').val()
			var icData = JSON.stringify(data);
			saveWithdrawICRequestData(icData, id, ic_id);
			$('#loading').hide();
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}

	function getICData(data, my_id) {
		var variables = {};
		variables.requested_for = my_sys_id;
		variables.value = '';
		variables.saved_id = ''; //id is for update?
		variables.opened_by = my_sys_id;
		variables.application = 'GDS_IC';
		var index = 0;
		for (key in data) {
			if (index != 0) variables.value += ',';
			variables.value += key + '=' + data[key];
			index++;
		}
		return variables;
	}


	function saveWithdrawICRequestData(icData, id, ic_id) {
		/*var request = {
            method: 'POST',
            url: '/api/naci/gdspapi/saveRequestData',
            beforeSend: function(xhr) {
                xhr.setRequestHeader('X-UserToken', sessionId);
            },
            headers: {
                'Content-Type': 'application/json'
            },
            data: icData
        };
        $http(request).then(handleResponse, handleError);

        function handleResponse(response) {
            var result = response.data.result;*/
		withdrawICDeletion(id, ic_id);
		/* }

        function handleError() {
            console.error(response);
            alert('ERROR');
        }*/
	}

	function withdrawICDeletion(id, ic_id) {
		var variables = {};
		variables.id = id;
		variables.method = 'withdraw';
		var request = {
			method: 'POST',
			url: '/api/naci/gdspapi/gsdspUtil',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: variables
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			removeICfromGDS(ic_id);
			console.log(result);
		}

		function handleError() {
			console.error(response);
			alert('ERROR');
		}
	}

	function removeICfromGDS(ic_id) {
		var param = {
			gds_id: $('#hideGDSId').val(),
			ic_number: ic_id,
			type: 'ic',
			method: 'remove'
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gds/updateGDS',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: param
		};
		$http(request).then(function(response) {
			var data = response.data.result;
			console.log("remove:" + data);
		});
	}

	var initialTime = null;
	var documentTimeout = 60 * 1000;
	var documentInterval = null;

	$scope.reportIC = function(sys_id, ic_id, flag) {
		$('#refresh').val('0');
		$('#loading').show();
		var req_id = sys_id;
		var fileName = '';
		if (flag == 'pi') {
			fileName = ic_id + "_pi.pdf";
		} else if (flag == 'sd') {
			fileName = ic_id + "_sd.pdf";
		}

		initialTime = new Date();
		documentInterval = setInterval(function() {
			getDocument(req_id, fileName);
		}, 5000);
	};

	function getDocument(req_id, fileName){
		var req = {
			method: 'GET',
			url: '/api/naci/gds/getAttachmentFileID',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			params: {
				request_id: req_id,
				file_name: fileName
			}
		};
		$http(req).then(handleResponse, handleError);

		function handleResponse(response) {
			if (new Date() - initialTime &gt; documentTimeout) {
				window.clearInterval(documentInterval);
				$('#loading').hide();
				$('#messageInfo').html('Application fails to generate PDF document, please contact System Administrator');
				$('#infoModal').modal('show');
				$('#btnOkConfirm').off('click').click(function() {
					$('#infoModal').modal('hide');
				});
				return;
			}

			var result = response.data.result;
			//hightlight right record
			var id = result.file_id;
			if (id != null &amp;&amp; id.trim().length &gt; 0) {
				window.clearInterval(documentInterval);
				window.location.href = '/sys_attachment.do?sys_id=' + id;
				setTimeout(function(){}, 3000);
				$('#loading').hide();
			} 
		}

		function handleError(response) {
			window.clearInterval(documentInterval);
			$('#loading').hide();
			console.error(response);
			alert('ERROR');
		}			
	}

	function withdrawRequest(id, my_sys_id, gdsp_id) {
		var variables = {};
		variables.requestedid = id;
		var request = {
			url: '/api/naci/gdspapi/fetchSubmittedRequestData',
			method: 'POST',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: variables
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			var request_for = result.request_for;
			var open_by = result.opened_by;
			var variables = result.variables;
			var comments = result.comments;
			var data = getGDSPData(variables, request_for, open_by);
			data.comments = comments;
			data.gds_id = $('#hideGDSId').val();
			var gdspData = JSON.stringify(data);
			saveWithdrawRequestData(gdspData, id, gdsp_id);
			$('#loading').hide();
		}

		function handleError(response) {
			console.error(response);
			//$confirm.modal('hide');
			alert('ERROR');
		}
	}

	function saveWithdrawRequestData(data, id, gdsp_id) {

		/*var request = {
            method: 'POST',
            url: '/api/naci/gdspapi/saveRequestData',
            beforeSend: function(xhr) {
                xhr.setRequestHeader('X-UserToken', sessionId);
            },
            headers: {
                'Content-Type': 'application/json'
            },
            data: data
        };
        $http(request).then(handleResponse, handleError);

        function handleResponse(response) {
            var result = response.data.result;*/
		withdrawDeletion(id, gdsp_id);
		/*}

        function handleError() {
            console.error(response);
            alert('ERROR');
        }*/
	}

	function withdrawDeletion(id, gdsp_id) {
		var variables = {};
		variables.id = id;
		variables.method = 'withdraw';
		var request = {
			method: 'POST',
			url: '/api/naci/gdspapi/gsdspUtil',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: variables
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			removeGDSPfromGDS(gdsp_id);
			console.log(result);
		}

		function handleError() {
			console.error(response);
			alert('ERROR');
		}
	}

	function removeGDSPfromGDS(gdsp_id) {
		var param = {
			gds_id: $('#hideGDSId').val(),
			gdsp_number: gdsp_id,
			type: 'gdsp',
			method: 'remove'
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gds/updateGDS',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: param
		};
		$http(request).then(function(response) {
			var data = response.data.result;
			console.log("remove:" + data);
		});
	}

	function getGDSPData(data, request_id, open_id) {
		var variables = {};
		variables.requested_for = request_id;
		variables.opened_by = open_id;
		variables.value = '';
		variables.project_name = '';
		variables.saved_id = ''; //id is for update?
		variables.application = 'GDSP';
		var index = 0;
		var inName = '';
		for (key in data) {
			if (index != 0) variables.value += ',';
			if (key == 'investigator') {
				inName = data[key];
			}
			if (key == 'projectName') {
				variables.project_name = data[key];
			}
			variables.value += key + '=' + data[key];
			index++;
		}
		var temp = inName.split(' ');
		variables.value += ",inFirstName=" + temp[0];
		variables.value += ",inLastName=" + temp[1];
		variables.value += ",inUserId=" + request_id;
		return variables;
	}

	function cleanDisplayDiv() {
		$('#pre_comments_div').hide();
		$('#closeButton').hide();
		$('#comments_div').hide();
		$('#submitButton').hide();
	}

	function parse(allcomments) {
		var comments = allcomments.split("ENDCOMMENTS");
		var commentsblock = '&lt;table border="1" width="100%"&gt;&lt;tr&gt;&lt;th&gt;Role&lt;/th&gt;&lt;th&gt;Approver&lt;/th&gt;&lt;th&gt;Approval Status&lt;/th&gt;&lt;th&gt;Comments&lt;/th&gt;&lt;th&gt;Time&lt;/th&gt;&lt;/tr&gt;'
		for (i = 0; i &lt; comments.length; i++) {
			if (comments[i].length &gt; 40) {
				if (comments[i][0] == '\n') {
					var lastI = 0;
					while (lastI &lt; comments[i].length &amp;&amp; comments[i][lastI] == '\n')
						lastI++;
					comments[i] = comments[i].substring(lastI, comments[i].length);
				}
				var t = comments[i].substring(0, 22);
				var approver = comments[i].substring(comments[i].indexOf('(ENDROLE)') + 9, comments[i].length);
				var results = comments[i].substring(comments[i].indexOf('(Additional comments)') + 57, comments[i].indexOf('(Additional comments)') + 65);
				var comm = comments[i].substring(comments[i].indexOf('(Additional comments)') + 66, comments[i].indexOf('(role)'));
				var role = comments[i].substring(comments[i].indexOf('(role)') + 6, comments[i].indexOf('(ENDROLE)'));
				commentsblock = commentsblock + "&lt;tr&gt;";
				commentsblock = commentsblock + "&lt;td&gt;" + role + "&lt;/td&gt;";
				commentsblock = commentsblock + "&lt;td&gt;" + approver + "&lt;/td&gt;";
				commentsblock = commentsblock + "&lt;td&gt;" + results + "&lt;/td&gt;";
				commentsblock = commentsblock + "&lt;td&gt;" + comm + "&lt;/td&gt;";
				commentsblock = commentsblock + "&lt;td&gt;" + t + "&lt;/td&gt;";
				commentsblock = commentsblock + "&lt;/tr&gt;";
			}
		}
		commentsblock = commentsblock + "&lt;/table&gt;";
		return commentsblock;
	}

	function loadSubmittedData(data) {
		for (key in data) {
			var value = getValue(key, data[key]);
			$('#' + key + "1").html(value);
		}
	}

	function loadResubmittedData(data) {
		for (key in data) {
			setResubmitValue(key, data[key]);
		}

	}

	function getValue(name, value) {
		if (textFields.indexOf(name) != -1) {
			if (name == 'date') {
				return getConvertedValue(value, '1');
			} else {
				if (name == 'investigator') {
					var temp = value.split(' ');
					$('#inFirstName').val(temp[0]);
					$('#inLastName').val(temp[1]);
				}
				return value;
			}
		} else {
			if (value == "true") {
				return '&lt;input type="checkbox" id="' + name + '1" checked="true" disabled="true"/&gt;';
			} else {
				return '&lt;input type="checkbox" id="' + name + '1" disabled="true"/&gt;';
			}
			return value;
		}
	}

	function setResubmitValue(name, value) {
		if (textFields.indexOf(name) != -1) {
			if (name == 'date') {
				$('#' + name).val(getConvertedValue(value, '1'));
			} else {
				$('#' + name).val(value);
			}
		} else {
			if (value == "true") {
				$('#' + name).prop('checked', true);
			} else {
				$('#' + name).prop('checked', false);
			}
			otherFieldWatcher(name, value);
		}
	}

	function resetRequestValue1() {
		var i = 0;
		for (i = 0; i != names.length; i++) {
			if (textFields.indexOf(names[i]) != -1) {
				$('#' + names[i]).val('');
				$('#' + names[i] + "1").html('');
			} else {
				$('#' + names[i] + "1").html('&lt;input type="checkbox" id="' + names[i] + "1" + '" disabled="true"/&gt;');
				$('#' + names[i]).prop('checked', false);
				$('#' + names[i]).removeAttr("disabled");

			}
		}
		$('#withdrawCommentsId').val('');
		$('#withdrawSubmitId').val('');
		$('#saved_id').val('');
	}
	//watch dog
	spUtil.recordWatch($scope, "sc_req_item", "", function(name, data) {
		var currentUser = c.data.info.sysUserName;
		var recordUser = name.ext.from_user;
		if($('#refresh').val() =='0' &amp;&amp; recordUser == currentUser){

			spUtil.update($scope);
			loadSavedData($('#recId').val());
			setTimeout(function(){
				loadData($('#recId').val());
			}, 2000);
			$('#refresh').val('1');
		}
		$('#loading').hide();
	});
	//watch dog
	spUtil.recordWatch($scope, "u_gdsp_user_submission", "", function(name, data) {
		var currentUser = c.data.info.sysUserName;
		var recordUser = name.ext.from_user;
		if($('#refresh').val() =='0' &amp;&amp; recordUser == currentUser){
			spUtil.update($scope);
			loadSavedData($('#recId').val());
			loadData($('#recId').val());
			$('#refresh').val('1');
		}

		$('#loading').hide();
	});
	
		//watch dog
	spUtil.recordWatch($scope, "u_gds_user_accress_t", "", function(name, data) {
		var currentUser = c.data.info.sysUserName;
		var recordUser = name.ext.from_user;
		if($('#refresh').val() =='0' &amp;&amp; recordUser == currentUser){

			spUtil.update($scope);
			loadSavedData($('#recId').val());
			loadData($('#recId').val());
			$('#refresh').val('1');
		}

		$('#loading').hide();
	});
	
	

	//client code for IC 

	$scope.viewICItem = function(id, sampleTime, sampleConsent) {
		$('#refresh').val('0');
		$('#type').val('exist');
		if (sampleTime == 'no' &amp;&amp; sampleConsent == 'no') {
			$('#warning').modal('show');
		} else if (sampleTime == 'yes' &amp;&amp; sampleConsent == 'yes') {
			$('#institutionDiv').css("display", "block");
			$('#institutionNameDiv').css("display", "block");
			$('#icForm').modal('show');
			//show form 1	
		} else if (sampleTime == 'yes' &amp;&amp; sampleConsent == 'no') {
			$('#institutionDiv').css("display", "block");
			$('#institutionNameDiv').css("display", "block");
			$('#icForm').modal('show');
			//show form 2
		} else if (sampleTime == 'no' &amp;&amp; sampleConsent == 'yes') {
			$('#institutionDiv').css("display", "block");
			$('#institutionNameDiv').css("display", "block");
			$('#icForm').modal('show');
			//show form 3
		} else {
			alert("Invalid Choice!");
		}
		clearICFieldBackground();
		cleanICData();
		resetConsentGrp();
		showSubmitButton('0');
		$('#pre_comments_ic_div1').hide();
		$('#icError').hide();
		//load IC data
		var icData = {
			requested_id: id
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gdspapi/fetchSavedRequestData',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: icData
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			$('#ic_id').val(id);
			$('#ic_id').trigger('custom_action');
			setICData(result);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	};

	$scope.clearUserData = function() {
		$('#refresh').val('0');
		$('#userFirstName').val('');
		$('#userLastName').val('');
		$('#selectedUserData').val('');
		loadUserData();
	};

	function setICData(data) {
		var variables = parseICData(data[0].value);
		var i = 0;
		for (i = 0; i &lt; icNames.length; i++) {
			if (icNames[i] == 'data_access') {
				if (variables[icNames[i]] == 'unrestricted') {
					$("input[name=dataAccessBox][value='unrestricted']").prop("checked", true);
				}
				if (variables[icNames[i]] == 'controlled-access') {
					$("input[name=dataAccessBox][value='controlled-access']").prop("checked", true);
				}
			} else if (icNames[i] == 'display') {
				if (variables[icNames[i]] == 'yes') {
					$('#displayBox').prop('checked', true);
					$('#controllaccessDiv1').show();
				} else {
					$('#displayBox').prop('checked', false);
					$('#controllaccessDiv1').hide();					
				}
			} else {
				$('#' + icNames[i]).val(variables[icNames[i]]);
			}
		}
		$('#sample_time').val(variables.sampleTime);
		$('#sample_consent').val(variables.sampleConsent);
	}

	function resetConsentGrp() {
		$('#branch').val('NCI');
		$('#dataLimitation').val('None');
		$('#useTextField').val('');
		$('#useTextField').css('display', 'none');
		$('#useTextLabel').css('display', 'none');
		$('#dataModifier').val('');
		$('#consentErr').html("");
		$('#consentErr').css('display', 'none');
	}

	function parseICData(data) {
		var variables = {};
		var temp = data.split(",");
		var i = 0;
		for (i = 0; i &lt; temp.length; i++) {
			var val = temp[i].split("=");
			variables[val[0]] = val[1];
		}
		return variables;
	}

	function cleanICData() {
		$('#consentGroupIds').val('');
		$('#ic_id').val('');
		var i = 0;
		for (i = 0; i &lt; icNames.length; i++) {
			if (icNames[i] == 'gpa_organization' || icNames[i] == 'sd_organization') {
				$('#' + icNames[i]).val("none");
			} else {
				if (icNames[i] == 'certification_to') {
					$('#' + icNames[i]).val('Kathleen Calzone');
				} else if (icNames[i] == 'certification_from') {
					$('#' + icNames[i]).val('William Dahut');
				} else if (icNames[i] == 'data_access') {
					$("input[name='dataAccessBox'][value='controlled-access']").prop('checked', true);
				} else if (icNames[i] == 'display' || icNames[i] == 'frquency') {
					$('#displayBox').prop('checked', false);
					$('#frequenceBox').prop('checked', false);
				} else {
					$('#' + icNames[i]).val('');
				}
			}
		}
	}

	function clearICFieldBackground() {
		var i = 0;
		for (i = 0; i &lt; icNames.length; i++) {
			$('#' + icNames[i]).css('background-color', '');
		}
	}

	$scope.removeUser = function(sys_id) {
		$('#refresh').val('0');
		var $confirm = $('#userConfirmDiv');
		$confirm.modal('show');
		$('#messageDeleteUser').html("Are you sure you want to remove this user?");
		$('#btnYesConfirmUser').off('click').click(function() {
			deleteUser(sys_id);
			$confirm.modal('hide');
		});
		$('#btnNoConfirmUser').off('click').click(function() {
			$confirm.modal('hide');
		});
	};

	function deleteUser(sys_id) {
		var data2 = {
			sys_id: sys_id,
			action: 'delete'
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gds/saveUser',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: data2
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			loadUserData();
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}

	function showSubmitButton(indicator) {
		if (indicator == '0') {
			$('#regularICSubmit').show();
			$('#resubmitIC').hide();
		} else if (indicator == '1') {
			$('#regularICSubmit').hide();
			$('#resubmitIC').show();
		}
	}

	//er functions are here
	var ernames = ['er_investigator', 'er_email', 'er_phone', 'er_date', 'er_projectNumber', 'er_projectName', 'er_simpleSize', 'er_prospective', 'er_restrospective', 'er_human', 'er_nonHuman', 'er_germLine', 'er_somatic', 'er_dnaType', 'er_rnaType', 'er_microbiome', 'er_mitochrondria', 'er_otherType', 'er_specifyOtherType', 'er_snpArrayData', 'er_numSNP', 'er_expressionArray', 'er_numExpression', 'er_methylationArray', 'er_numMethylation', 'er_arrayDerive', 'er_microarrayData', 'er_sequenceData', 'er_somaticSnv', 'er_arrayCgh', 'er_wholeGenome', 'er_wholeExome', 'er_targetGenome', 'er_targetExome', 'er_wholeTranscriptome', 'er_targetTrabscriptome', 'er_epigenomicMark', 'er_sanger', 'er_rrna', 'er_association', 'er_arrayDerivedExpression', 'er_rnaExpression', 'er_derivedMethylation', 'er_otherAnalysis', 'er_spcifiedOtherAnalysis', 'er_individual', 'er_aggregate', 'er_notApplicableDataForm', 'er_orginId', 'er_version', 'er_rat', 'er_mouse', 'er_celegans', 'er_drosophila', 'er_yeast', 'er_yeastSpecies', 'er_bacteria', 'er_bacteriaSpecies', 'er_noHumanOther', 'er_numDerivedGenotype', 'er_numMicroarrayData', 'er_numSquenceData', 'er_numSomaticSnv', 'er_numArrayCgh', 'er_numWholeGenome', 'er_numWholeExome', 'er_numTargetGenome', 'er_numTargetedExome', 'er_numWholeTranscriptome', 'er_numTargetedTranscriptome', 'er_numEpigenomic', 'er_numSanger', 'er_numRrna', 'er_legalRestricton', 'er_describedLegal', 'er_informedConsent', 'er_otherJust', 'er_specifiedOtherJust', 'er_nonExistConsent', 'er_nonAddressConsent', 'er_nonAddressRisk', 'er_precludedConsent', 'er_otherConsent', 'er_specifiedOtherConsent', 'er_copyConsent', 'er_gpaAgreed', 'er_gpaDisagree', 'er_gpaUnclear', 'er_irbAgree', 'er_irbDisagree', 'er_alternative'];
	var ertextFields = ['er_investigator', 'er_email', 'er_phone', 'er_date', 'er_projectNumber', 'er_projectName', 'er_simpleSize', 'er_specifyOtherType', 'er_spcifiedOtherAnalysis', 'er_orginId', 'er_version', 'er_numSNP', 'er_numExpression', 'er_numMethylation', 'er_yeastSpecies', 'er_bacteriaSpecies', 'er_noHumanOther', 'er_numDerivedGenotype', 'er_numMicroarrayData', 'er_numSquenceData', 'er_numSomaticSnv', 'er_numArrayCgh', 'er_numWholeGenome', 'er_numWholeExome', 'er_numTargetGenome', 'er_numTargetedExome', 'er_numWholeTranscriptome', 'er_numTargetedTranscriptome', 'er_numEpigenomic', 'er_numSanger', 'er_numRrna', 'er_describedLegal', 'er_specifiedOtherJust', 'er_specifiedOtherConsent', 'er_alternative'];

	scope.createER = function() {
		$('#refresh').val('0');
		$('#collapseER').collapse('show');
		var $er = $('#loadedERRequests');
		clearErRequiredFieldBackColor();
		resetErRequestValue();
		$('#er_errorMessage').html('');
		$('#ccr_id').val('');
		$('#saved_id').val('');
		$('#regularSubmit').show();
		$('#resubmit').hide();
		//load GDS information and fill them into ER form
		var data = {
			sysId: $('#hideGDSId').val()
		};
		var request = {
			method: 'GET',
			url: '/api/naci/gds/getProjectInformation',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			params: data
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result[0];
			//populate data into submission form
			loadGDSDataForER(result);
			$('#erFirstName').val($('#piFirstName').val());
			$('#erLastName').val($('#piLastName').val());
			$('#erUserId').val($('#piUserId').val());
			$er.modal('show').on('shown.bs.modal', function(el) {
				$(el.target).find('.modal-content').scrollTop(0);
			});
			console.log(result);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	};

	function clearErRequiredFieldBackColor() {
		$('#er_investigator').css("background-color", "");
		$('#er_email').css("background-color", "");
		$('#er_phone').css("background-color", "");
		$('#er_date').css("background-color", "");
		$('#er_projectName').css("background-color", "");
		$('#er_simpleSize').css("background-color", "");
		$('#er_collectionTypeId').css("background-color", "");
		$('#er_dataId').css("background-color", "");
		$('#er_specifyOtherType').css("background-color", "");
		$('#er_data2Id').css("background-color", "");
		$('#er_arrayDataId').css("background-color", "");
		$('#er_genotypesId').css("background-color", "");
		$('#er_sequenceId').css("background-color", "");
		$('#er_analysisId').css("background-color", "");
		$('#er_spcifiedOtherAnalysis').css("background-color", "");
		$('#er_dataFormId').css("background-color", "");
		$('#er_dataRepositoryId').css("background-color", "");
		$('#er_specifiedRepository').css("background-color", "");
		$('#er_companionInfoId').css("background-color", "");
		$('#er_specifiedClinicalData').css("background-color", "");
		$('#er_specifiedProtocol').css("background-color", "");
		$('#er_specifiedInstrument').css("background-color", "");
		$('#er_specifiedCompanion').css("background-color", "");
		$('#er_dataSubmissionId').css("background-color", "");
		$('#er_psecifiedOtherSubmission').css("background-color", "");
		$('#er_dataUseId').css("background-color", "");
	}

	function resetErRequestValue() {
		var i = 0;
		for (i = 0; i != ernames.length; i++) {
			if (ertextFields.indexOf(ernames[i]) != -1) {
				$('#' + ernames[i]).val('');
			} else {
				$('#' + ernames[i]).prop('checked', false);
				$('#' + ernames[i]).removeAttr("disabled");
			}
		}
		$('#withdrawCommentsId').val('');
		$('#withdrawSubmitId').val('');
		$('#saved_id').val('');
	}

	function loadGDSDataForER(data) {
		$('#er_investigator').val(data.piFirstName + " " + data.piLastName);
		$('#er_email').val(data.piEmail);
		$('#er_phone').val(data.piPhone);
		$('#er_projectName').val(data.projectTitle);

		//get current date
		var today = new Date();
		var dd = today.getDate();
		var mm = today.getMonth() + 1; //January is 0!

		var yyyy = today.getFullYear();
		if (dd &lt; 10) {
			dd = '0' + dd;
		}
		if (mm &lt; 10) {
			mm = '0' + mm;
		}
		var currentDate = mm + '/' + dd + '/' + yyyy;
		$('#er_date').val(currentDate);
	}
	// ER function
	$scope.editERItem = function(id) {
		$('#refresh').val('0');
		clearERRequiredFieldBackColor();
		$('#erFirstName').val('');
		$('#erLastName').val('');
		$('#erUserId').val('');
		$('#er_errorMessage').html('');
		var data = {
			requested_id: id
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gdspapi/fetchSavedRequestData',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: data
		};
		$http(request).then(handleResponse, handleError);

		function handleResponse(response) {
			var result = response.data.result;
			showERModal();
			$('#saved_id').val(id);
			loadERData(result[0].value);
			console.log(result);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	};

	$scope.removeERItem = function(id) {
		$('#refresh').val('0');
		var $confirm = $('#confirmDiv');
		$confirm.modal('show');
		$('#message').html("Are you sure you want to remove this record?");
		$('#btnYesConfirmYesNo').off('click').click(function() {
			var data = {
				saved_id: id,
				action: 'DELETE'
			};
			var request = {
				method: 'POST',
				url: '/api/naci/gdspapi/saveRequestData',
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', sessionId);
				},
				headers: {
					'Content-Type': 'application/json'
				},
				data: data
			};
			$http(request).then(handleResponse, handleError);

			function handleResponse(response) {
				var result = response.data.result;
				$confirm.modal('hide');
				console.log(result);
			}

			function handleError(response) {
				console.error(response);
				$confirm.modal('hide');
				alert('ERROR');
			}
		});
		$('#btnNoConfirmYesNo').off('click').click(function() {
			$confirm.modal('hide');
		});
	};

	$scope.viewUserAccess = function() {
		$('#refresh').val('0');
		$('#collapseUser').collapse('show');
	};
	$scope.createNewUserAccess = function(){
		$('#refresh').val('0');
		$('#collapseUser').collapse('show');
		$('#addUserAccessDiv').modal('show');

		$('#btnAddUserAccess').off('click').click(function() {
			addUser();
		});
		$('#btnCancelUserAccess').off('click').click(function() {
			$('#addUserAccessDiv').modal('hide');
		});
	};
	$scope.viewGDSP = function() {
		$('#refresh').val('0');
		$('#collapseGDSP').collapse('show');
	}
	$scope.viewIC = function() {
		$('#refresh').val('0');
		$('#collapseIC').collapse('show');
	}

	function clearERRequiredFieldBackColor() {
		$('#er_investigator').css("background-color", "");
		$('#er_email').css("background-color", "");
		$('#er_phone').css("background-color", "");
		$('#er_date').css("background-color", "");
		$('#er_projectName').css("background-color", "");
		$('#er_simpleSize').css("background-color", "");
		$('#er_collectionTypeId').css("background-color", "");
		$('#er_dataId').css("background-color", "");
		$('#er_specifyOtherType').css("background-color", "");
		$('#er_data2Id').css("background-color", "");
		$('#er_arrayDataId').css("background-color", "");
		$('#er_genotypesId').css("background-color", "");
		$('#er_sequenceId').css("background-color", "");
		$('#er_analysisId').css("background-color", "");
		$('#er_spcifiedOtherAnalysis').css("background-color", "");
		$('#er_dataFormId').css("background-color", "");
	}

	function showERModal() {
		var $erData = $('#loadedERRequests');
		$erData.modal('show').on('shown.bs.modal', function() {
			$('#loadedERRequests .modal-content').scrollTop(0);
		});
	}

	function loadERData(data) {
		var namePair = data.split(",");
		var i = 0;
		for (i = 0; i != namePair.length; i++) {
			var item = namePair[i];
			if (item == '' || typeof item === "undefined") {} else {
				if (item.indexOf('=') != -1) {
					var small = item.split('=');
					if (small[0] == 'erFirstName') {
						$('#erFirstName').val(small[1]);
					} else if (small[0] == 'erLastName') {
						$('#erLastName').val(small[1]);
					} else if (small[0] == 'erUserId') {
						$('#erUserId').val(small[1]);
					} else {
						setERValue(small);
					}
				}
			}
		}
	}

	function setERValue(value) {
		var name = value[0];
		var val = value[1];
		if (ertextFields.indexOf(name) != -1) {
			$('#' + name).val(val);
		} else {
			if (val == "true") {
				$('#' + name).prop('checked', true);
				if (name == 'er_notApplicableDataForm') {
					$('#er_individual').prop('disabled', true);
					$('#er_aggregate').prop('disabled', true);
				}
			} else {
				$('#' + name).prop('checked', false);
				if (name == 'er_notApplicableDataForm') {
					$('#er_individual').prop('disabled', false);
					$('#er_aggregate').prop('disabled', false);
				}
			}
			erOtherFieldWatcher(name, val);
		}
	}

	function erOtherFieldWatcher(name, value) {
		var otherCheckbox = ['er_otherType', 'er_otherAnalysis', 'er_yeast', 'er_bacteria', 'er_nonHuman', 'er_snpArrayData', 'er_expressionArray', 'er_methylationArray', 'er_arrayDerive', 'er_microarrayData', 'er_sequenceData', 'er_somaticSnv', 'er_arrayCgh', 'er_wholeGenome', 'er_wholeExome', 'er_targetGenome', 'er_targetExome', 'er_wholeTranscriptome', 'er_targetTrabscriptome', 'er_epigenomicMark', 'er_sanger', 'er_rrna', 'er_legalRestricton', 'er_otherJust', 'er_otherConsent'];
		var otherField = ['specifyOtherType', 'spcifiedOtherAnalysis', 'yeastSpecies', 'bacteriaSpecies', 'noHumanOther', 'numSNP', 'numExpression', 'numMethylation', 'numDerivedGenotype', 'numMicroarrayData', 'numSquenceData', 'numSomaticSnv', 'numArrayCgh', 'numWholeGenome', 'numWholeExome', 'numTargetGenome', 'numTargetedExome', 'numWholeTranscriptome', 'numTargetedTranscriptome', 'numEpigenomic', 'numSanger', 'numRrna', 'er_describedLegal', 'er_specifiedOtherJust', 'er_specifiedOtherConsent'];
		var index = otherCheckbox.indexOf(name);
		if (index &gt;= 0) {
			if (value == 'true') {
				$('#' + otherField[index]).prop('disabled', false);
			} else {
				$('#' + otherField[index]).prop('disabled', true);
			}
		}
	}

	function loadBranchOptionString() {
		$.ajax({
			url: '/api/naci/gds/getAllBranch',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			data: {},
			async: false,
			dataType: 'json',
			complete: handleResponse,
			error: handleError
		});

		function handleResponse(response) {
			var result = response.responseJSON.result;
			var val = "";
			for (var i = 0; i &lt; result.length; i++) {
				val = val + "&lt;option value='" + result[i].value + "'&gt;" + result[i].label + "&lt;/option&gt;";
			}
			$('#piBranch').html(val);
			$('#pBranch').html(val);
		}

		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}
	}
	$scope.viewSignIC = function(approval_id, request_id, ic_id){
		$('#refresh').val('0');
		loadICDisplay(approval_id,request_id, ic_id, 'sign');
	};

	function loadICDisplay(approval_id, request_id, ic_id, indicator){
		$('#displayICId').html(ic_id);
		var data = {
			requestedid: request_id
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gds/getSubmittedICRequestData',
			beforeSend: function(xhr) {
				xhr.setRequestHeader('X-UserToken', sessionId);
			},
			headers: {
				'Content-Type': 'application/json'
			},
			data: data
		};
		$http(request).then(handleResp, handleErr);

		function handleResp(response) {
			var result = response.data.result;
			var comments = parse(result.comments);
			var variables = result.variables;
			var i = 0;
			for (i = 0; i &lt; icNames.length; i++) {
				if (icNames[i] == 'data_access') {
					if (variables[icNames[i]] == 'unrestricted') {
						$("input[name=dataAccessBox1][value='unrestricted']").prop("checked", true);
					} else {
						$("input[name=dataAccessBox1][value='controlled-access']").prop("checked", true);
					}
				} else if (icNames[i] == 'display') {
					if (variables[icNames[i]] == 'yes') {
						$('#displayBox1').prop('checked', true);
						$('#controllaccessDiv1').show();
					} else {
						$('#displayBox1').prop('checked', false);
						$('#controllaccessDiv1').hide();
					}
				}else if (icNames[i] == 'consent_group') {
					$('#' + icNames[i] + '1').val(variables[icNames[i]]);
				} else {
					$('#' + icNames[i] + '1').html(variables[icNames[i]]);
				}
			}
			$('#sample_time').val(variables.sampleTime);
			$('#sample_consent').val(variables.sampleConsent);
			$('#hiddenRequestId').val(request_id);
			$('#hiddenApprovalId').val(approval_id);
			if (comments.length &gt; 137) {
				$('#commentReviewICId1').html('');
				$('#commentReviewICId1').html(comments);
				$('#pre_comments_ic_div').show();
				$('#ic_modal_content').attr('style', 'height:800px; overflow-y:auto; overflow-x: hidden;')
			}
			$('#submitButton1').hide();
			if(indicator == 'sign'){
				$('#signButton1').show();
				$('#closeButton1').hide();
				$('#comments_ic_div').show();
			}else{
				$('#signButton1').hide();
				$('#closeButton1').show();
				$('#comments_ic_div').hide();
			}
			loadConsentGroupData();
			//if(variables.sampleTime == 'yes' &amp;&amp; variables.sampleConsent == 'no'){
			$('#insDiv').show();
			//}else{
			//	$('#insDiv').hide();
			//}
			$('#displayICRequests').modal('show').on('shown.bs.modal', function() {
				$('#displayICRequests .modal-content').scrollTop(0);
			});
		}

		function handleErr(response) {
			console.error(response);
			alert('ERROR');
		}
	}

	function saveUser(userData, gdsId, access){
		var data1 = {
			data: userData,
			gds_id: gdsId,
			access: access,
			action: 'add'
		};
		var request = {
			method: 'POST',
			url: '/api/naci/gds/saveUser',
			beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
			headers: {
				'Content-Type': 'application/json'
			},
			data: data1
		};
		$http(request).then(handleResponse, handleError);
		function handleResponse(response) {
			var result = response.data.result;
		}
		function handleError(response) {
			console.error(response);
			alert('ERROR');
		}		
	}	

	function encodeDecodeData(data, flag){
		var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
								encode:function(e){
									var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);
									while(f&lt;e.length){
										n=e.charCodeAt(f++);
										r=e.charCodeAt(f++);
										i=e.charCodeAt(f++);
										s=n&gt;&gt;2;
										o=(n&amp;3)&lt;&lt;4|r&gt;&gt;4;
										u=(r&amp;15)&lt;&lt;2|i&gt;&gt;6;
										a=i&amp;63;
										if(isNaN(r)){
											u=a=64
										}else if(isNaN(i)){
											a=64
										}
										t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a);
									}
									return t
								},
								decode:function(e){
									var t="";
									var n,r,i;
									var s,o,u,a;
									var f=0;e=e.replace(/[^A-Za-z0-9+/=]/g,"");
									while(f&lt;e.length){
										s=this._keyStr.indexOf(e.charAt(f++));
										o=this._keyStr.indexOf(e.charAt(f++));
										u=this._keyStr.indexOf(e.charAt(f++));
										a=this._keyStr.indexOf(e.charAt(f++));
										n=s&lt;&lt;2|o&gt;&gt;4;
										r=(o&amp;15)&lt;&lt;4|u&gt;&gt;2;
										i=(u&amp;3)&lt;&lt;6|a;
										t=t+String.fromCharCode(n);
										if(u!=64){
											t=t+String.fromCharCode(r);
										}
										if(a!=64){
											t=t+String.fromCharCode(i);
										}
									}
									t=Base64._utf8_decode(t);
									return t;
								},
								_utf8_encode:function(e){
									e=e.replace(/rn/g,"n");
									var t="";
									for(var n=0;n&lt;e.length;n++){
										var r=e.charCodeAt(n);
										if(r&lt;128){
											t+=String.fromCharCode(r);
										}else if(r&gt;127&amp;&amp;r&lt;2048){
											t+=String.fromCharCode(r&gt;&gt;6|192);
											t+=String.fromCharCode(r&amp;63|128)
										}else{
											t+=String.fromCharCode(r&gt;&gt;12|224);
											t+=String.fromCharCode(r&gt;&gt;6&amp;63|128);
											t+=String.fromCharCode(r&amp;63|128);
										}
									}
									return t;
								},
								_utf8_decode:function(e){
									var t="";
									var n=0;
									var r=0,c1=0,c2=0;
									while(n&lt;e.length){
										r=e.charCodeAt(n);
										if(r&lt;128){
											t+=String.fromCharCode(r);
											n++;
										}else if(r&gt;191&amp;&amp;r&lt;224){
											c2=e.charCodeAt(n+1);
											t+=String.fromCharCode((r&amp;31)&lt;&lt;6|c2&amp;63);
											n+=2;
										}else{
											c2=e.charCodeAt(n+1);
											c3=e.charCodeAt(n+2);
											t+=String.fromCharCode((r&amp;15)&lt;&lt;12|(c2&amp;63)&lt;&lt;6|c3&amp;63);
											n+=3;
										}
									}
									return t;
								}
							 };

		var result = '';
		if(flag == 'encode'){
			result = Base64.encode(data);
		}else if(flag == 'decode'){
			result = Base64.decode(data);
		}else{
			result = 'ERROR Method';
		}

		return result;
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.popover-content {
  width: 400px;
}

/*disable bk logo */
.bk-logo-small {
   display:none;
}

.home-link{
	color:#3071a9;
}

.nav-tabs {
    width: 100%;
    float: left;
    border-bottom-color: #d9d9d9;
}

.nav-tabs&amp;gt;li a {
    text-align: center;
    border-width: 1px 1px 0 1px;
    border-style: solid;
    border-color: #e0e0e0;
    background: #f2f2f2;
    color: #444444;
}

.nav-tabs&amp;gt;li a:hover {
    background: #F9F9F9;
    border-color: #d9d9d9;
}

.nav-tabs&amp;gt;li.active a, .nav-tabs&amp;gt;li.active:hover a {
    background: white;
    border-color: #d9d9d9;
    border-bottom-color: transparent;
    font-weight: bold;
    color: #444444;
}

.instructions {
    text-align: center;
    padding: 10px 0;
}

.tabs-dropdown .dropdown-toggle {
    border-width: 1px 1px 0 1px;
    border-style: solid;
    border-color: #e0e0e0;
    border-radius: 4px 4px 0 0;
    color: #444444;
    background: #f2f2f2;
}

.tab-content {
    padding: 10px;
    width: 100%;
    min-height: 300px;
    -webkit-overflow-scrolling: touch;
    background: white;
    border-width: 0 1px 1px 1px;
    border-style: solid;
    border-color: #d9d9d9;
    border-radius: 0 0 4px 4px;
    overflow: hidden;
}

.tab-content .tab-pane {
    color: #566473;
}

@media ( max-width : 480px) {
    .nav-tabs&amp;gt;li {
        float: none;
        border: 1px solid #dddddd;
    }
    .nav-tabs&amp;gt;li.active&amp;gt;a {
        border: none;
    }
    .nav&amp;gt;li&amp;gt;a:hover, .nav&amp;gt;li&amp;gt;a:focus, .nav-tabs&amp;gt;li.active&amp;gt;a, .nav-tabs&amp;gt;li.active&amp;gt;a:hover,
        .nav-tabs&amp;gt;li.active&amp;gt;a:focus {
        background: none;
        border: none;
    }
}

/* Reset bootstrap table*/
.table &amp;gt; thead &amp;gt; tr &amp;gt; th,
.table &amp;gt; tbody &amp;gt; tr &amp;gt; td,
.table &amp;gt; tfoot &amp;gt; tr &amp;gt; th {
    border-top: 0px;
    border-bottom: 0px;
}
}

.left td {
    text-align:left;
}
.right td {
   text-align:right;
}
.ldpair-results {
    text-align:center;
    border: 1px solid #ddd;
}

.center-align {
    margin: 0 auto !important;
    float: none !important;
}

.spacer {
    width:10%;
}


td.cell-right {
    text-align: right;
}
td.cell-left {
    text-align: left;
}

td.cell-center {
    text-align: center;
}

.cell-height-small {
    height: 10px;
    padding:0px;
}

.btn-file {
  position: relative;
  overflow: hidden;
}

.btn-file input[type=file] {
  position: absolute;
  top: 0;
  right: 0;
  min-width: 100%;
  min-height: 100%;
  font-size: 100px;
  text-align: right;
  filter: alpha(opacity=0);
  opacity: 0;
  background: red;
  cursor: inherit;
  display: block;
}

input[readonly] {
  background-color: white !important;
  cursor: text !important;
}
/*
table.ldhap,table.ldhap tr, table.ldhap th {
  background-color: white !important;
}
*/
.container {
  background-color: white;
}
.two-by-two {
  margin-bottom:0px;
  width:100%;
}

.jumbotron {
  background-color:white;
  padding:10px 15px;
}

table.fixed {
    table-layout:fixed;
    width:400px;
    margin-bottom:15px;
}
table.fixed td {
    overflow: hidden;
}

table thead td {
  font-weight:bold;
  text-align: center;
}

.font-weight-bold {
  font-weight:bold;
}

img.logo {
    max-height:150px;
}


img.loading {
    height:107px;
    max-height:10%;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

img.graph-legend {
  display:block;
  margin-left: auto;
  margin-right: auto;
}

.multiselect-container &amp;gt; li {
    padding-left: 50px;
}
.multiselect-item.multiselect-all {
    padding-left: 0px;
    text-decoration: underline;
}
.multiselect-item.multiselect-group {
    padding-left: 30px;
}
.has-feedback .form-control {
    padding-right: 0px;
}
.multiselect-container &amp;gt; li.multiselect-group-clickable label {
    text-decoration: underline;
}
/* Tighten up snpchip platform list only*/
/*   .btn-ldlink-multiselec  */
.multiselect-container &amp;gt; li &amp;gt; a &amp;gt; label {
    padding: 0px 20px 0px 40px;
}

.form-control-feedback {
    top: 0;
    right: -15px;
}

/* Placeholder Style */
::-webkit-input-placeholder {
   font-size: 90%;
}

:-moz-placeholder { /* Firefox 18- */
   font-size: 90%;
}

::-moz-placeholder {  /* Firefox 19+ */
   font-size: 90%;
}

:-ms-input-placeholder {
    font-size: 90%;
}


.ffWarning {
    display: none;
}
/*
.bk-plot-canvas-wrapper {
    max-width:900px;
    overflow-x: scroll;
}
*/

.haplotype {
    color: black;
    background:#C0C0C0; /* if a multiple grouped */ 
}

/* LDhap Heat Map - Version 4 */
/* Pastel Colors light red, light orage, light blue, and light green */
/* Color Code: http://paletton.com/palette.php?uid=7000u0klLMWnHN3kBNFgZMYgZMY */

.overflowx {
    overflow-x:auto;
}
.overflowy {
    overflow-y:auto;
}

.whats_new {
    height:200px;
    border:1px solid #566473;
    overflow-y:auto;
    margin-bottom:25px;
}

.table {
    min-width: 0;
    display: table;
}
.left-c {   width:auto;
    display: inline-block;
    vertical-align: top;
}
.right-c {
    min-width:300px;
    width:65%;
    display: inline-block;
    vertical-align: top;
}


.left-c &amp;gt; table &amp;gt; tfoot &amp;gt; tr &amp;gt; td,
.right-c &amp;gt; table &amp;gt; tfoot &amp;gt; tr &amp;gt; td {
    font-weight:bold;
}


/* New stuff */

/* Header and Footer */
.header img {
    /*
    width: 60%;
    */
}
.header h4 {
    color: #fff;
    line-height: 0.5em;
}
.footer {
    bottom: 0;
    color: #444;
    padding: 25px 0;
}
.footer ul {
    text-align: center;
}
.footer ul li a {
    color: #444;
}
hr.header {
    border-top: 0.5em solid #bb0e3d;
    margin: 0;
}


caption {
    font-weight:bold;
}


/* Rotate the text on SNPchip table */
th.rotate {
  /* Something you can count on */
  height: 142px;
  white-space: nowrap;
}

th.rotate &amp;gt; div {
  transform: 
    translate(0px, 51px)
    rotate(270deg);
  width: 20px;
}
th.rotate &amp;gt; div &amp;gt; span {
  /*border-bottom: 1px solid #ccc;*/
  /*padding: 5px 10px;*/
}
/* These aren't needed and will be weird if transforms don't work */
.csstransforms &amp;amp; th.rotate {
  height: 142px;
  white-space: nowrap;
}


span.formw &amp;gt; label {
    margin-bottom: 0px;
    font-family: "Lucida Grande",Verdana,Arial,sans-serif;
    font-size: normal;
}

.platform-checkbox {
    padding: 0.2em 0.6em 0.3em;
}

/* From style.css
https://www.broadinstitute.org/mpg/snap/ldsearch.php */

.bolded {
    font-weight: bold;
}
.underlined {
    border-bottom: 1px dotted gray;
}
fieldset#columnAcheckbox {
    min-width: 450px;
}
fieldset#columnAcheckbox div.row span.label, fieldset#columnBcheckbox div.row span.label, fieldset.fullwidthcheckbox div.row span.label {
    padding-top: 1px;
    width: 20px;
}
fieldset#columnBcheckbox {
    min-width: 365px;
}
fieldset div.row span.formw select.yesno {
    width: 80px;
}
/* Custom */

fieldset#columnAcheckbox &amp;gt; div.row,
fieldset#columnBcheckbox &amp;gt; div.row {
    margin-left:15px;
    margin-bottom:-12px;
    font-weight:lighter;
    color: #333;
    font-family: "Lucida Grande",Verdana,Arial,sans-serif;
    font-size: smaller;
}


textarea:valid, .ok {
    color: #555;
}
textarea:invalid, .error {
    color: red;
}
.panel-body &amp;gt; h1 {
    font-size: 1.7em;
}
/* Testing */
@media screen and (max-width: 767px) {
  .dataTables_wrapper .dataTables_info,
  .dataTables_wrapper .dataTables_paginate {
    float: none;
    text-align: center; }
  .dataTables_wrapper .dataTables_paginate {
    margin-top: 0.5em; } 
}
@media screen and (max-width: 640px) {
  .dataTables_wrapper .dataTables_length,
  .dataTables_wrapper .dataTables_filter {
    float: none;
    text-align: center; }
  .dataTables_wrapper .dataTables_filter {
    margin-top: 0.5em; } 
}
.legend{
/* css for agreement*/
font-family: Arial, Helvetica, sans-serif;
font-size:14px;
color:#566473;
font-weight: bold;
}

.overlay{
  opacity:0.5;
  background:white;
  pointer-events: none
}

.tools-owner-title {
    padding-top: 5px;
    padding-bottom: 5px;
    background-color: #F5FAFF;
    color: #0C5C97;
}

.ui-dialog.ui-widget.ui-widget-content {
	background:white; /* and no special background for the dialog */
}
.ui-widget-overlay.ui-front { /* you want this */
	opacity:.10;
}
.modal-dialog1 {
    width: 900px;
    margin: 30px auto;
    position: relative;
}

.form-control1 {
    display: block;
    width: 20%;
    height: 30px;
    padding: 6px 12px;
    font-size: 14px;
    line-height: 1.42857;
    color: #555555;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
}

.overlay {
  position: fixed; 
  width: 100%; 
  height: 100vh; 
  background-color: white; 
  opacity: 0.9; 
  z-index: 9999; 
  top: 0; 
  left: 0;
  
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}



.spinner {
  animation: spin 2s infinite linear;
}

/** spin animation */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;gds-main-content&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;GDS main content&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	var session_id = gs.getSessionToken();
	var my_sys_id = gs.getUserID();
	var grUser = new GlideRecord('sys_user');
	grUser.get(my_sys_id);
	var sysUserName = grUser.getValue('user_name');
	
	data.access = '';
	var userName = '';
	  var user_item = new GlideRecord('sys_user');
        user_item.addQuery('sys_id', my_sys_id);
        user_item.query();
        user_item.next();
	if(user_item != null){
	   userName = user_item.last_name + ", " + user_item.first_name;
	}

	data.info = {
		userId: my_sys_id,
		sessionId: session_id,
		userName: userName,
		sysUserName: sysUserName
	};

	data.tasks = [];
	data.userTasks = [];
	data.icSubmittedTasks=[];
	
	data.submittedTasks = [];
	data.icTasks = [];
	data.icSignTasks = [];
	
	//get PI sign record
			var gr1 = new GlideRecord("sc_cat_item");
				gr1.addQuery("short_description", "CCR GDSP Intramural Certification");
				gr1.query();	
				gr1.next();
				var cat_item_id = gr1.getValue('sys_id');


			 var gr_approval_items = GlideRecord('sysapproval_approver');
			 var req_item = gr_approval_items.addJoinQuery('sc_req_item','document_id','sys_id');
			 req_item.addCondition('cat_item', cat_item_id);
       gr_approval_items.addQuery('approver', my_sys_id); 
			 //gr_approval_items.addQuery('document_id.request.requested_for', my_sys_id);
			 gr_approval_items.addQuery('source_table','sc_req_item'); 
			 gr_approval_items.orderByDesc('sys_updated_on');  
			 gr_approval_items.query();
			 while (gr_approval_items.next()){
				 var orginId = '';
				 var tickerNum = '';
				 var org_ticket_num = '';
				 var version = '';
				 var hasParent = '';
				 var selectedOrginId = '';

				 var docId = gr_approval_items.document_id;
            
				 selectedOrginId = gr_approval_items.document_id.contact_type;
				 if(selectedOrginId == '' || selectedOrginId === undefined || selectedOrginId == 'Web' ){
							orginId = gr_approval_items.document_id.sys_id;
							org_ticket_num = gr_approval_items.document_id.number;
							hasParent = 'false';
					}else{
						 var orgIds = selectedOrginId.split("=");
						 var gr_tracking_item = GlideRecord('u_ccr_tracking_t');
						 gr_tracking_item.addQuery('u_orgid',orgIds[0]);
						 gr_tracking_item.query();

						 if(gr_tracking_item.getRowCount() &gt; 0){
									gr_tracking_item.next();
									orginId = gr_tracking_item.u_orgid;
									org_ticket_num = gr_tracking_item.u_ticket_number;
									version = orgIds[1];
									hasParent = 'true';
						 }else {
									orginId = gr_approval_items.document_id.sys_id;
									org_ticket_num = gr_approval_items.document_id.number;
									hasParent = 'false';
						 }
					}

					var ticket_number = '';
					if(hasParent == 'true'){
							ticket_number = 'CCR_IC' + org_ticket_num.substring(8) + '-' + version;
					}else{
							ticket_number = "CCR_IC" + gr_approval_items.sysapproval.number.substring(8);
					}

					var stage_v = gr_approval_items.document_id.context.stage.name;		
							
					if(stage_v == 'Wait for PI to Sign'){
					   var items = {};
									items.ic_id = ticket_number;
									items.study_name = gr_approval_items.document_id.variables.study_name.toString();
									items.project_title = gr_approval_items.document_id.variables.project_title.toString();
									items.submitted_by = gr_approval_items.sysapproval.opened_by.name.toString();
									items.submitted_date = gr_approval_items.document_id.sys_created_on.toString();
									items.status = gr_approval_items.document_id.context.stage.name.toString();
									items.last_update_date = gr_approval_items.sys_updated_on.toString();
									items.stage = stage_v.toString();
									items.sys_id = gr_approval_items.sys_id.toString();
									items.doc_id = gr_approval_items.document_id.toString();
									items.state = gr_approval_items.state.toString();					
						 data.icSignTasks.push(items);
					}
			}
	//end of PI sign Record 

	/*var gr_ic_sign_items = new GlideRecord('sc_req_item');
	    gr_ic_sign_items.addQuery('requested_for', my_sys_id);
	    gr_ic_sign_items.addQuery()*/
	
	var ernames=['er_investigator','er_email','er_phone', 'er_date', 'er_projectNumber', 'er_projectName', 'er_simpleSize','er_prospective', 'er_restrospective', 'er_human', 'er_nonHuman', 'er_germLine','er_somatic', 'er_dnaType', 'er_rnaType',  'er_microbiome', 'er_mitochrondria', 'er_otherType', 'er_specifyOtherType', 'er_snpArrayData', 'er_numSNP', 'er_expressionArray', 'er_numExpression','er_methylationArray', 'er_numMethylation','er_arrayDerive', 'er_microarrayData', 'er_sequenceData', 'er_somaticSnv', 'er_arrayCgh', 'er_wholeGenome', 'er_wholeExome', 'er_targetGenome', 'er_targetExome', 'er_wholeTranscriptome', 'er_targetTrabscriptome', 'er_epigenomicMark', 'er_sanger', 'er_rrna', 'er_association', 'er_arrayDerivedExpression', 'er_rnaExpression', 'er_derivedMethylation', 'er_otherAnalysis', 'er_spcifiedOtherAnalysis', 'er_individual', 'er_aggregate', 'er_notApplicableDataForm', 'orginId', 'version','er_rat', 'er_mouse', 'er_celegans', 'er_drosophila', 'er_yeast', 'er_yeastSpecies', 'er_bacteria', 'er_bacteriaSpecies','er_noHumanOther', 'er_numDerivedGenotype', 'er_numMicroarrayData', 'er_numSquenceData', 'er_numSomaticSnv', 'er_numArrayCgh','er_numWholeGenome', 'er_numWholeExome', 'er_numTargetGenome', 'er_numTargetedExome', 'er_numWholeTranscriptome', 'er_numTargetedTranscriptome', 'er_numEpigenomic', 'er_numSanger', 'er_numRrna','er_legalRestricton', 'er_describedLegal', 'er_informedConsent','er_otherJust', 'er_specifiedOtherJust','er_nonExistConsent','er_nonAddressConsent', 'er_nonAddressRisk','er_precludedConsent','er_otherConsent', 'er_specifiedOtherConsent', 'er_copyConsent', 'er_gpaAgreed', 'er_gpaDisagree', 'er_gpaUnclear','er_irbAgree', 'er_irbDisagree', 'er_alternative']; 
	data.erTasks = [];
	var gr_er_items = new GlideRecord('u_gdsp_user_submission');
		  gr_er_items.addQuery('u_userid', my_sys_id);
	    gr_er_items.addQuery('u_application', 'GDS_ER');
		  gr_er_items.orderByDesc('sys_updated_on');
		  gr_er_items.query();
	while (gr_er_items.next()){
		var er = {};
		er.sys_create_on = gr_er_items.getValue('sys_created_on');	
		er.requested_for =  gr_er_items.getValue('u_apply_for_id');	
		var er_value = gr_er_items.getValue('u_value');
		var er_temp = er_value.split(",");
		var er_Value = {};
		var er_index = 0;
		for(er_index = 0; er_index &lt; er_temp.length; er_index++){
         var er_vals = er_temp[er_index].split("=");
			   er_Value[er_vals[0]] = er_vals[1];
		}
		for(er_index = 0; er_index &lt; ernames.length; er_index++){
			er[ernames[er_index]] = er_Value[ernames[er_index]];
		}
		er.project_name = er.er_projectName;
		er.investigator = er.er_investigator;
	  er.sys_id = gr_er_items.getDisplayValue("sys_id");
		data.erTasks.push(er);
	}	
	
})();

]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;zhoujim@nih.gov&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2017-03-31 16:20:02&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;6f829e9adbf1b20054d8ff621f961937&lt;/sys_id&gt;&lt;sys_mod_count&gt;2550&lt;/sys_mod_count&gt;&lt;sys_name&gt;GDS main content&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_6f829e9adbf1b20054d8ff621f961937&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;zhoujim@nih.gov&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-04-30 18:19:46&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;br/&gt;
&lt;div&gt;
    &lt;div class="col-md-12" id="messageDiv" style="display:none;"&gt;&lt;/div&gt;
    &lt;!--&lt;div class="col-md-12"&gt;
      &lt;input type="button" class="btn btn-primary btn-sm active pull-right" ng-click="backToMain()" value="Home" /&gt;
    &lt;/div&gt;--&gt;
    &lt;div class="col-md-12"&gt;&lt;label&gt;&lt;a href='' class="home-link" ng-click='backToMain()'&gt; Home &amp;nbsp;&amp;nbsp; &gt; &amp;nbsp;&amp;nbsp; &lt;/a&gt;&lt;/label&gt;&lt;span style="display:none;" id="titleDiv"&gt;&lt;/span&gt;&lt;/div&gt;
    &lt;div class="col-md-12 panel-box"&gt;
        &lt;div class="panel panel-success panel-area"&gt;
            &lt;div class="panel-heading panel-header" id="heading_project" role="tab"&gt;
                &lt;h4 class="panel-title"&gt;
                    &lt;a aria-controls="collapseProject" aria-expanded="true" data-target="#collapseProject" data-toggle="collapse" role="button"&gt;
                  &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-minus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
                  Project Information&lt;/a&gt;&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div aria-labelledby="heading_project" class="panel-collapse collapse in" id="collapseProject" role="tabpanel"&gt;
                &lt;div class="tab-content grey-border"&gt;
                    &lt;div class="tab-pane active" id="projectInfo"&gt;
                        &lt;div class="col-md-12" id="gdsErrorDiv" style="display:none"&gt;
                            &lt;font color='#B22222'&gt;
                                &lt;li&gt;Please complete all required fields&lt;/li&gt;
                            &lt;/font&gt;
                        &lt;/div&gt;
                        &lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;
                        &lt;div class="col-md-12"&gt;
                            &lt;div class="col-md-2" label&gt;
                                &lt;label for="projectTitle"&gt;&lt;font color='#B22222'&gt;*&lt;/font&gt;Project Title&lt;/label&gt;&lt;/div&gt;
                            &lt;div class="col-md-10"&gt;&lt;input type="text" class="form-control" id="projectTitle"/&gt;&lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;
                        &lt;div class="col-md-12"&gt;
                            &lt;div class="col-md-2"&gt;
                              &lt;font color='#B22222'&gt;*&lt;/font&gt;&lt;label for="piName"&gt;PI Name&lt;/label&gt;&lt;/div&gt;
                            &lt;div class="col-md-4"&gt;&lt;input id="piName" class="form-control"&gt;&lt;/div&gt;
                            &lt;input type='hidden' id='piFirstName' /&gt;
                            &lt;input type='hidden' id='piLastName' /&gt;
                            &lt;input type="hidden" id="piUserId" /&gt;
                        &lt;/div&gt;
                        &lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;
                        &lt;div class="col-md-12"&gt;
                            &lt;div class="col-md-2"&gt;
                              &lt;font color='#B22222'&gt;*&lt;/font&gt;&lt;label for="piEmail"&gt;PI Email&lt;/label&gt;&lt;/div&gt;
                            &lt;div class="col-md-4"&gt;&lt;input type="text" class="form-control" id="piEmail"/&gt;&lt;/div&gt;
                            &lt;div class="col-md-2"&gt;
                              &lt;font color='#B22222'&gt;*&lt;/font&gt;&lt;label for="piPhone"&gt;PI Phone&lt;/label&gt;&lt;/div&gt;
                            &lt;div class="col-md-4"&gt;&lt;input type="text" class="form-control" id="piPhone"/&gt;&lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;
                        &lt;div class="col-md-12"&gt;
                            &lt;div class="col-md-2"&gt;
                              &lt;font color='#B22222'&gt;*&lt;/font&gt;&lt;label for="piTitle"&gt;PI Title&lt;/label&gt;&lt;/div&gt;
                            &lt;div class="col-md-4"&gt;&lt;input type="text" class="form-control" id="piTitle"/&gt;&lt;/div&gt;
                            &lt;div class="col-md-2"&gt;
                              &lt;font color='darkred'&gt;*&lt;/font&gt;&lt;label for="piBranch"&gt;PI Branch&lt;/label&gt;&lt;/div&gt;
                            &lt;div class="col-md-4"&gt;&lt;input type="text" id="piBranch" class="form-control"/&gt;&lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;
                        &lt;div class="col-md-12"&gt;
                            &lt;div class="col-md-2"&gt;
                              &lt;font color='#B22222'&gt;*&lt;/font&gt;&lt;label for="organismType"&gt;Organism Type&lt;/label&gt;&lt;/div&gt;
                            &lt;div class="col-md-4"&gt;
                                &lt;select id="organismType" class="form-control" ng-model="orgType"&gt; 
                                  &lt;option value="0"&gt;Please select a type&lt;/option&gt;
                                  &lt;option value="human"&gt;Human&lt;/option&gt;
                                  &lt;option value="nonhuman"&gt;Non-Human&lt;/option&gt;
                                  &lt;option value="both"&gt;Both Human and Non-Human&lt;/option&gt;
                                &lt;/select&gt;
                            &lt;/div&gt;
                           &lt;div id="aoInfo" class="col-md-6" style="display:none"&gt;&lt;font color="red"&gt;If the PI information is incorrect, please contact the Authorizing Official to get NED updated&lt;/font&gt;&lt;/div&gt;   
                          	&lt;!--
                            &lt;div class="col-md-4"&gt;
                              &lt;font color='#B22222'&gt;*&lt;/font&gt;&lt;label id="erId"&gt;Do you want to submit a GDS Exception Request?&lt;/label&gt;
                          	&lt;/div&gt;
                            &lt;div class="col-md-2"&gt;&lt;input type="radio" name="er" id="erId1" value="yes" aria-labelledby="erId"/&gt; &amp;nbsp; Yes &amp;nbsp; &lt;input type="radio" name="er" id="erId2" value="no" checked="checked" aria-labelledby="erId"/&gt; &amp;nbsp;No
                            &lt;/div&gt;
						               	--&gt;
                      	&lt;/div&gt;
                        &lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;
                        &lt;div class="col-md-12"&gt;
                          &lt;div class="col-md-2"&gt;&lt;label for="selectParent"&gt;Parent Protocol&lt;/label&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=""&gt;&lt;img ng-click="loadTissueProtocol();" src="contextual_help.png" width="20px" height="20px" Alt="Help" Title="Help"/&gt;&lt;/a&gt;&lt;/div&gt;
                            &lt;div class='col-md-4'&gt;
                                &lt;select id="selectParent" class="selectpicker" multiple&gt;&lt;/select&gt;
                            &lt;/div&gt;
                            &lt;div class="col-md-2"&gt;
                              &lt;input type="button" class="btn btn-primary active pull-right" style="width: 120px; text-align: center;" ng-click="newGDSParent()" value="New Protocol" /&gt;
                          &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;
                        &lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;
                        &lt;div class="col-md-12" align='right' id="saveBt"&gt;
                            &lt;input type="button" class="btn btn-primary active pull-right" style="width: 70px; text-align: center;" ng-click="saveProjectInformation(0)" value="Save" /&gt;
                        &lt;/div&gt;
                        &lt;div class="col-md-12" id="updateBt" style="display:none"&gt;
                            &lt;input type="button" class="btn btn-primary active pull-right" style="width: 70px; text-align: center;" ng-click="saveProjectInformation(1)" value="Update" /&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;!-- User Access Tab content --&gt;

        &lt;div class="panel panel-success panel-area" id="acli" style="display:none;"&gt;
            &lt;div class="panel-heading panel-header" style="padding-top: 5px; padding-bottom: 5px;" id="heading_user" role="tab"&gt;
                &lt;h4 class="panel-title" style="display: flex; justify-content: space-between; align-items: center;"&gt;
                    &lt;a aria-controls="collapseUser" aria-expanded="true" data-target="#collapseUser" data-toggle="collapse" role="button"&gt;
                        &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-minus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
                        User Access&lt;/a&gt;
                &lt;/h4&gt;
            &lt;/div&gt;
            &lt;div aria-labelledby="heading_user" class="panel-collapse collapse in" id="collapseUser" role="tabpanel"&gt;
                &lt;div class="tab-content grey-border" id="access"&gt;
                    &lt;div class="row"&gt;
                        &lt;div class="row"&gt;&amp;nbsp; &lt;/div&gt;
 
                        &lt;div class="panel panel-default"&gt;
                            &lt;div class="panel-heading"&gt;
                                &lt;span class="panel-title"&gt;User(s) who can access the project&lt;/span&gt;
                                &lt;span class="pull-right"&gt;
                                  &lt;button type="button" class="btn btn-primary  btn-sm active mt-0" id="accessBtn" ng-click="createNewUserAccess()" style="width: 70px; text-align: center;"&gt;NEW&lt;/button&gt;
                                &lt;/span&gt; 
                            &lt;/div&gt;
                            &lt;div class="panel-body"&gt;
                                 &lt;!-- remove the input into dialog --&gt;
                                &lt;div style="background-color: lightgrey; padding: 2px 10px; display: flex; align-items: center;" ng-show="c.data.userTasks.length &gt; 0"&gt;
                                    &lt;h4 class="section-title"&gt; User Access Table&lt;/h4&gt;
                                    &lt;span class="badge" style="color: #444; margin-left: 5px;" id="ritm_count"&gt;{{ c.data.userTasks.length }}&lt;/span&gt;
                                &lt;/div&gt;
                                &lt;table class="table table-bordered table-striped table-condensed table-hover" ng-show="c.data.userTasks.length &gt; 0"&gt;
                                    &lt;thead&gt;
                                        &lt;tr&gt;
                                            &lt;td colspan="4"&gt;
                                                &lt;form class="form-inline"&gt;
                                                    &lt;input type="text" class="form-control1" ng-model="searchUserAccess" placeholder="Search" aria-labelledby="collapseUser"/&gt;
                                                &lt;/form&gt;
                                            &lt;/td&gt;
                                        &lt;/tr&gt;
                                        &lt;tr&gt;
                                            &lt;th ng-repeat="column in c.columns3 track by $index" ng-click="c.toggleSort3($index)" style="cursor: pointer"&gt;
                                                {{ column.label }}
                                                &lt;span class="glyphicon small" ng-class="{
                                                'glyphicon-chevron-up': column.sort === 'asc',
                                                'glyphicon-chevron-down': column.sort === 'desc'
                                              }"&gt;
                                  &lt;/span&gt;
                                            &lt;/th&gt;
                                        &lt;/tr&gt;
                                    &lt;/thead&gt;
                                    &lt;tr ng-repeat="row in c.data.userTasks | filter:searchUserAccess" ng-show="$index &gt;= c.pagination3.currentPage * c.pagination3.currentSize &amp;&amp;
                                         $index &lt; (c.pagination3.currentPage + 1) * c.pagination3.currentSize"&gt;
                                        &lt;td class="ritm_number"&gt;{{ row.first_name }}&lt;/td&gt;
                                        &lt;td class="ritm_number"&gt;{{ row.last_name }}&lt;/td&gt;
                                        &lt;td class="ritm_number"&gt;{{ row.access }}&lt;/td&gt;
                                        &lt;td class="ritm_number" ng-show="c.data.access != 'Read_Only'"&gt;&lt;button type='button' class="btn btn-primary active" style="width: 70px; text-align: center;" ng-click="removeUser(row.sys_id);"&gt;Remove&lt;/button&gt; &lt;/td&gt;
                                        &lt;td class="ritm_number" ng-show="c.data.access == 'Read_Only'"&gt;&lt;button type='button' class="btn btn-primary active" style="width: 70px; text-align: center;" ng-click="removeUser(row.sys_id);" disabled&gt;Remove&lt;/button&gt; &lt;/td&gt;
                                    &lt;/tr&gt;
                                &lt;/table&gt;


                                &lt;!-- select the page size --&gt;
                                &lt;form class="form-inline pull-right"&gt;
                                    &lt;div class="pagination form-group" ng-show="c.data.userTasks.length &gt; 0"&gt;
                                        &lt;label for="pageSize16"&gt;
                              Items per page
                            &lt;/label&gt;

                                        &lt;select id="pageSize16" class="form-control" style="display: inline" ng-init="c.pagination3.currentSize = c.pagination3.pageSizes[1]" ng-model="c.pagination3.currentSize" ng-options="sizes for sizes in c.pagination3.pageSizes"&gt;
                            &lt;/select&gt;
                                    &lt;/div&gt;
                                &lt;/form&gt;

                                &lt;!-- select the page index (offset) --&gt;
                                &lt;ul class="pagination" ng-show="c.pagination3.currentSize &lt; c.data.userTasks.length"&gt;
                                    &lt;li ng-repeat="index in c.getRange3() track by $index" ng-click="c.setPage3($index)"&gt;
                                        &lt;a href=""&gt;
                              {{ $index + 1 }}
                            &lt;/a&gt;
                                    &lt;/li&gt;
                                &lt;/ul&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
          &lt;!-- end of User Access --&gt;
     


        &lt;!-- GDSP Tab content --&gt;
        &lt;div class="panel panel-success panel-area" id="gdspli" style="display:none;"&gt;
            &lt;div class="panel-heading panel-header" style="padding-top: 5px; padding-bottom: 5px;" id="heading_GDSP" role="tab"&gt;
                &lt;h4 class="panel-title" style="display: flex; justify-content: space-between; align-items: center;"&gt;
                    &lt;a aria-controls="collapseGDSP" aria-expanded="true" data-target="#collapseGDSP" data-toggle="collapse" role="button"&gt;
                  &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-minus-square"&gt;&lt;/i&gt;&lt;/span&gt; Genomic Data Sharing Plan &lt;/a&gt;
                &lt;/h4&gt;
            &lt;/div&gt;

            &lt;div aria-labelledby="heading_GDSP" class="panel-collapse collapse in" id="collapseGDSP" role="tabpanel"&gt;

                &lt;div class="tab-content grey-border"&gt;
										&lt;div&gt;
                      A &lt;b&gt;Genomic Data Sharing Plan&lt;/b&gt; provides information on the proposed research that will generate large-scale human and non-human genomic data for which the GDS policy applies.   
                      &lt;span class="pull-right"&gt;    
 												&lt;button type="button" class="btn btn-primary  btn-sm active" id="gdspBt" ng-click="createGDSP()" style="width: 70px; text-align: center;"&gt;NEW&lt;/button&gt;
                  		&lt;/span&gt;
                    &lt;/div&gt;
                    &lt;div style="background-color: lightgrey; padding: 2px 10px; display: flex; align-items: center; margin-top: 20px;" ng-show="c.data.tasks.length &gt; 0 &amp;&amp; c.data.access != 'Read_Only'"&gt;
                        &lt;h4 class="section-title"&gt;Draft GDSPs&lt;/h4&gt;
                        &lt;span class="badge" style="color: #444; margin-left: 5px;" id="ritm_count"&gt;{{ c.data.tasks.length }}&lt;/span&gt;
                    &lt;/div&gt;

                    &lt;table class="table table-bordered table-striped table-condensed table-hover" ng-show="c.data.tasks.length &gt; 0 &amp;&amp; c.data.access != 'Read_Only'"&gt;
                        &lt;thead&gt;
                            &lt;tr&gt;
                                &lt;td colspan="3"&gt;
                                    &lt;form class="form-inline"&gt;
                                        &lt;input type="text" class="form-control1" ng-model="searchDraftGDSP" placeholder="Search" aria-labelledby="collapseGDSP"/&gt;
                                    &lt;/form&gt;
                                &lt;/td&gt;
                            &lt;/tr&gt;
                            &lt;tr&gt;
                                &lt;th ng-repeat="column in c.columns track by $index" ng-click="c.toggleSort($index)" style="cursor: pointer"&gt;
                                    {{ column.label }}
                                    &lt;span class="glyphicon small" ng-class="{
                                                'glyphicon-chevron-up': column.sort === 'asc',
                                                'glyphicon-chevron-down': column.sort === 'desc'
                                              }"&gt;
                                  &lt;/span&gt;
                                &lt;/th&gt;
                            &lt;/tr&gt;
                        &lt;/thead&gt;
                        &lt;tr ng-repeat="row in c.data.tasks | filter:searchDraftGDSP" ng-show="$index &gt;= c.pagination.currentPage * c.pagination.currentSize &amp;&amp;
                                         $index &lt; (c.pagination.currentPage + 1) * c.pagination.currentSize"&gt;
                            &lt;td class="ritm_number"&gt;{{ row.project_name }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.sys_create_on }}&lt;/td&gt;
                            &lt;td&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="c.editItem(row.sys_id)" style="width: 70px; text-align: center;"&gt;
                                  Edit
                                &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="c.removeItem(row.sys_id)" style="width: 70px; text-align: center;"&gt;
                                  Remove
                                &lt;/button&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;

                    &lt;!-- select the page size --&gt;
                    &lt;form class="form-inline pull-right"&gt;
                        &lt;div class="pagination form-group" ng-show="c.data.tasks.length &gt; 0"&gt;
                            &lt;label for="pageSize17"&gt;
                              Items per page
                            &lt;/label&gt;

                            &lt;select id="pageSize17" class="form-control" style="display: inline" ng-init="c.pagination.currentSize = c.pagination.pageSizes[1]" ng-model="c.pagination.currentSize" ng-options="sizes for sizes in c.pagination.pageSizes"&gt;
                            &lt;/select&gt;
                        &lt;/div&gt;
                    &lt;/form&gt;
                    &lt;!-- select the page index (offset) --&gt;
                    &lt;ul class="pagination" ng-show="c.pagination.currentSize &lt; c.data.tasks.length"&gt;
                        &lt;li ng-repeat="index in c.getRange() track by $index" ng-click="c.setPage($index)"&gt;
                            &lt;a href=""&gt;
                              {{ $index + 1 }}
                            &lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;

                    &lt;!-- submitted Table --&gt;
                    &lt;br/&gt;&lt;br&gt;&lt;br&gt;
                    &lt;div id="submittedTable" style="background-color: lightgrey; padding: 2px 10px; display: flex; align-items: center;" ng-show="c.data.submittedTasks.length &gt; 0"&gt;
                        &lt;h4 class="section-title"&gt;Submitted GDSPs&lt;/h4&gt;
                        &lt;span class="badge" style="color: #444; margin-left: 5px;" id="ritm_count"&gt;{{ c.data.submittedTasks.length }}&lt;/span&gt;
                    &lt;/div&gt;
                    &lt;table class="table table-bordered table-striped table-condensed table-hover" ng-show="c.data.submittedTasks.length &gt; 0"&gt;
                        &lt;thead&gt;
                            &lt;tr&gt;
                                &lt;td colspan="7"&gt;
                                    &lt;form class="form-inline"&gt;
                                        &lt;input type="text" class="form-control1" ng-model="searchSubmittedGDSP" placeholder="Search" aria-labelledby="submittedTable"/&gt;
                                    &lt;/form&gt;
                                &lt;/td&gt;
                            &lt;/tr&gt;
                            &lt;tr&gt;
                                &lt;th ng-repeat="column in c.columns1 track by $index" ng-click="c.toggleSort1($index)" style="cursor: pointer"&gt;
                                    {{ column.label }}
                                    &lt;span class="glyphicon small" ng-class="{
                                                'glyphicon-chevron-up': column.sort === 'asc',
                                                'glyphicon-chevron-down': column.sort === 'desc'
                                              }"&gt;
                                  &lt;/span&gt;
                                &lt;/th&gt;
                            &lt;/tr&gt;
                        &lt;/thead&gt;
                        &lt;tr ng-repeat="row in c.data.submittedTasks | filter: searchSubmittedGDSP" ng-show="$index &gt;= c.pagination1.currentPage * c.pagination1.currentSize &amp;&amp;
                                         $index &lt; (c.pagination1.currentPage + 1) * c.pagination1.currentSize"&gt;
                            &lt;td class="ritm_number"&gt;{{ row.gdsp_id }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.principal_name }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.project_name }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.status }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;
                                &lt;span ng-switch on='row.approval'&gt;
                                  &lt;span ng-switch-when='Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA review"  title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-when='Waiting for SD Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-when='SD Rejected - Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-when='Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-when='SD Rejected - Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-default&gt;&lt;img src="/images/workflow_approved.gifx" title="Request Submitted" Alt="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="SD Approved" title="SD Approved"/&gt;&lt;/span&gt;
                                &lt;/span&gt;
                            &lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.submitted_date}}&lt;/td&gt;
                            &lt;td&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="viewItem(row.sys_id, row.gdsp_id)" style="width: 70px; text-align: center;"&gt;
                                  View
                                &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-show="(row.approval == 'Waiting for PI Resubmit' || row.approval == 'Completed') &amp;&amp; row.access == null &amp;&amp; c.data.access != 'Read_Only' " ng-click="displayResubmit(row.sys_id)" style="width: 70px; text-align: center;"&gt;
                                  Resubmit
                                &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-show="row.approval != 'Completed' &amp;&amp;  row.access == null &amp;&amp; c.data.access != 'Read_Only'" ng-click="withdraw(row.sys_id, row.gdsp_id)" style="width: 70px; text-align: center;"&gt;
                                  Withdraw
                                &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="report(row.sys_id, row.gdsp_id)" style="width: 70px; text-align: center;"&gt;
                                  Export
                                &lt;/button&gt;
                                &lt;input type="hidden" id="{{ row.sys_id }}_orginId" value="{{ row.orginId}}" /&gt;
                                &lt;input type="hidden" id="{{ row.sys_id }}_ticket_num" value="{{ row.org_ticket_num }}" /&gt;
                                &lt;input type="hidden" id="{{ row.sys_id }}_ticket" value="{{row.gdsp_id}}" /&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;

                    &lt;!-- select the page size --&gt;
                    &lt;form class="form-inline pull-right"&gt;
                        &lt;div class="pagination form-group" ng-show="c.data.submittedTasks.length &gt; 0"&gt;
                            &lt;label for="pageSize18"&gt;
                              Items per page
                            &lt;/label&gt;

                            &lt;select id="pageSize18" class="form-control" style="display: inline" ng-init="c.pagination1.currentSize = c.pagination1.pageSizes[1]" ng-model="c.pagination1.currentSize" ng-options="sizes for sizes in c.pagination1.pageSizes"&gt;
                            &lt;/select&gt;
                        &lt;/div&gt;
                    &lt;/form&gt;

                    &lt;!-- select the page index (offset) --&gt;
                    &lt;ul class="pagination" ng-show="c.pagination1.currentSize &lt; c.data.submittedTasks.length"&gt;
                        &lt;li ng-repeat="index in c.getRange1() track by $index" ng-click="c.setPage1($index)"&gt;
                            &lt;a href=""&gt;
                              {{ $index + 1 }}
                            &lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;!-- end of GDSP --&gt;
        &lt;!-- IC Tab content ng-click='openIcQUestion()' --&gt;
        &lt;div class="panel panel-success panel-area" id="icli" style="display:none;" ng-show="orgType != 'nonhuman'"&gt;
            &lt;div class="panel-heading panel-header" style="padding-top: 5px; padding-bottom: 5px;" id="heading_IC" role="tab"&gt;
                &lt;h4 class="panel-title" style="display: flex; justify-content: space-between; align-items: center;"&gt;
                    &lt;a aria-controls="collapseIC" aria-expanded="true" data-target="#collapseIC" data-toggle="collapse" role="button"&gt;
                              &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-minus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
                              Institutional Certification
                            &lt;/a&gt;
                &lt;/h4&gt;
            &lt;/div&gt;
            &lt;div aria-labelledby="heading_IC" class="panel-collapse collapse in" id="collapseIC" role="tabpanel"&gt;
                &lt;div class="tab-content grey-border" id="IC"&gt;
                  &lt;div&gt;
                     An &lt;b&gt;Institutional Certification Memo certifies &lt;/b&gt; that data submission and sharing is consistent with the informed consent of the study participants. 
                      &lt;span class="pull-right"&gt;
                            &lt;button type="button" class="btn btn-primary  btn-sm active" id="icBtn" ng-click="openIcQUestion()" style="width: 70px; text-align: center;"&gt;NEW&lt;/button&gt;
                      &lt;/span&gt;
                  &lt;/div&gt;
                  &lt;br/&gt;
                  &lt;div&gt;
												&lt;b&gt;Institutional Certification Memo Clarifying Guidance&lt;/b&gt; &lt;br/&gt;
                        More than one Institutional Certification Memo is required for research that began prior to August 31, 2015 (with and/or without consent [one memo for each instance]) and continued past August 31, 2015 when consent is mandatory.  
                    
                  &lt;/div&gt;  
                  &lt;div style="background-color: lightgrey; padding: 2px 10px; display: flex; align-items: center; margin-top: 20px;" ng-show="c.data.icTasks.length &gt; 0 &amp;&amp; c.data.access != 'Read_Only'"&gt;
                        &lt;h4 class="section-title"&gt;Draft ICs&lt;/h4&gt;
                        &lt;span class="badge" style="color: #444; margin-left: 5px;" id="ritm_count"&gt;{{ c.data.icTasks.length }}&lt;/span&gt;
                    &lt;/div&gt;
                    &lt;table class="table table-bordered table-striped table-condensed table-hover" ng-show="c.data.icTasks.length &gt; 0 &amp;&amp; c.data.access != 'Read_Only'"&gt;
                        &lt;thead&gt;
                            &lt;tr&gt;
                                &lt;td colspan="8"&gt;
                                    &lt;form class="form-inline"&gt;
                                        &lt;input type="text" class="form-control1" ng-model="searchDraftIC" placeholder="Search" aria-labelledby="collapseIC"/&gt;
                                    &lt;/form&gt;
                                &lt;/td&gt;
                            &lt;/tr&gt;
                            &lt;tr&gt;
                                &lt;th ng-repeat="column in c.columns2 track by $index" ng-click="c.toggleSort2($index)" style="cursor: pointer"&gt;
                                    {{ column.label }}
                                    &lt;span class="glyphicon small" ng-class="{
                                    'glyphicon-chevron-up': column.sort === 'asc',
                                    'glyphicon-chevron-down': column.sort === 'desc'
                                  }"&gt;
                      &lt;/span&gt;
                                &lt;/th&gt;
                            &lt;/tr&gt;
                        &lt;/thead&gt;
                        &lt;tr ng-repeat="row in c.data.icTasks | filter:searchDraftIC" ng-show="$index &gt;= c.pagination2.currentPage * c.pagination2.currentSize &amp;&amp;
                             $index &lt; (c.pagination2.currentPage + 1) * c.pagination2.currentSize"&gt;
                            &lt;td class="ritm_number"&gt;{{ row.study_name }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.project_title }}&lt;/td&gt;
                            &lt;!--td class="ritm_number"&gt;{{ row.certification_to }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.certification_from }}&lt;/td --&gt;
                            &lt;td class="ritm_number"&gt;{{ row.gpa_organization }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.sd_organization }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.sys_create_on }}&lt;/td&gt;
                            &lt;td&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="viewICItem(row.sys_id, row.sampleTime, row.sampleConsent)" style="width: 70px; text-align: center;"&gt;
                      Edit
                    &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="c.removeItem(row.sys_id)" style="width: 70px; text-align: center;"&gt;
                      Remove
                    &lt;/button&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;

                    &lt;!-- select the page size --&gt;
                    &lt;form class="form-inline pull-right"&gt;
                        &lt;div class="pagination form-group" ng-show="c.data.icTasks.length &gt; 0"&gt;
                            &lt;label for="pageSize19"&gt;
                  Items per page
                &lt;/label&gt;

                            &lt;select id="pageSize19" class="form-control" style="display: inline" ng-init="c.pagination2.currentSize = c.pagination2.pageSizes[1]" ng-model="c.pagination2.currentSize" ng-options="sizes for sizes in c.pagination2.pageSizes"&gt;
                &lt;/select&gt;
                        &lt;/div&gt;
                    &lt;/form&gt;

                    &lt;!-- select the page index (offset) --&gt;
                    &lt;ul class="pagination" ng-show="c.pagination2.currentSize &lt; c.data.icTasks.length"&gt;
                        &lt;li ng-repeat="index in c.getRange2() track by $index" ng-click="c.setPage2($index)"&gt;
                            &lt;a href=""&gt;
                  {{ $index + 1 }}
                &lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
 
                  &lt;!-- IC submitted Table --&gt;
                 &lt;br/&gt;&lt;br&gt;&lt;br&gt;
                 &lt;div style="background-color: lightgrey; padding: 2px 10px; display: flex; align-items: center;" id="submittedICTable" ng-show="c.data.icSubmittedTasks.length &gt; 0"&gt;
                        &lt;h4 class="section-title"&gt;Submitted ICs&lt;/h4&gt;
                        &lt;span class="badge" style="color: #444; margin-left: 5px;" id="ritm_count"&gt;{{ c.data.icSubmittedTasks.length }}&lt;/span&gt;
                 &lt;/div&gt;
                 &lt;table class="table table-bordered table-striped table-condensed table-hover" ng-show="c.data.icSubmittedTasks.length &gt; 0"&gt;
                        &lt;thead&gt;
                            &lt;tr&gt;
                                &lt;td colspan="9"&gt;
                                    &lt;form class="form-inline"&gt;
                                        &lt;input type="text" class="form-control1" ng-model="searchSubmittedIC" placeholder="Search" aria-labelledby="submittedICTable"/&gt;
                                    &lt;/form&gt;
                                &lt;/td&gt;
                            &lt;/tr&gt;
                            &lt;tr&gt;
                                &lt;th ng-repeat="column in c.columns4 track by $index" ng-click="c.toggleSort4($index)" style="cursor: pointer"&gt;
                                    {{ column.label }}
                                    &lt;span class="glyphicon small" ng-class="{
                                    'glyphicon-chevron-up': column.sort === 'asc',
                                    'glyphicon-chevron-down': column.sort === 'desc'
                                  }"&gt;
                      &lt;/span&gt;
                                &lt;/th&gt;
                            &lt;/tr&gt;
                        &lt;/thead&gt;
                        &lt;tr ng-repeat="row in c.data.icSubmittedTasks | filter:searchSubmittedIC" ng-show="$index &gt;= c.pagination4.currentPage * c.pagination4.currentSize &amp;&amp;
                             $index &lt; (c.pagination4.currentPage + 1) * c.pagination4.currentSize"&gt;
                            &lt;td class="ritm_number"&gt;{{ row.ic_id }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.study_name }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.project_title }}&lt;/td&gt;
                            &lt;!--td class="ritm_number"&gt;{{ row.issue_to }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.issue_from }}&lt;/td --&gt;
                            &lt;td class="ritm_number"&gt;{{ row.status }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;
                                &lt;span ng-switch on='row.approval'&gt;
                                &lt;span ng-switch-when='Waiting for GPA Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA review"  title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-when='Wait for PI to Sign'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for PI to sign"  title="Waiting for PI to sign"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;  
                                &lt;span ng-switch-when='Waiting for SD Review'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-when='Waiting for GPA Review - SD Rejected'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for GPA Review" title="Waiting for GPA Review"/&gt;&lt;img src="/images/workflow_pending.gifx" Alt="Waiting for SD Review" title="Waiting for SD Review"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-when='Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;img src="/images/workflow_active.gifx" Alt="Waiting for PI Resubmit"  title="Waiting for PI Resubmit"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-when='SD Rejected - Waiting for PI Resubmit'&gt;&lt;img src="/images/workflow_approved.gifx" Alt="Request Submitted" title="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA Approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="SD Rejected" title="SD Rejected"/&gt;&lt;img src="/images/workflow_rejected.gifx" Alt="GPA Rejected" title="GPA Rejected"/&gt;&lt;/span&gt;
                                &lt;span ng-switch-default&gt;&lt;img src="/images/workflow_approved.gifx" title="Request Submitted" Alt="Request Submitted"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="GPA approved" title="GPA Approved"/&gt;&lt;img src="/images/workflow_approved.gifx" Alt="SD Approved" title="SD Approved"/&gt;&lt;/span&gt;
                                &lt;/span&gt;
                            &lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.submitted_date}}&lt;/td&gt;
                            &lt;td&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="viewSubmittedIC(row.sys_id, row.ic_id)" style="width: 70px; text-align: center;"&gt;
                      View
                    &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-show="(row.approval == 'Waiting for PI Resubmit' || row.approval == 'Completed') &amp;&amp; row.access == null &amp;&amp; c.data.access != 'Read_Only' " ng-click="displayICResubmit(row.sys_id)" style="width: 70px; text-align: center;"&gt;
                      Resubmit
                    &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-show="row.approval != 'Completed' &amp;&amp; row.access == null &amp;&amp; c.data.access != 'Read_Only'" ng-click="withdrawIC(row.sys_id, row.ic_id)" style="width: 70px; text-align: center;"&gt;
                      Withdraw
                    &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-show="row.approval != 'Completed' &amp;&amp; c.data.access != 'Read_Only' &amp;&amp; row.approval != 'Wait for PI to Sign'" ng-click="reportIC(row.sys_id, row.number, 'pi')" style="width: 70px; text-align: center;"&gt;
                      Export
                    &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-show="row.approval == 'Completed' &amp;&amp; c.data.access != 'Read_Only'" ng-click="reportIC(row.sys_id, row.number, 'sd')" style="width: 70px; text-align: center;"&gt;
                      Export
                    &lt;/button&gt;

                                &lt;input type="hidden" id="{{ row.sys_id }}_orginId_ic" value="{{ row.orginId}}" /&gt;
                                &lt;input type="hidden" id="{{ row.sys_id }}_ticket_num_ic" value="{{ row.org_ticket_num }}" /&gt;
                                &lt;input type="hidden" id="{{ row.sys_id }}_ticket_ic" value="{{row.ic_id}}" /&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;

                    &lt;!-- select the page size --&gt;
                    &lt;form class="form-inline pull-right"&gt;
                        &lt;div class="pagination form-group" ng-show="c.data.icSubmittedTasks.length &gt; 0"&gt;
                            &lt;label for="pageSize20"&gt;
                  Items per page
                &lt;/label&gt;

                            &lt;select id="pageSize20" class="form-control" style="display: inline" ng-init="c.pagination4.currentSize = c.pagination4.pageSizes[1]" ng-model="c.pagination4.currentSize" ng-options="sizes for sizes in c.pagination4.pageSizes"&gt;
                &lt;/select&gt;
                        &lt;/div&gt;
                    &lt;/form&gt;

                    &lt;!-- select the page index (offset) --&gt;
                    &lt;ul class="pagination" ng-show="c.pagination4.currentSize &lt; c.data.icSubmittedTasks.length"&gt;
                        &lt;li ng-repeat="index in c.getRange4() track by $index" ng-click="c.setPage4($index)"&gt;
                            &lt;a href=""&gt;
                  {{ $index + 1 }}
                &lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;!-- end of the IC tab createER() --&gt;

        &lt;!-- Exception Request Tab content  tempFunc   data-target="#collapseER"--&gt;
        &lt;!--
        &lt;div class="panel panel-success panel-area" id="erli" style="display:none;"&gt;
            &lt;div class="panel-heading panel-header" style="padding-top: 5px; padding-bottom: 5px;" id="heading_ER" role="tab"&gt;
                &lt;h4 class="panel-title" style="display: flex; justify-content: space-between; align-items: center;"&gt;
                    &lt;a aria-controls="collapseER" aria-expanded="true" data-target="#" data-toggle="collapse" role="button"&gt;
                                  &lt;span class="accordion_icon"&gt;&lt;i class="fa fa-plus-square"&gt;&lt;/i&gt;&lt;/span&gt; 
                                  Exception Request
                                &lt;/a&gt;
                    &lt;button type="button" class="btn btn-primary  btn-sm pull-right" id="erBtn" ng-click="createER()" style="width: 70px; text-align: center;"&gt;NEW&lt;/button&gt;
                    &lt;label&gt;Coming Soon&lt;/label&gt;
                &lt;/h4&gt;

            &lt;/div&gt;

            &lt;div aria-labelledby="heading_ER" class="panel-collapse collapse" id="collapseER" role="tabpanel"&gt;

                &lt;div class="tab-content grey-border" id="ER"&gt;
                    &lt;div style="background-color: lightgrey; padding: 2px 10px; display: flex; align-items: center;" ng-show="c.data.erTasks.length &gt; 0 &amp;&amp; c.data.access != 'Read_Only'"&gt;
                        &lt;h4&gt; Draft Exception Requests&lt;/h4&gt;
                        &lt;span class="badge" style="color: #444; margin-left: 5px;" id="ritm_count"&gt;{{ c.data.erTasks.length }}&lt;/span&gt;
                    &lt;/div&gt;
                    &lt;table class="table table-bordered table-striped table-condensed table-hover" ng-show="c.data.erTasks.length &gt; 0 &amp;&amp; c.data.access != 'Read_Only'"&gt;
                        &lt;thead&gt;
                            &lt;tr&gt;
                                &lt;td colspan="9"&gt;
                                    &lt;form class="form-inline"&gt;
                                        &lt;input type="text" class="form-control1" ng-model="searchDraftER" placeholder="Search" aria-labelledby="collapseER"/&gt;
                                    &lt;/form&gt;
                                &lt;/td&gt;
                            &lt;/tr&gt;
                            &lt;tr&gt;
                                &lt;th ng-repeat="column in c.columns5 track by $index" ng-click="c.toggleSort5($index)" style="cursor: pointer"&gt;
                                    {{ column.label }}
                                    &lt;span class="glyphicon small" ng-class="{
                                    'glyphicon-chevron-up': column.sort === 'asc',
                                    'glyphicon-chevron-down': column.sort === 'desc'
                                  }"&gt;
                      &lt;/span&gt;
                                &lt;/th&gt;
                            &lt;/tr&gt;
                        &lt;/thead&gt;
                        &lt;tr ng-repeat="row in c.data.erTasks | filter: searchDraftER" ng-show="$index &gt;= c.pagination5.currentPage * c.pagination5.currentSize &amp;&amp;
                             $index &lt; (c.pagination5.currentPage + 1) * c.pagination5.currentSize"&gt;
                            &lt;td class="ritm_number"&gt;{{ row.project_name }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.investigator }}&lt;/td&gt;
                            &lt;td class="ritm_number"&gt;{{ row.sys_create_on }}&lt;/td&gt;
                            &lt;td&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="editERItem(row.sys_id)" style="width: 70px; text-align: center;"&gt;
                      Edit
                    &lt;/button&gt;
                                &lt;button class="btn btn-sm btn-primary active" ng-click="removeERItem(row.sys_id)" style="width: 70px; text-align: center;"&gt;
                      Remove
                    &lt;/button&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;
                    &lt;form class="form-inline pull-right"&gt;
                        &lt;div class="pagination form-group" ng-show="c.data.erTasks.length &gt; 0"&gt;
                            &lt;label for="pageSize21"&gt;
                  Items per page
                &lt;/label&gt;

                            &lt;select id="pageSize21" class="form-control" style="display: inline" ng-init="c.pagination5.currentSize = c.pagination5.pageSizes[1]" ng-model="c.pagination5.currentSize" ng-options="sizes for sizes in c.pagination5.pageSizes"&gt;
                &lt;/select&gt;
                        &lt;/div&gt;
                    &lt;/form&gt;
                    &lt;ul class="pagination" ng-show="c.pagination5.currentSize &lt; c.data.erTasks.length"&gt;
                        &lt;li ng-repeat="index in c.getRange5() track by $index" ng-click="c.setPage5($index)"&gt;
                            &lt;a href=""&gt;
                  {{ $index + 1 }}
                &lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
		--&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;!--&lt;div class="col-md-12"&gt;&amp;nbsp;&lt;/div&gt;--&gt;
&lt;input type="hidden" id="hideGDSId" /&gt;
&lt;input type="hidden" id="recId" /&gt;
&lt;input type="hidden" id="access" /&gt;
&lt;input type='hidden' id='refresh'/&gt;
&lt;input type='hidden' id='gdspStatus'/&gt;
&lt;input type='hidden' id='icStatus'/&gt;


&lt;div class="col-md-12"&gt;&lt;label&gt;&lt;a href='' class="home-link" ng-click='backToMain()'&gt; Home &amp;nbsp;&amp;nbsp; &gt; &amp;nbsp;&amp;nbsp;&lt;/a&gt;&lt;/label&gt;&lt;span style="display:none;" id="titleButtomDiv"&gt;&lt;/span&gt;&lt;/div&gt;

&lt;!-- confirm modal --&gt;
&lt;div id="confirmDiv" class="modal fade" data-keyboard="false" data-backdrop="static"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                  &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
              &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmYesNo" class="modal-title"&gt;Confirmation&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                &lt;p align="center" id="message"&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnYesConfirmYesNo" type="button" class="btn btn-primary active" style="width: 70px; text-align: center;"&gt;Yes&lt;/button&gt;
                &lt;button id="btnNoConfirmYesNo" type="button" class="btn btn-default active" style="width: 70px; text-align: center;"&gt;No&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id="userConfirmDiv" class="modal fade" data-keyboard="false" data-backdrop="static"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                  &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
              &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmYesNo" class="modal-title"&gt;Confirmation&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                &lt;p align="center" id="messageDeleteUser"&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnYesConfirmUser" type="button" class="btn btn-primary active" style="width: 70px; text-align: center;"&gt;Yes&lt;/button&gt;
                &lt;button id="btnNoConfirmUser" type="button" class="btn btn-default active" style="width: 70px; text-align: center;"&gt;No&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id="withdrawDiv" class="modal fade" data-keyboard="false" data-backdrop="static"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                    &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
                &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmYesNo" class="modal-title"&gt;Confirmation&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                &lt;p align="center" id="messageWithdraw"&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnYesWithdraw" type="button" class="btn btn-primary active" style="width: 70px; text-align: center;"&gt;Yes&lt;/button&gt;
                &lt;button id="btnNoWithdraw" type="button" class="btn btn-default active" style="width: 70px; text-align: center;"&gt;No&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id="withdrawICDiv" class="modal fade" data-keyboard="false" data-backdrop="static"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                    &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
                &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmYesNo" class="modal-title"&gt;Confirmation&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                &lt;p align="center" id="messageWithdrawIC"&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnYesWithdrawIC" type="button" class="btn btn-primary active" style="width: 70px; text-align: center;"&gt;Yes&lt;/button&gt;
                &lt;button id="btnNoWithdrawIC" type="button" class="btn btn-default active" style="width: 70px; text-align: center;"&gt;No&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt; 

&lt;div id="infoModal" class="modal fade"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;!--button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                    &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
                &lt;/button --&gt;
                &lt;h4 id="lblTitleConfirmOk" class="modal-title"&gt;Information&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                &lt;p align="center" id="messageInfo"&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnOkConfirm" type="button" class="btn btn-primary active" style="width: 70px; text-align: center;"&gt;OK&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id="protocolInfoModal" class="modal fade" data-keyboard="false" data-backdrop="static"&gt;
    &lt;div class="modal-dialog modal-lg"  style="width:1200px;"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;!--button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                    &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
                &lt;/button --&gt;
                &lt;h4 id="lblTitleConfirmOk" class="modal-title"&gt;Information&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
              &lt;p&gt;
              Parent Protocols/Projects may be Tissue Procurement studies, OHRSP exemptions, or other umbrella projects in which multiple protocols/projects with different investigators are conducted under the umbrella protocol/project.  
              &lt;/p&gt; 
              &lt;div&gt;
                &lt;table class="table table-striped table-bordered"&gt;
                    &lt;thead&gt;
                        &lt;tr&gt;
                          &lt;th scope="col" width="25%"&gt;Protocol Number&lt;/th&gt;
                          &lt;th scope="col" width="75%"&gt;Protocol Name&lt;/th&gt;
                        &lt;/tr&gt;
                    &lt;/thead&gt;
                   &lt;tbody&gt;
                     &lt;tr ng-repeat="item in c.protocols"&gt;
                     	&lt;td&gt;{{item.number}}&lt;/td&gt;
                     	&lt;td&gt;{{item.name}}&lt;/td&gt; 
                     &lt;/tr&gt;
   											
                  &lt;/tbody&gt;
                &lt;/table&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer" style="text-align: center"&gt;
                 &lt;button type="button" class="btn btn-primary btn-lg" data-dismiss="modal" aria-label="Close"&gt;OK&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id="loading" class="overlay" style="display:none;"&gt;
  &lt;div class="spinner" style="width: 25px; height: 25px"&gt;
  	&lt;svg version="2.0" class="spinner" width="25" height="25"&gt;
      &lt;circle cx="12.5" cy="12.5" r="10" fill="transparent" stroke="#ccc" stroke-width="2.5" /&gt;
      &lt;path fill="transparent" stroke="#666" stroke-width="2.5" d="M 12.5 2.5 a 10 10 0 0 1 10 10" /&gt;
    &lt;/svg&gt;
  &lt;/div&gt;
  &lt;span&gt;Processing&lt;/span&gt;
&lt;/div&gt;

&lt;div id="addUserAccessDiv" class="modal fade" data-keyboard="false" data-backdrop="static"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                    &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
                &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmYesNo" class="modal-title"&gt;User Access&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                 &lt;div class="row" id="error" style="display:none;"&gt; &lt;/div&gt;
                 &lt;div class="row"&gt;
                     &lt;div class="col-md-2"&gt;
                           &lt;lable for="userName"&gt;User Name&lt;/lable&gt;
                     &lt;/div&gt;
                     &lt;div class="col-md-6 ui-front"&gt;
                          &lt;input type="text" class="form-control" id="userName" style="width:90%;" aria-labelledby="userName"/&gt;
                          &lt;input type='hidden' id='userFirstName' /&gt;&lt;input type='hidden' id='userLastName' /&gt;&lt;input type='hidden' id='userId' /&gt;
                     &lt;/div&gt;
                     &lt;div class="col-md-2"&gt;
                          Read-Write &lt;input type="radio" name="access" value="Read_and_Write" aria-labelledby="userName"/&gt;
                     &lt;/div&gt;
                     &lt;div class="col-md-2"&gt;
                          Read-only &lt;input type="radio" name="access" value="Read_Only" aria-labelledby="userName" checked/&gt;
                     &lt;/div&gt;
								&lt;/div&gt;                
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnAddUserAccess" type="button" class="btn btn-primary active" style="width: 70px; text-align: center;"&gt;Add&lt;/button&gt;
                &lt;button id="btnCancelUserAccess" type="button" class="btn btn-default active" style="width: 70px; text-align: center;"&gt;Cancel&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id="addParentGDSDiv" class="modal fade" data-keyboard="false" data-backdrop="static"&gt;
    &lt;div class="modal-dialog modal-lg"  style="width:900px; "&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                    &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
                &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmYesNo" class="modal-title"&gt;New GDS Parent&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                 &lt;div class="row col-md-12" id="parentError" style="display:none;"&gt; &lt;/div&gt;
                 &lt;div class="row"&gt;
 										&lt;div class="col-md-3"&gt;
                      &lt;font color='red'&gt;*&lt;/font&gt;&lt;label&gt;Protocol Number&lt;/label&gt;
                   &lt;/div&gt;
                   &lt;div class="col-md-9"&gt;
                     &lt;input type="text" id="protocolNumber" class="form-control"/&gt;
                   &lt;/div&gt;
								&lt;/div&gt;   
                &lt;div class="row"&gt;&amp;nbsp;&lt;/div&gt;
                &lt;div class="row"&gt;
 										&lt;div class="col-md-3"&gt;
                      &lt;font color='red'&gt;*&lt;/font&gt;&lt;label&gt;Protocol Name&lt;/label&gt;
                   &lt;/div&gt;
                   &lt;div class="col-md-9"&gt;
                     &lt;textarea id="protocolName" class="form-control" rows="3" &gt;&lt;/textarea&gt;
                   &lt;/div&gt;
								&lt;/div&gt;   
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button type="button" class="btn btn-primary active" style="width: 70px; text-align: center;" id="addNewProtocolBt"&gt;Add&lt;/button&gt;
                &lt;button type="button" class="btn btn-default active" style="width: 70px; text-align: center;" data-dismiss="modal" aria-label="Close"&gt;Cancel&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="protocolConfirmDiv" class="modal fade" data-keyboard="false" data-backdrop="static"&gt;
    &lt;div class="modal-dialog"&gt;
        &lt;div class="modal-content"&gt;
            &lt;div class="modal-header"&gt;
                &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
                  &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
              &lt;/button&gt;
                &lt;h4 id="lblTitleConfirmYesNo" class="modal-title"&gt;Confirmation&lt;/h4&gt;
            &lt;/div&gt;
            &lt;div class="modal-body"&gt;
                &lt;p align="center" id="messageProtocol"&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class="modal-footer"&gt;
                &lt;button id="btnYesConfirmProcotol" type="button" class="btn btn-primary active" style="width: 70px; text-align: center;"&gt;Yes&lt;/button&gt;
                &lt;button data-dismiss="modal" aria-label="Close" type="button" class="btn btn-default active" style="width: 70px; text-align: center;"&gt;No&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>-827778438</payload_hash>
<remote_update_set display_value="CCRGDS_Patch_6_20190425">1196280bdb853f00b86770c08c96194a</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>zhoujim@nih.gov</sys_created_by>
<sys_created_on>2019-04-30 18:20:27</sys_created_on>
<sys_id>ed96280bdb853f00b86770c08c96194a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>16a6f795f700000001</sys_recorded_at>
<sys_updated_by>zhoujim@nih.gov</sys_updated_by>
<sys_updated_on>2019-04-30 18:20:27</sys_updated_on>
<table/>
<target_name>GDS main content</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>af66e4879e853f00240e45a986278b70</update_guid>
<update_guid_history>af66e4879e853f00240e45a986278b70:-827778438,dcf520c7b2853f0070eef11bc3572581:1398534859,44e5e88797853f00b6c97fbb5e7bce84:2103039617,a2c524475b853f004c499e7c4699e1e7:-62771817,b5aa4729a6c93b0057f58e50a35e1cf3:1903117211,bef6f82e0b7c7b0009cc597f1da51488:1537481638,7566f82efa7c7b007dae9d8dab407a81:1547256779,c226f42ebd7c7b009a7243d8c61bd216:1386172630,54d5bceab67c7b00b879580a777858af:2093266948,fab5f8ea647c7b00479a80bdc8388cc3:-1718085223,edb5f8ea817c7b00950311fa21b77f6c:-1316575806,32a5b8ea7f7c7b00a002c238d085b3d5:674882722,53343c6af47c7b007d745c5330f78441:826047020,d0d3346a527c7b00e5ca22bc6d851ec3:-80692412,38833c6ae17c7b00fec1ff82a195dd39:1209864626,a4f2b0e6037c7b00211824dfd5f72eae:514289349,6392fc2a5f7c7b00a359b166b9865476:1878468836,5d92fc2aff7c7b00476a57617ae6281d:1585740982,7f72b82a1b7c7b001897565054489ba7:1102540820,36523c2a187c7b0010debaa754777273:1229371941,b281b02a947c7b001f3194fbbae7cc92:825192786,0cd0fca6f87c7b0029f15a573a409910:718307869,058034a6c27c7b00526bfb37a33bc07e:645021811,eb70bca6697c7b008db8efc07d722bb7:-1638996064,0a3f2c66ea7c7b00a0029475500cb233:-367769166,1bcd6022b77c7b007138b8907003ca27:-69889432,553da0ee3d3c7b004448b8333d74bd59:1240253960,d8bb202e963c7b006a490a23b44e28d0:1553552690,267b2c2e473c7b00df4c6b19edf24362:2084885073,062b242e343c7b00a7c5547b7def0a6c:140219512,e48a20eaef3c7b00c938ad2233c9fe8a:1449995060,865a28aa183c7b00a4b76fee975d0d00:2146864231,ddc8e42a473c7b00600bb23bb81462cd:1452134363,fb494501f5b2af40492643bad308c43a:-680833830,8d494101e5b2af4096b1e811ec73fd48:-402176550,3fd8c3107af6eb4068a1bb83a18a7d08:-501190742,caa23e1058b6eb402db8bc28ce8e5a07:-64159030,8a82fa102ab6eb40d87ec432c4ef1b77:1955580769,9352fedc7676eb40121e766dde20bd57:-1528487871,b676a70d13eaa340406a12d9d11eb399:1955580769,8c76a70d2aeaa34000ff9c10979ae44a:1827783426,07f4a3c91ceaa34024f57472625713b0:-833351552,08e4ab49eceaa34078ab91fbe15694da:-2125745956,da146f493aeaa3408bec8b0f0fc5eb12:-530603780,6414ab49b9eaa3405a6dd7c15866b0a4:-1915945454,c9b3ef494aeaa3403b375b5335c2ccfc:790376690,3f63ef490deaa340a79b8b5c03dac4ba:-188802166,8726aac5a02aa340e1f876cea2b7d4c3:798530142,3aac2de0c6226340e09196ef519a314e:-1998112485,82ea6da8d2226340d77fe84214285c62:28309979,fb2149ac5dae2340166e26aad5572cb7:-778717511,f5af74acedae2340b06e986c2d0bf29e:-71803848,50e91010eee223409d3ecce50069b671:1626776408,dcc91c903ee2234031194ddd7d81a06c:-1705473862,34a91c907ee223400dca109f90b92acd:-94047190,a7591c90f5e223405586ee63f0d90f65:993231062,7a499cdc53a223407f4a272a27319a72:636905899,96091010b3e22340c201014604de5d97:-1810614716,9498d4dc8ca22340b14a77c3aef9515e:-772693073,2ac658101ee22340b24a12955f0f9ff0:1964020704,797658dc9aa22340c589aae7a0d5f003:-190724804,190618dc3062234074f70496e2b633bd:1801744562,fc265f88af22234057f46ca6989890b9:842391369,3606db88fc22234020ac3c09a90f648c:-1338104437,9d069f4820222340468220c8a67a3b07:1936432973,18d593401c2223401f80e723e1ecbd1d:-1940927098,24c51b88bd222340e7f84ede62fbac8c:-1629383899,73b59704ba22234006c4da3a1fb65226:1712748129,88a55f482122234098badc57cd7866ab:-1601948301,fbf63aae5e12af00869b62f44138181d:-1557725351,0d96f26e3f12af00d357e32f38ef6948:30091968,38c57aea4312af000200bf08f653208e:-1346734297,4a95fa2ef212af00d78a2faf60b05af8:-2086013426,4a55beea0612af009598609da14f6743:702224215,fdc172aaf512af002d4312a9b8782b66:1280371908,a79172aaa412af0058312c536d29b45f:1105024349,0e51b66a2f12af001cc8d17570ea1c79:345729513,d901fe2a4f12af00df72668afe4598a0:-1961278120,18c0b66a5b12af000459f7342b268c71:-1063300094,3f907a669912af003a9ffd6073d19018:1353344836,9180fe2a3d12af0081bd616b8eb89299:-1028196792,6020762a1a12af00da2bee1b70c7f737:455647314,7cbf622a7112af009824cf10aad5b67a:2072903345,068f622a7612af00fff011c8524e9b73:-925601359,ae5f2aa6bd12af000fdd69ef40e4f4f0:899165343,d40f2a66ee12af0050ae8015d3fe562f:1806822508,a68e66a6d112af0022230461c822536f:1720016234,e14ee6e2ae12af008aadbad7490e0498:1574782838,de0e26ee21de6f0064dd506ff2cc4571:899165343,780ee626bb12af0005039f0c6a53a0b1:1574782838,eedd2e663112af009630724162741b91:2100729865,47bd22a20e12af00bf9f2b305cc19639:1574782838,c3ad2a66ec12af000bcea82e8ad26627:548923028,828d26660c12af0067aa5ab970a76739:-83327894,07ec62265d12af000eee5c2133c678c9:-1880893211,a6dce6a2db12af00d7a89ca076bd7ea4:-451567419,550ca226c112af00a74313723372d8f7:-310227021,e6eba6e29112af00b712e588a89ee79e:-866622509,82cb6ee24c12af00aa9d2b7115da70c9:821561475,e26bea226b12af000ea2f1c2f4bde0b9:886689678,555b26e29b12af00272796ce15cefc59:836545744,2b3baea2b212af00d36f04484adfd966:1729637249,8a3be2aad5de6f00615670a56d383229:-1108604483,6c3be6eab8de6f0010d7a2634341185f:-833352230,132be6a2c112af00e091caadf3586f14:-473321653,e4dae6a21212af002567df78852944bc:342364000,3faaa6a20512af00c38e0d2e27a508d5:2026465218,faaae6a2cd12af008cd9023a17a49b94:564629667,f09aa6a23712af00ca24de2b11b087ce:-737315262,3b6a66a29d12af003e1f4872d656d66f:-736640590,e06aa2a20712af0082b2a718f13a2359:-2098143762,171a6e6ac5de6f00b8768b178afaa495:-183553578,401aee62b712af007b163e9ba4c6fd75:-2060538475,6df96a62c312af009beacf83161f8f59:1569851748,c9c9ea22fb12af0043c479ca9088f7f1:21192130,4ba92e2aa9de6f007c74feff3e034e3c:506808766,82ced62a75de6f00cbc027bd83058d81:1911387492,779e12aa9ede6f0031bfaf754a3162bf:-2050296586,f14e5e6abede6f00f6bede51b3b7368a:-50998084,ec4e962ae2de6f00c27e8be2f5803b7b:-1386629824,261ed62acfde6f00bac2d458a9087b06:1272561013,a70e9ee654de6f0002efe20c6554da13:216384507,d8cdd62a61de6f00fc3e9f3378d42742:592648952,28ad562acfde6f0044ae27c8acd81ef5:-187864894,f5639eaed69e6f006b2305a95acc591f:395847469,d653166e159e6f007d765a2abc8cc3a2:1380896965,2303d6ae119e6f00ff3e7cb4897db249:-184361987,52f296e6d09e6f007922889fa94dba0a:-1967810084,da8252ae689e6f00a6a17c8202555426:-1094064849,8e421a6ead9e6f0004b6cd873ab8ad85:-477543279,2d329e6e429e6f0018639ccf48b84a04:-1801536077,a8321a2a6c9e6f005698a40aa6f905e4:1869653888,f2e15e6ee49e6f003130552dac8050fd:595484253,81d1d26e229e6f005d617a484c858e82:999724602,dbb19a66fa9e6f00495a9d330c83a61a:466913360,1d41166e429e6f003488aada14611199:1623954655,2521d26e8f9e6f00b7f5148a94ab537c:-6839625,24f05666069e6f00fe08060b9ee9417a:1056357014,492a8a667d9e6f004c4c991142977d4b:25975286,da1a0a2a219e6f00b16f700295c1c8db:2018939890,f2298ee6799e6f00c85e62e2d826c82d:154820552,665886a6419e6f004bbc16b330e47bec:-86465997,b5f7c2a6039e6f00aa594627e45fc679:808253199,9fd742e68c9e6f0078dd3667cdef560c:122241583,4e578e66af9e6f004e6b2a0cfe7976c0:-1267515101,3cf686a6b99e6f00c96bb44c46604ae4:-948452179,b7960666159e6f0003ef93c8a0360b3a:-311064208,1c368e66359e6f006db005e4851ef81d:1727126128,59c58666bc9e6f00b6ec21c6645f0bcc:-2006931267,2bb582666f9e6f001a905b511f04690a:-2011794733,008586664b9e6f009eb87681310b46c5:1298102791,7e450666ca9e6f0038c7c917cb848b32:766261641,5ef40266b19e6f0092d3e61ff57f34a4:-1679272565,3f74c262c59e6f00f184ce92ab168dbd:496918960,c624cea2809e6f00470898b5ca372558:-672048570,81e30ae2759e6f00424f26bf96be96a5:1544471398,79b386e2f79e6f004d35470aa2e2abe7:-672048570,39a1c2ee325e6f00a7aa935ddfd51a7f:-1125559503,33214e6af15e6f0034ec8a0047317b0d:-672048570,97114aae155e6f004e2f0ec9e0c4409a:-981475674,4c6db1e6865e6f00ced0664d9c34e9f2:496918960,a92df9ea255e6f00743af400ca5204d6:-672048570,512971e6c65e6f00614adb83b7cb51d0:-1261744354,97f8f5e2875e6f0085c834422b913e52:657642718,bd9da9665c1e6f0039072f29f28dd45c:-1974603351,3dfb2d6aab1e6f008c9f3501a7281efe:-1311074384,b2aba96a3d1e6f00c9a48cb977323313:558711734,cd7be56a951e6f005ec2f0d6eeebecc0:1958990394,ce3ba9a6e21e6f0074eade2e1fd4944c:-1155441716,cd8ae92ad41e6f0023fcf069d1cecc67:1459698485,b3e9652a6e1e6f00fd966ddc95faefdd:-1311074384,30d9e966891e6f00706b20855b6478e2:-870942012,2899a12a061e6f004bdfab42a1372c55:11176956,65a8e9a64f1e6f00b61a777ae2543899:-440324466,88982d66881e6f00eddc41793a4a1ce5:-1274976530,35086966c81e6f00909484b31f0aeb24:-609653468,7dd46162c21e6f0091cdaf00aa500157:-2092583623,0b84a122fc1e6f0014307996e8bc1388:-2001409892,9a64a122611e6f00fcdc184e45500f82:77399825,9a23e5eeaeda6f00677749a75ab21225:-1581954160,c772a92e4dda6f00a58727fb97b19029:1841988415,81e1ed6e47da6f00bcbed8a3a26dc7f4:-2092583623,05a121ea49da6f00403a51850531102f:688395904,c3441de274da6f00257c502f67a4b501:757321909,1a1d6d1a56526f0010608ed2cec0605a:-2092583623,6b9c615afe526f00763a356c5fc3ee7b:-792087033,137c615a0b526f000e58ca966e9c8474:2015243084,a86c6d1a5b526f0017c09e549f531ec7:-2003674985,33ab611a97526f007292c4b511167ecb:-2092583623,d6ab251afd526f0004e957da4af475cb:-720016378,2a6ba11a78526f00556e6ba102315703:-792087033,0aa9659686526f00657ff62d23e43f38:-604795566,9049a5964d526f00fe84883807341d76:193352950,6219e19681526f0014f7cc85eedd33b9:-71458288,1d0961563a526f009bae5d4d0793ee71:-700167805,43e8a1967e526f00bf6766f99ef7f73f:189676349,39e8e9d21b526f0013b133de448a9fe0:-594388437,bac86d1605526f0027fe217a39156746:-1194872692,5c88e956df526f00738677f9c2da2ecf:193352950,5b28e556bf526f0047a05a1d993c712e:1920584720,36c7a9d217526f001d044ac059c4ec6c:1255359387,50b76d1657526f00cf2e1d48189d463f:196071856,dea72d1649526f001ef2366013eb59d9:1402284796,7ea3ad52c1526f0021ecf1b5349f2536:-1358342529,2063e99e13126f00bfef188dad326121:509383470,023329523c526f00cce2233fc6cb9c56:-850145090,a713a5522e526f0089dfbc17bdab7dbd:-759768406,9fa2ed1279526f00d051634b0e9bbc28:95568400,a4a2ad122a526f001da5e996e2a3ebd0:-2145662878,9c12259ea3126f006d13fdb82a425f2d:-585851094,27d0a5de81126f009a9d6feb2d95ca5e:639890599,e850ed9e5b126f00eba94e5b4af67af6:-1877726559,b39d9d1e5e126f009f36339964395711:80540440,ad7d951e63126f00da59fe912901f726:1809189533,eb4d551e38126f008eb3fd3d7d4ca39d:501136326,743d551e0a126f00e5db871a21017a18:1100035458,b21ddd9a30126f009175e5e0adf8883a:-2061632628,5eec9ddaf0126f001179530ef59203ea:-1617946599,aebcd9da00126f0020b64ac1585906c6:1671925847,6a9c119ad6126f00ca0855633af1cf0e:307633111,ee3c119a55126f00cd013b99fcb6946f:-1317556299,93fbd15adf126f00758c49289d7635ca:2139081532,f4eb515a1d126f00eb668aafed73366e:1846143930,94db995a8d126f007aec8dd4ef0b6028:590008642,1f9bd91a76126f00c56e70c1a360583c:1312768419,52ca51d660126f008b83d10376f4c92e:511350702,30cad11a1a126f00444bdd0ffc321c16:-321763250,c03a11d653126f009094dd8495ed88c2:-1640916487,d909511637126f00fe20c2b05e0af3e0:442710361,20f85552f5126f003c941f6f70a2cd8d:1701085644,86e8d556d8126f001bce7cb5a275ba9d:2077168093,3e98115685126f0075279e9e367fafb6:-848133853,b438d9928d126f0069c52449cb6cc445:1940708474,b5cec11e50de2f009b78505834ac3ede:873950286,f29e011e52de2f006f75b9952fb33477:272362190,b67ecddacdde2f0066e0caf45d705719:-14887237,662e059ac0de2f008f79bc397ec8c9da:1062196047,d2fd45da69de2f00183de1bdd9bd0aa0:-1182460580,95cc459a1bde2f00a88a69ffd535c168:-1550836937,79acc19a74de2f00e6aab471a67c475b:852129463,459c015a68de2f0038b88b6ffd1fba00:849777879,838c019a9ade2f005454a481c482f731:-640576839,068c0dd6c3de2f009738a5e64ce934a0:-1385943912,4fbbc15ab1de2f002b7242393a41d6bb:-883709730,91abc9d689de2f0003ce244e5c64641e:-747385594,f48b851aafde2f00f9da0fedf7c4d4e5:-883709730,596b4d9660de2f00efb73052738f669b:959477079,e01b4dd63ade2f00ac439f2cda39f598:662420023,53ea4dd65fde2f008cb0059cd3a4bd8f:-1782392824,35aa05d684de2f00959df7517187a7b3:-1845627751,977a05d6c3de2f00b65e49b8c225b4ad:801004856,db5a01d6f6de2f007a894141d2af0706:-1069542269,113acd569fde2f0093a838c554126bb7:151096164,fed90d56c7de2f00675288ceb61a2044:-29181999,92d90d56b7de2f008ccf663b4fc5eb28:521981938,3cb90196e4de2f00da13b3934b9ffb7b:2079133926,ca3909160fde2f0054325555a167173f:-1167564451,8329019611de2f00252b30d99be0c274:2037749189,42c84956fdde2f00dd625a3da553f747:903154049,fbf78d1631de2f0014f67dff38499f63:361353873,e0040d520cde2f006440f9dd2f1aca1b:1114263129,fa551812ff5e2f004f8680730e0062e1:-536031290,cc27628cd3c2e70066a9ac4662f599d0:-1667006801,cd1a5967a23d6700655012bb541e8887:707555620,845e056f3ef96700a97c8e100940ca89:1735498012,07e4c5a726f967001267bd8731195677:1469985697,d144cd679cf96700a921e793a5bcb412:-71699523,7ef34d27eaf96700fe0782fccd7019cc:-1863962472,31524da328f96700a7089211dab9f722:344199423,14c7d0135039e300ed5d339d97071566:-628024951,c6571413fa39e300f8d5d6b3b3bee590:-511438335,fac698530839e3009ad50e4c8949d51c:1025504343,6946dc131c39e30021c70996c9ee100b:836647003,84126697c429a340cf05555e30add5d9:1025504343,a11fb51310e5a3407f7cd4fa4d516b86:-948038568,bdee315341e5a340f0540464ae9c0f14:1747321061,82ae759f7aa5a340da4466c2b188da95:449067341,fd5e3d13d7e5a34025e39a74d0d84a20:2012238515,215bb99f66a5a340ece62ae3b3e09967:-1473832167,c90bbd5f9ea5a3406f4d701da082bdc6:449067341,82aaf95fa2a5a340f21708785f3a7b29:-1253531515,3251bb22f7ad23404c858ae962408dfb:469392613,8151b3229ead2340efc576b9c84efb68:1944371771,1e31b32238ad2340ddec7c34f0c8ba42:1307065983,63d03722fcad234009cd8beab28b73c7:-1379193467,c0ffabee6d6d2340902873627b663ce7:-2060588120,b49fe7ee746d23402ba6914275ea9de3:-1584169197,c63f27eea96d2340462e66883ed2447e:-1187715786,220fefaed16d2340aaedd34a0ead76d0:-1952761250,e5deefaedc6d234067768c86cfa77ac8:-456588180,82ceabae296d2340d190fe7d18ee68f0:-368188155,2e6eabaea06d23406f7e980bd42837a4:761648576,226c232ef26d23408f5db41c9abf5be3:889072854,18aa636a526d23403ca2317d61ab1338:-206184503,5ca5b6a2b4e92340246f28729bce4874:1193098057,b1f4f2a209e923400b02713ce757acad:-1231594795,7673766276e92340ddcc4ca4d8c91de0:-1522773336,2553fa2273e923403c3c7dc93697f919:1892868475,0b137662dbe923406df523ab213284d8:1587089775,a7bf1a9ce22dab0075b01f30f6a62c60:2072278735,768f565cc42dab00ffa835b3890a265d:-685093477,067f929c252dab00374cc65a8b70337c:741495713,924f529ca42dab0004ca0f4791f56629:-575287854,3a0f5a1ca42dab00f5e2d96dc0934e52:-1009673978,91fe1298882dab00088300e1f717fab6:275848156,129e9a5cc92dab00d8e9f14a785408f2:-1514791823,0e2e9a58012dab0027086259ae6bba8a:1249021637,9b0ede58d02dab008832610e7eb89501:-1501362447,bba9ee00d069eb0018826a18e4d50a73:1501802944,326184965e15670008a6fa50d912bb73:-956084805,4851801af815670070b0d7ea7c751cd8:-1573804434,9221ccd6b3156700682abc62d0399e1a:-577094927,610188d6be156700c8f3f1a904eddf78:-1249905148,2da084d6b01567002db91e86ce24b12c:1986147450,c090cc96fb15670090d3848955e099f6:1403986276,0310c49639156700fabf45d1e7746b67:-862068834,88af3b864d156700e20ec77854c0e7a7:949580008,b29f3386f21567000b5e4bb3c48edf2f:927354794,c39e7746a51567003ce29de0e471fc22:-862068834,bf2ebb8278156700de5e215c6f5dbf8d:1473650797,1f0ebfc252156700965721398b8cca51:-1148374229,3a7d7b020d156700611dffb66042be50:1441527657,186dfb821d156700ada7cf7f5bd98a57:-655243990,c2aa7b8a8bd167003fd9905f47ba055d:1441527657,6665156b03892f40b1e1da70ecd4c28e:-1415021461,2f9299275a892f4056c139cab814bdfb:1604736709,a892dd67ef892f40563af63ba5ef55e0:1645815908,bd52d96790892f40f4361a217d1e8a47:-1567602370,6df15d27f6892f40072f6b3e21f46859:-1415021461,eab19127ee892f407f9ec30835a42b53:-583827258,6091552711892f40f10dcb9e96206ba3:-638741331,ed5b49efe0492f406a8e06f6e108b2e7:-1415021461,f60c5d48b9339f001d145bfbafc350d7:1985348043,a0eb5d8828339f000c1347b8480112a5:957724443,9dab958870339f00c609b297f39ecf4f:2042721942,8d8b5d881a339f007672b6c4bc51809c:74936377,db2b1588dc339f0020853662d06b8440:2042721942,57fa958869339f005d4b6cc9acae2948:171396872,a0ead94883339f0075dcdb356835991f:326122496,99ca5188fe339f00652c57588cd3d006:410263843,2faa95c494339f00d918f27ad97361ba:1437887443,279a9d4832339f00ead04ced996a9fdc:-74018972,a68a5d489d339f00d183a9d84c0116c6:-122836952,a55a19c4dc339f007fc25641cbf1dc4d:-1670710184,414ad5088f339f00ec14c00b86704db3:850552825,d5d9d1c479339f001fc2d6f33b00aceb:1894342187,037959084d339f00ab90c4556cc04256:1000397902,a2681580fc339f0011dd3f76122204ec:-612970028,939795448d339f003884eb0437c6a941:1842693365,75e6d50491339f00dc459779ea31ed56:161882851,f7c69d804f339f009fea1e8b1d556be0:-334677608,06261104da339f0021716d9948feec40:161882851,7cd5dd8058339f005559e731badb9416:-851482530,eb94598035339f00317505ba7a82f20f:885687549,86e48c63702b5f0067d6663ed50a6e5b:-1072309786,e3d48823ec2b5f00539eab8e892ba600:1551575761,11a4cca36d2b5f00da7cd901c2fd5c36:417659419,ec3282356da75b00710a386a725d7935:1121064244,f1020ef1d8a75b00bd06eb64de6af608:1525831204,4ee10af1e5a75b00710c2fcb0466a5de:-242664156,999102b14ca75b009bc40f705957a6ae:730609109,458106f1dda75b00bce4a48fc481c3d1:-103216594,f33146b1d7a75b00313800d95740994b:710924951,52318eb12fa75b006c01aac9f5d9a19a:2062164757,f69082b1d1a75b0041abcfa942612162:384987911,698042b1d3a75b002ac2a76f8ce50c43:1772812502,be7082b1eea75b0040e02ede9d926e5a:484910575,9930ca7120a75b00a4ba2227db61498f:631347291,4a78f1f94c675b000829ea64466beb34:1071140693,9f58b1f954675b007971f74ea2414a16:-976272209,bfa7b9b96d675b00d012598590224702:814797249,645735b926675b005b14eef5c7e8a2d0:-422106987,5147fd7945675b00355d58bbc71ba51b:-1300821762,89813965896b1b0033309729970ebe41:-579835515,767175ad916b1b00354aa8e3f1abe814:213943947,758425e1316b1b00dfd0fd18c27ca9c1:-1526096691,71602f85fe2797002ac4448489ab16bc:-1063527472,61515745a92797005f052b8a29f91b50:238328626,33fd4b41d22797001c06259e625342d8:-344450111,4a3dcb8dc0e39700dfbfb4ff9bfc8f2b:1222664891,e1fc03cd35e39700ee653a3bfc347cee:1489115771,581c470139279700406bc99c8c46e585:722946790,a7bb4701ed279700cb690ef4050ca45d:-482255258,a8e4cb4583e397009cd29e85c31731f8:-1156012113,ee8efac910a397009c4462bea34800f4:-2055780770,d9ed3e0db9a39700c8961c852d69fe0e:-762442090,aaecdbb0182b5700eeb5682ddf8400da:2098913274,8e9c97b0812b570016ee4a70a993a2fe:221771237,107c97b08a2b5700cac30f092f7e68fb:-1584171737,922cdf703a2b570079930da3fb3404bf:-889873747,5beadf306e2b5700ba756a09b3c422c1:1939753709,6f6c2e38f36757008d59b155f2d602f0:1754483537,349a0a6b729f53008ed6f1c032b809ba:191597921,8c5ac6ab229f530066926bbc2ee3d61c:-565378932,494a4ee7a29f53002d6c95f40cde47a4:227802459,1e1ac6ab649f53006d8747de9d7d9cbc:-1443820656,bd290ae7a99f530011891940e951b47c:1393280431,3909ce6b4a9f5300a30b284f594c59c1:-334336576,40e88e6bfe9f5300a249c3dd64c06d5a:-1944966971,ddc80ae7259f5300e36c5b113e01b76a:1385936361,fa580ea3d69f5300653512489d38f87d:1615891668,6d288e63dd9f5300f6e3aa4b3e9cb9da:855066148,e4564aefa75f53004670161a71683666:87884391,2e164eaf7b5f5300bc1321a1dd089a71:-1949820762,f0160ae72d9f5300d15b258d5377f21e:-801260192,7f06752f815f530013f6dcb66935ad63:87884391,bbd5f12f215f530084ed4a7cdd65f4a3:-1794740989,d2c5b12fd25f5300270ab058f3be91ba:1572746511,2d53292b501f5300c48f3df4a6a0c7a2:1340925273,d623a5efbd1f5300f83795449e2d5f05:1321084429,d92365ef681f53009eed1f3f274f37ad:-1502926394,9ca26daf691f5300a04cf421990b7891:-1609222554,919225afe91f5300c174d4ab8563e19b:1825376647,9e72e5af001f53008aa1d8292ada1066:-1043912247,6752e56fd71f5300485cd783c7d2af88:1499609098,3d42a927e61f53006595484a1a3b1b0e:-1212554102,0b226d6fd31f53009dd364cfbd85b8c7:-1841736342,5b12692f221f5300f6750163b5ba2426:4736489,80126dab791f530028c62e4b76c5feda:1750580072,82f1e56fcc1f53007e8e112b92058675:-106057048,9be16d2fa21f5300af7c99fc9bfc135f:2067681391,17c1e1eb1c1f5300d821138645a4b85b:-1851900631,a091adabe81f5300afab58f622d2ffce:-106057048,c4816dabca1f530005e20859304076d4:1892950694,9b21e5abca1f53002dcb552845c91413:1430152648,3211a5ab341f5300a772fd07379af135:-1558679590,cff0292bb51f5300e0c5bb28383be7c5:588930243,f3aeaa19b91b9300aa0b0e53476e80ef:-871582207,838c6655eb1b93005219a5f8f3fa6edf:609949665,1eeb2a151b1b9300a6cb92e656c57780:-1767042503,2ccb66d1a11b9300c7c2dffbbb10d431:-1788557490,879baad1fd1b930097031f09bac25acf:-425895689,0a6ba215381b93007d8fa5befa7fa3c3:1266842752,bdfae6d1c81b93002ebe07e2d94aa4ee:-414337529,6feae691721b93001431e9dd1f99b74c:664943181,5baa6e91da1b930024718af9736fde8b:-1228542650,a6e00124d7031b00c4d1b5f8b2645526:629995541,e32041200b031b006a3fa93b4db54747:344965778,5a49d4c3842e1f006e604360c2432123:-1749245678,0633160de011134032cd9145bb685211:-876465940,2cd9e9e03edd1f00b552afc6f47043ab:-1027339250,c2a929a03add1f0035483f8384329a74:1765632768,8469ada8dd9d1f00d085412e6659d9aa:1310395403,3c2969605bdd1f001a90d5079e35e595:-688255449,1f38a1a0e2dd1f001610f75915bd9e6b:-1996721107,e318ad6041dd1f001b196eba7ccf2709:1467454029,16b7a520c7dd1f00e8a796595b71dd51:-938667929,8117616009dd1f00546db558ceffd4b6:1586626387,6db62d20f0dd1f007d814f77c8d5d7ca:-1895817030,64862120ebdd1f0010f3c919062659f6:1586626387,ca46a52058dd1f00e96f9a5af1b5594a:426284553,65a5adecab9d1f0050bd3082ed669a15:-2141018051,cd752deca89d1f00e7d46002d4666d2f:746947285,1364a1ac3a9d1f00ef3f716fb5f90cec:2030126803,d73461ac1e9d1f00bb7fb789590c8b11:1492711655,2f1461e86f9d1f00268c64b37eeab857:1382643181,c704a92c659d1f00020f2fdeffa419d4:-659569008,00a3656c959d1f00717fb6a29cc764d7:863524939,4a63616cb89d1f00d1c116012633d12d:870979499,5a13a92c559d1f00e0d2e615a7c65ddd:-1325414716,8913612c419d1f004c548cb7bad58414:2018727972,750365e8c09d1f009e3479627612fa2a:640642503,a0d2e968029d1f00bc15ddb11030ae08:207694561,34b1a1e42a9d1f009f62f8781f0a482f:1794989280,d14121688b9d1f004af53f6aa6a063f2:-4563488,e51129681e9d1f00137b0c9c67b93d03:-152774548,8780e1a4239d1f001da35cb72d548cb0:57200893,9a20e968a79d1f00bd19a37321a8a301:50759594,a46f11686c9d1f0015491fdb6663e1e6:896026811,520fd1e8bd5d1f0010901d2e16be2734:1390877635,3dbe59e4f39d1f00c8891ed6a6721308:1283056168,68cd59e41f9d1f00b604be17077a7c01:-1580718378,973d99acc35d1f00b4b4d2e841e1bca1:-1898048799,d9dc51a4139d1f00633e4adbe96b5f8d:-2040062220,accc1124139d1f00d56afb6573f26248:-1271617473,533c9560b59d1f00aa8076003464271f:-1517741531,7c0cdde0c69d1f0021b55f94cb058bce:-120511095,39c855a08c9d1f0034083c5a8124e499:329646761,2e98d5e0999d1f00b0a449bb388c728f:123238215,061859acf45d1f004da1bf829195adbf:36703271,db4251ec7b5d1f00d2f4016ccc116355:-1306234201,89d151ac955d1f006b29a214784c48ba:904689287,39b1d1acc35d1f00c92fb7269eb41ceb:-1489052376,4d9195ac205d1f00380984e1a6461ea6:-279844796,df619d6cbb5d1f00b268a2a58f79c162:-103584463,1131d1ac375d1f00c403a4a5de2d86e5:604828036,83f0156c105d1f00c60cc507a96376df:-103584463,8cff816c325d1f0011ef096574ac5b1b:1122678797,a1df89a4eb5d1f004bfc9711b944d682:877180125,858f4568495d1f00b973e4dc387a6f39:-74865290,52e72897ea8d5b00791d7b27447a0f10:1292429165,a5f2ec130c8d5b0038621df4a3cdf8eb:-1708271084,75a2e093968d5b00817b856e5268544a:1710008432,2e92a093ba8d5b0099687cba54bd7cc1:851877809,ff626093608d5b0021b9b039c4ed5c26:955307484,b7f1e453318d5b005f9bce717377c5e5:-2129282262,72b160131c8d5b00a7bc370c152f18ef:957900521,12816053098d5b00f3c13c6e12d5cbef:649632329,fd71e4530c8d5b00bf0c53b821be4dde:-1399985989,fc71e453ab8d5b001a0b800929278395:-771768522,4851a4534a8d5b00110abb5c35339f6a:-1203814213</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
